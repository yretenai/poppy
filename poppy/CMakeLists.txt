project(poppy)

add_library(poppy SHARED public/poppy/manifest/rman_generated.h)
set_target_properties(poppy PROPERTIES POSITION_INDEPENDENT_CODE 1)
target_compile_definitions(poppy PRIVATE DRAGON_LIBRARY_NAME="poppy")
if(MSVC)
    generate_export_header(poppy BASE_NAME poppy DEFINE_NO_DEPRECATED EXPORT_FILE_NAME ${PROJECT_SOURCE_DIR}/public/poppy/poppy_export_win.a.h)
else()
    generate_export_header(poppy BASE_NAME poppy DEFINE_NO_DEPRECATED EXPORT_FILE_NAME ${PROJECT_SOURCE_DIR}/public/poppy/poppy_export_linux.a.h)
endif()
target_include_directories(poppy PUBLIC ${PROJECT_SOURCE_DIR}/public)
add_subdirectory("private")
find_package(zstd CONFIG REQUIRED)
find_package(ZLIB REQUIRED)
find_package(Flatbuffers CONFIG REQUIRED)
target_link_libraries(poppy PRIVATE libzstd)
target_link_libraries(poppy PRIVATE ZLIB::ZLIB)
target_link_libraries(poppy PUBLIC flatbuffers::flatbuffers)

file(GLOB_RECURSE POPPY_HEADERS "public/*.h" "public/*.hpp")

include(GNUInstallDirs)
install(TARGETS poppy LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
install(DIRECTORY public/poppy DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
