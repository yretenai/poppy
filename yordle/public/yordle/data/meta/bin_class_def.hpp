/// <auto-generated>
#pragma once

#include <array>
#include <cstdint>
#include <memory>
#include <set>
#include <string>

#include <yordle/yordle_export.h>
#include <yordle/data/meta/bin_class.hpp>
#include <yordle/data/meta/bin_dispatch.hpp>
#include <yordle/data/prop/inline_structure_prop.hpp>
#include <yordle/data/prop/map_prop.hpp>
#include <yordle/data/prop/optional_prop.hpp>
#include <yordle/data/prop/primitive_array_prop.hpp>
#include <yordle/data/prop/primitive_prop.hpp>
#include <yordle/data/prop/set_prop.hpp>
#include <yordle/data/prop/string_prop.hpp>
#include <yordle/data/prop/unordered_set_prop.hpp>

namespace yordle::data::meta {
    class YORDLE_EXPORT WardSkinDisabler : public bin_class { 
    public:
        explicit WardSkinDisabler(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4197693672 || bin_class::is_type(type);
        }

        bool DisableAllSkins = false;
        std::set<uint32_t> DisabledIds {};
    };

    class YORDLE_EXPORT IContextualAction : public bin_class { 
    public:
        explicit IContextualAction(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1073283193 || bin_class::is_type(type);
        }

        uint32_t mHashedSituationTrigger = 0;
        uint32_t mMaxOccurences = 0;
    };

    class YORDLE_EXPORT ContextualActionPlayAnimation : public IContextualAction { 
    public:
        explicit ContextualActionPlayAnimation(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3095435268 || IContextualAction::is_type(type);
        }

        uint32_t mHashedAnimationName = 0;
        bool mPlayAsEmote = false;
    };

    class YORDLE_EXPORT ContextualActionTriggerEvent : public IContextualAction { 
    public:
        explicit ContextualActionTriggerEvent(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 500070696 || IContextualAction::is_type(type);
        }

    };

    class YORDLE_EXPORT ContextualActionPlayAudio : public IContextualAction { 
    public:
        explicit ContextualActionPlayAudio(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1668724992 || IContextualAction::is_type(type);
        }

        std::string mSelfEventName {};
        std::string mAllyEventName {};
        std::string mEnemyEventName {};
        std::string mSpectatorEventName {};
        bool mWaitForAnnouncerQueue = false;
        bool x54cd5fca = false;
        bool xbeb655b5 = false;
        std::string x66a1c28b {};
        float mWaitTimeout = 0.0;
    };

    class YORDLE_EXPORT ContextualActionPlayVO : public ContextualActionPlayAudio { 
    public:
        explicit ContextualActionPlayVO(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 696305421 || ContextualActionPlayAudio::is_type(type);
        }

    };

    class YORDLE_EXPORT IContextualCondition : public bin_class { 
    public:
        explicit IContextualCondition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3400586476 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT ContextualConditionNegation : public IContextualCondition { 
    public:
        explicit ContextualConditionNegation(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1104587944 || IContextualCondition::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IContextualCondition> mChildCondition {};
    };

    class YORDLE_EXPORT ContextualConditionItemID : public IContextualCondition { 
    public:
        explicit ContextualConditionItemID(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1086321689 || IContextualCondition::is_type(type);
        }

        std::set<uint32_t> mItems {};
    };

    class YORDLE_EXPORT ContextualConditionMultikillSize : public IContextualCondition { 
    public:
        explicit ContextualConditionMultikillSize(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2611344701 || IContextualCondition::is_type(type);
        }

        uint8_t mMultikillSize = 0;
    };

    class YORDLE_EXPORT ContextualConditionKillCount : public IContextualCondition { 
    public:
        explicit ContextualConditionKillCount(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 888087826 || IContextualCondition::is_type(type);
        }

        uint16_t mTotalKills = 0;
        uint8_t mCompareOp = 0;
    };

    class YORDLE_EXPORT ContextualConditionItemVOGroup : public IContextualCondition { 
    public:
        explicit ContextualConditionItemVOGroup(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3828924738 || IContextualCondition::is_type(type);
        }

        uint32_t mItemVOGroupHash = 0;
    };

    class YORDLE_EXPORT ContextualConditionHasItemFromVOGroup : public IContextualCondition { 
    public:
        explicit ContextualConditionHasItemFromVOGroup(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2121488724 || IContextualCondition::is_type(type);
        }

        uint32_t mItemVOGroupHash = 0;
    };

    class YORDLE_EXPORT ContextualConditionLastBoughtItem : public IContextualCondition { 
    public:
        explicit ContextualConditionLastBoughtItem(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3450583319 || IContextualCondition::is_type(type);
        }

        uint32_t mItem = 0;
    };

    class YORDLE_EXPORT ContextualConditionRuleCooldown : public IContextualCondition { 
    public:
        explicit ContextualConditionRuleCooldown(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3030776672 || IContextualCondition::is_type(type);
        }

        float mRuleCooldown = 0.0;
    };

    class YORDLE_EXPORT ContextualConditionChanceToPlay : public IContextualCondition { 
    public:
        explicit ContextualConditionChanceToPlay(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 766985824 || IContextualCondition::is_type(type);
        }

        uint8_t mPercentChanceToPlay = 0;
    };

    class YORDLE_EXPORT ContextualConditionMoveDistance : public IContextualCondition { 
    public:
        explicit ContextualConditionMoveDistance(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1605316801 || IContextualCondition::is_type(type);
        }

        float mDistance = 0.0;
        uint8_t mCompareOp = 0;
    };

    class YORDLE_EXPORT ContextualConditionCharacterLevel : public IContextualCondition { 
    public:
        explicit ContextualConditionCharacterLevel(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1454228832 || IContextualCondition::is_type(type);
        }

        uint8_t mCharacterLevel = 0;
        uint8_t mCompareOp = 0;
    };

    class YORDLE_EXPORT ContextualConditionTimeSinceStealthStateChange : public IContextualCondition { 
    public:
        explicit ContextualConditionTimeSinceStealthStateChange(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2646785396 || IContextualCondition::is_type(type);
        }

        uint8_t mStateToCheck = 0;
        uint8_t mCompareOp = 0;
        float mTimeThreshold = 0.0;
    };

    class YORDLE_EXPORT ContextualConditionMarkerName : public IContextualCondition { 
    public:
        explicit ContextualConditionMarkerName(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1442744202 || IContextualCondition::is_type(type);
        }

        std::set<std::string> mMarkerNames {};
    };

    class YORDLE_EXPORT ContextualConditionNeutralMinionMapSide : public IContextualCondition { 
    public:
        explicit ContextualConditionNeutralMinionMapSide(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 92678189 || IContextualCondition::is_type(type);
        }

        uint8_t mTeamCompareOp = 0;
    };

    class YORDLE_EXPORT ContextualConditionNeutralMinionCampName : public IContextualCondition { 
    public:
        explicit ContextualConditionNeutralMinionCampName(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2644467766 || IContextualCondition::is_type(type);
        }

        uint32_t mCampName = 0;
    };

    class YORDLE_EXPORT ContextualConditionNeutralMinionCampIsAlive : public IContextualCondition { 
    public:
        explicit ContextualConditionNeutralMinionCampIsAlive(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2698836486 || IContextualCondition::is_type(type);
        }

        bool mCampIsAlive = false;
    };

    class YORDLE_EXPORT ContextualConditionNeutralCampId : public IContextualCondition { 
    public:
        explicit ContextualConditionNeutralCampId(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3967297150 || IContextualCondition::is_type(type);
        }

        uint8_t mCampId = 0;
    };

    class YORDLE_EXPORT ContextualConditionSituationHasRecentlyRun : public IContextualCondition { 
    public:
        explicit ContextualConditionSituationHasRecentlyRun(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3867527440 || IContextualCondition::is_type(type);
        }

        uint32_t mSituationNameHash = 0;
        float mTime = 0.0;
    };

    class YORDLE_EXPORT ContextualConditionMapID : public IContextualCondition { 
    public:
        explicit ContextualConditionMapID(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 160416398 || IContextualCondition::is_type(type);
        }

        uint32_t mMapIDs = 0;
    };

    class YORDLE_EXPORT ContextualConditionObjectiveTakeByMyTeam : public IContextualCondition { 
    public:
        explicit ContextualConditionObjectiveTakeByMyTeam(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2095729679 || IContextualCondition::is_type(type);
        }

        uint32_t mTakenObjective = 0;
    };

    class YORDLE_EXPORT ContextualConditionMapRegionName : public IContextualCondition { 
    public:
        explicit ContextualConditionMapRegionName(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3222630896 || IContextualCondition::is_type(type);
        }

        uint8_t mRegionType = 0;
        std::string mRegionName {};
    };

    class YORDLE_EXPORT ContextualConditionTurretPosition : public IContextualCondition { 
    public:
        explicit ContextualConditionTurretPosition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2156731698 || IContextualCondition::is_type(type);
        }

        uint8_t mTurretPosition = 0;
    };

    class YORDLE_EXPORT ContextualConditionHasGold : public IContextualCondition { 
    public:
        explicit ContextualConditionHasGold(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1420908503 || IContextualCondition::is_type(type);
        }

        float mGold = 0.0;
    };

    class YORDLE_EXPORT ContextualConditionCustomTimer : public IContextualCondition { 
    public:
        explicit ContextualConditionCustomTimer(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1904648305 || IContextualCondition::is_type(type);
        }

        float mCustomTimer = 0.0;
    };

    class YORDLE_EXPORT ContextualConditionGameTimer : public IContextualCondition { 
    public:
        explicit ContextualConditionGameTimer(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1010350366 || IContextualCondition::is_type(type);
        }

        float mGameTimeInMinutes = 0.0;
        uint8_t mCompareOp = 0;
    };

    class YORDLE_EXPORT ContextualConditionShopOpenCount : public IContextualCondition { 
    public:
        explicit ContextualConditionShopOpenCount(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1926860258 || IContextualCondition::is_type(type);
        }

        uint32_t mShopOpenCount = 0;
    };

    class YORDLE_EXPORT ContextualConditionShopCloseCount : public IContextualCondition { 
    public:
        explicit ContextualConditionShopCloseCount(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1386770836 || IContextualCondition::is_type(type);
        }

        uint32_t mShopCloseCount = 0;
    };

    class YORDLE_EXPORT ContextualConditionItemPurchased : public IContextualCondition { 
    public:
        explicit ContextualConditionItemPurchased(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4109134353 || IContextualCondition::is_type(type);
        }

        bool mItemPurchased = false;
    };

    class YORDLE_EXPORT ContextualConditionItemCanBePurchased : public IContextualCondition { 
    public:
        explicit ContextualConditionItemCanBePurchased(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4001334472 || IContextualCondition::is_type(type);
        }

        bool mItemCanBePurchased = false;
    };

    class YORDLE_EXPORT ContextualConditionItemPriceMinimum : public IContextualCondition { 
    public:
        explicit ContextualConditionItemPriceMinimum(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3440316227 || IContextualCondition::is_type(type);
        }

        uint32_t mItemPriceMinimum = 0;
    };

    class YORDLE_EXPORT ContextualConditionOwnerTeamNetChampionKills : public IContextualCondition { 
    public:
        explicit ContextualConditionOwnerTeamNetChampionKills(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1635608022 || IContextualCondition::is_type(type);
        }

        int32_t mOwnerTeamNetKillAdvantage = 0;
        uint8_t mKillAdvantageCompareOp = 0;
        float mTimeFrameSeconds = 0.0;
    };

    class YORDLE_EXPORT ContextualConditionNearbyChampionCount : public IContextualCondition { 
    public:
        explicit ContextualConditionNearbyChampionCount(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4264964658 || IContextualCondition::is_type(type);
        }

        uint8_t mTeamCompareOp = 0;
        uint32_t mCount = 0;
        uint8_t mCompareOp = 0;
    };

    class YORDLE_EXPORT ContextualConditionNumberOfCharactersNearTargetPos : public IContextualCondition { 
    public:
        explicit ContextualConditionNumberOfCharactersNearTargetPos(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4259363442 || IContextualCondition::is_type(type);
        }

        uint32_t mNumberOfCharacters = 0;
        uint8_t mCompareOp = 0;
        uint8_t mTeamCompareOp = 0;
    };

    class YORDLE_EXPORT ContextualConditionEnemyDeathsNearby : public IContextualCondition { 
    public:
        explicit ContextualConditionEnemyDeathsNearby(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1977541677 || IContextualCondition::is_type(type);
        }

        uint32_t mEnemyDeaths = 0;
    };

    class YORDLE_EXPORT ContextualConditionTeammateDeathsNearby : public IContextualCondition { 
    public:
        explicit ContextualConditionTeammateDeathsNearby(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3730624179 || IContextualCondition::is_type(type);
        }

        uint32_t mTeammateDeaths = 0;
    };

    class YORDLE_EXPORT ContextualConditionCharacter : public IContextualCondition { 
    public:
        explicit ContextualConditionCharacter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2730793650 || IContextualCondition::is_type(type);
        }

        uint8_t mCharacterType = 0;
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> mChildConditions {};
    };

    class YORDLE_EXPORT ContextualConditionAnyOtherHero : public IContextualCondition { 
    public:
        explicit ContextualConditionAnyOtherHero(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 785741611 || IContextualCondition::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::bin_class>> mChildConditions {};
    };

    class YORDLE_EXPORT ICharacterSubcondition : public bin_class { 
    public:
        explicit ICharacterSubcondition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3725269960 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT ContextualConditionCharacterName : public ICharacterSubcondition { 
    public:
        explicit ContextualConditionCharacterName(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3741107577 || ICharacterSubcondition::is_type(type);
        }

        std::set<uint32_t> mCharacters {};
    };

    class YORDLE_EXPORT ContextualConditionCharacterFormName : public ICharacterSubcondition { 
    public:
        explicit ContextualConditionCharacterFormName(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3065745279 || ICharacterSubcondition::is_type(type);
        }

        std::string mFormName {};
    };

    class YORDLE_EXPORT ContextualConditionCharacterSkinID : public ICharacterSubcondition { 
    public:
        explicit ContextualConditionCharacterSkinID(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3363398730 || ICharacterSubcondition::is_type(type);
        }

        std::set<int32_t> mSkinIDs {};
    };

    class YORDLE_EXPORT ContextualConditionCharacterMetadata : public ICharacterSubcondition { 
    public:
        explicit ContextualConditionCharacterMetadata(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2510804743 || ICharacterSubcondition::is_type(type);
        }

        std::string mCategory {};
        std::string mData {};
    };

    class YORDLE_EXPORT ContextualConditionCharacterUnitTags : public ICharacterSubcondition { 
    public:
        explicit ContextualConditionCharacterUnitTags(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2711604381 || ICharacterSubcondition::is_type(type);
        }

        uint8_t mTagMode = 0;
        std::shared_ptr<yordle::data::meta::bin_class> mUnitTags {};
    };

    class YORDLE_EXPORT ContextualConditionCharacterHealth : public ICharacterSubcondition { 
    public:
        explicit ContextualConditionCharacterHealth(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 188655288 || ICharacterSubcondition::is_type(type);
        }

        float mTargetHealth = 0.0;
        uint8_t mCompareOp = 0;
    };

    class YORDLE_EXPORT ContextualConditionIsAlly : public ICharacterSubcondition { 
    public:
        explicit ContextualConditionIsAlly(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3328327009 || ICharacterSubcondition::is_type(type);
        }

        bool mIsAlly = false;
    };

    class YORDLE_EXPORT ContextualConditionCharacterPlayingEmote : public ICharacterSubcondition { 
    public:
        explicit ContextualConditionCharacterPlayingEmote(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 52525780 || ICharacterSubcondition::is_type(type);
        }

        uint8_t mEmoteID = 0;
    };

    class YORDLE_EXPORT ContextualConditionCharacterPlayingAnimation : public ICharacterSubcondition { 
    public:
        explicit ContextualConditionCharacterPlayingAnimation(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2213043706 || ICharacterSubcondition::is_type(type);
        }

        uint32_t mAnimationNameHash = 0;
    };

    class YORDLE_EXPORT ContextualConditionCharacterDistance : public ICharacterSubcondition { 
    public:
        explicit ContextualConditionCharacterDistance(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1680964441 || ICharacterSubcondition::is_type(type);
        }

        float mDistance = 0.0;
        uint8_t mCompareOp = 0;
        uint8_t mDistanceTarget = 0;
    };

    class YORDLE_EXPORT ContextualConditionCharacterInRangeForSyncedAnimation : public ICharacterSubcondition { 
    public:
        explicit ContextualConditionCharacterInRangeForSyncedAnimation(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3402679647 || ICharacterSubcondition::is_type(type);
        }

    };

    class YORDLE_EXPORT ContextualConditionCharacterHasTimeRemainingForAnimation : public ICharacterSubcondition { 
    public:
        explicit ContextualConditionCharacterHasTimeRemainingForAnimation(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 342643998 || ICharacterSubcondition::is_type(type);
        }

        uint32_t mAnimationName = 0;
        float mMinRemainingTime = 0.0;
    };

    class YORDLE_EXPORT ContextualConditionCharacterIsCastingRecall : public ICharacterSubcondition { 
    public:
        explicit ContextualConditionCharacterIsCastingRecall(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1618442710 || ICharacterSubcondition::is_type(type);
        }

    };

    class YORDLE_EXPORT ContextualConditionCharacterRole : public ICharacterSubcondition { 
    public:
        explicit ContextualConditionCharacterRole(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1992674514 || ICharacterSubcondition::is_type(type);
        }

        uint8_t mRole = 0;
    };

    class YORDLE_EXPORT ContextualConditionCharacterHasCAC : public ICharacterSubcondition { 
    public:
        explicit ContextualConditionCharacterHasCAC(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3428313767 || ICharacterSubcondition::is_type(type);
        }

        std::set<uint32_t> mCacs {};
    };

    class YORDLE_EXPORT IContextualConditionSpell : public IContextualCondition { 
    public:
        explicit IContextualConditionSpell(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 576452982 || IContextualCondition::is_type(type);
        }

    };

    class YORDLE_EXPORT ContextualConditionSpell : public IContextualCondition { 
    public:
        explicit ContextualConditionSpell(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2059432175 || IContextualCondition::is_type(type);
        }

        uint32_t mSpellSlot = 0;
        std::set<std::shared_ptr<yordle::data::meta::IContextualConditionSpell>> mChildConditions {};
    };

    class YORDLE_EXPORT ContextualConditionSpellName : public IContextualConditionSpell { 
    public:
        explicit ContextualConditionSpellName(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1616828652 || IContextualConditionSpell::is_type(type);
        }

        uint32_t mSpell = 0;
    };

    class YORDLE_EXPORT ContextualConditionSpellSlot : public IContextualConditionSpell { 
    public:
        explicit ContextualConditionSpellSlot(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 880553955 || IContextualConditionSpell::is_type(type);
        }

        uint32_t mSpellSlot = 0;
    };

    class YORDLE_EXPORT ContextualConditionSpellLevel : public IContextualConditionSpell { 
    public:
        explicit ContextualConditionSpellLevel(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1864557295 || IContextualConditionSpell::is_type(type);
        }

        uint8_t mSpellLevel = 0;
        uint8_t mCompareOp = 0;
    };

    class YORDLE_EXPORT ContextualConditionSpellIsReady : public IContextualConditionSpell { 
    public:
        explicit ContextualConditionSpellIsReady(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3932864058 || IContextualConditionSpell::is_type(type);
        }

        bool mSpellIsReady = false;
    };

    class YORDLE_EXPORT IContextualConditionBuff : public IContextualCondition { 
    public:
        explicit IContextualConditionBuff(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4210162581 || IContextualCondition::is_type(type);
        }

    };

    class YORDLE_EXPORT x418b95a : public IContextualConditionBuff { 
    public:
        explicit x418b95a(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 68729178 || IContextualConditionBuff::is_type(type);
        }

        uint32_t mBuff = 0;
        uint8_t x11206e1a = 0;
    };

    class YORDLE_EXPORT xb8d75e45 : public IContextualConditionBuff { 
    public:
        explicit xb8d75e45(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3101122117 || IContextualConditionBuff::is_type(type);
        }

        uint32_t mBuff = 0;
        uint8_t x11206e1a = 0;
    };

    class YORDLE_EXPORT ContextualRule : public bin_class { 
    public:
        explicit ContextualRule(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 584100880 || bin_class::is_type(type);
        }

        uint32_t mConditionRelationship = 0;
        std::set<std::shared_ptr<yordle::data::meta::IContextualCondition>> mConditions {};
        std::shared_ptr<yordle::data::meta::ContextualActionPlayAudio> mAudioAction {};
        std::shared_ptr<yordle::data::meta::ContextualActionPlayAnimation> mAnimationAction {};
        std::shared_ptr<yordle::data::meta::ContextualActionTriggerEvent> mTriggerEventAction {};
        std::optional<uint32_t> mPriority {};
        bool x68fee3c4 = false;
    };

    class YORDLE_EXPORT ContextualSituation : public bin_class { 
    public:
        explicit ContextualSituation(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4230456894 || bin_class::is_type(type);
        }

        bool mChooseRandomValidRule = false;
        float mCoolDownTime = 0.0;
        std::set<std::shared_ptr<yordle::data::meta::ContextualRule>> mRules {};
    };

    class YORDLE_EXPORT DamageSourceTemplate : public bin_class { 
    public:
        explicit DamageSourceTemplate(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3888872651 || bin_class::is_type(type);
        }

        std::string name {};
        uint32_t DamageProperties = 0;
        std::set<std::string> DamageTags {};
    };

    class YORDLE_EXPORT DamageSourceSettings : public bin_class { 
    public:
        explicit DamageSourceSettings(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3443066312 || bin_class::is_type(type);
        }

        std::set<std::string> damageTagDefinition {};
        std::set<std::shared_ptr<yordle::data::meta::DamageSourceTemplate>> templateDefinition {};
    };

    class YORDLE_EXPORT DeathTimesScalingPoint : public bin_class { 
    public:
        explicit DeathTimesScalingPoint(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2583264988 || bin_class::is_type(type);
        }

        uint32_t mStartTime = 0;
        float mPercentIncrease = 0.0;
    };

    class YORDLE_EXPORT DeathTimes : public bin_class { 
    public:
        explicit DeathTimes(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 319277549 || bin_class::is_type(type);
        }

        std::set<float> mTimeDeadPerLevel {};
        uint32_t mScalingStartTime = 0;
        uint32_t mScalingIncrementTime = 0;
        float mScalingPercentIncrease = 0.0;
        float mScalingPercentCap = 0.0;
        std::set<std::shared_ptr<yordle::data::meta::DeathTimesScalingPoint>> mScalingPoints {};
        bool mAllowRespawnMods = false;
        bool mStartDeathTimerForZombies = false;
    };

    class YORDLE_EXPORT AbilityResourceStateColorOptions : public bin_class { 
    public:
        explicit AbilityResourceStateColorOptions(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3837969205 || bin_class::is_type(type);
        }

        std::array<uint8_t, 4> color {};
        std::array<uint8_t, 4> fadeColor {};
    };

    class YORDLE_EXPORT AbilityResourceStateData : public bin_class { 
    public:
        explicit AbilityResourceStateData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2001592274 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::AbilityResourceStateColorOptions> DefaultPalette {};
        std::shared_ptr<yordle::data::meta::AbilityResourceStateColorOptions> ColorblindPalette {};
        std::string textureSuffix {};
        std::string animationSuffix {};
    };

    class YORDLE_EXPORT AbilityResourceThresholdIndicatorRange : public bin_class { 
    public:
        explicit AbilityResourceThresholdIndicatorRange(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2815698218 || bin_class::is_type(type);
        }

        float rangeStart = 0.0;
        float rangeEnd = 0.0;
    };

    class YORDLE_EXPORT AbilityResourceTypeData : public bin_class { 
    public:
        explicit AbilityResourceTypeData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3011369577 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::AbilityResourceStateData>> states {};
        bool showAbilityResource = false;
        bool showRegen = false;
        std::set<std::shared_ptr<yordle::data::meta::AbilityResourceThresholdIndicatorRange>> ThresholdIndicatorRanges {};
    };

    class YORDLE_EXPORT AbilityResourceTypeConfig : public bin_class { 
    public:
        explicit AbilityResourceTypeConfig(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 994495723 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::AbilityResourceTypeData> mana {};
        std::shared_ptr<yordle::data::meta::AbilityResourceTypeData> Energy {};
        std::shared_ptr<yordle::data::meta::AbilityResourceTypeData> None {};
        std::shared_ptr<yordle::data::meta::AbilityResourceTypeData> Shield {};
        std::shared_ptr<yordle::data::meta::AbilityResourceTypeData> BattleFury {};
        std::shared_ptr<yordle::data::meta::AbilityResourceTypeData> DragonFury {};
        std::shared_ptr<yordle::data::meta::AbilityResourceTypeData> Rage {};
        std::shared_ptr<yordle::data::meta::AbilityResourceTypeData> Heat {};
        std::shared_ptr<yordle::data::meta::AbilityResourceTypeData> PrimalFury {};
        std::shared_ptr<yordle::data::meta::AbilityResourceTypeData> Ferocity {};
        std::shared_ptr<yordle::data::meta::AbilityResourceTypeData> Bloodwell {};
        std::shared_ptr<yordle::data::meta::AbilityResourceTypeData> Wind {};
        std::shared_ptr<yordle::data::meta::AbilityResourceTypeData> Ammo {};
        std::shared_ptr<yordle::data::meta::AbilityResourceTypeData> Moonlight {};
        std::shared_ptr<yordle::data::meta::AbilityResourceTypeData> Other {};
    };

    class YORDLE_EXPORT EvolutionDescription : public bin_class { 
    public:
        explicit EvolutionDescription(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3253985952 || bin_class::is_type(type);
        }

        uint32_t mFlags = 0;
        std::string mTitle {};
        std::set<std::string> mTooltips {};
        std::set<std::string> mIconNames {};
    };

    class YORDLE_EXPORT ExperienceCurveData : public bin_class { 
    public:
        explicit ExperienceCurveData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2482357264 || bin_class::is_type(type);
        }

        std::set<float> mExperienceRequiredPerLevel {};
        std::set<float> mExperienceGrantedForKillPerLevel {};
        std::set<float> x9980fa2e {};
        float mBaseExperienceMultiplier = 0.0;
        float mLevelDifferenceExperienceMultiplier = 0.0;
        float mMinimumExperienceMultiplier = 0.0;
    };

    class YORDLE_EXPORT ExperienceModData : public bin_class { 
    public:
        explicit ExperienceModData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4040137199 || bin_class::is_type(type);
        }

        std::set<float> mPlayerMinionSplitXp {};
    };

    class YORDLE_EXPORT StatUIData : public bin_class { 
    public:
        explicit StatUIData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 309827837 || bin_class::is_type(type);
        }

        std::string mName {};
        std::string mAbbreviation {};
        uint8_t mDisplayType = 0;
        std::string mIconKey {};
        std::string mScalingTagKey {};
    };

    class YORDLE_EXPORT GlobalStatsUIData : public bin_class { 
    public:
        explicit GlobalStatsUIData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4087817779 || bin_class::is_type(type);
        }

        std::map<uint8_t, std::shared_ptr<yordle::data::meta::StatUIData>> mStatUIData {};
        std::string BaseOutputIconModifier {};
        std::string BonusOutputIconModifier {};
        std::string mNumberStyle {};
        std::string mNumberStylePercent {};
        std::string mNumberStyleBonus {};
        std::string mNumberStyleBonusPercent {};
        std::string FormulaPartStyleBonus {};
        std::string FormulaPartStyleBonusPercent {};
        std::string FormulaPartStyle {};
        std::string FormulaPartStylePercent {};
        std::string FormulaPartRangeStyleBonus {};
        std::string FormulaPartRangeStyleBonusPercent {};
        std::string FormulaPartRangeStyle {};
        std::string FormulaPartRangeStylePercent {};
        std::string mNumberStyleTotalAndCoefficient {};
        std::string mNumberStyleTotalAndCoefficientPercent {};
        std::string NumberStyleTotalAndScalingIcons {};
        std::string NumberStyleTotalAndFormula {};
        std::string mManaIconKey {};
        std::string mManaScalingTagKey {};
        std::string x2fa6c4b0 {};
        std::string x4ac09eef {};
        uint8_t xf04c21cd = 0;
        uint8_t xa844caca = 0;
        uint8_t x97343c80 = 0;
    };

    class YORDLE_EXPORT CameraTrapezoid : public bin_class { 
    public:
        explicit CameraTrapezoid(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1207715590 || bin_class::is_type(type);
        }

        float x9811eb50 = 0.0;
        float x82cb6669 = 0.0;
        float mMaxXTop = 0.0;
        float mMaxXBottom = 0.0;
    };

    class YORDLE_EXPORT CameraConfig : public bin_class { 
    public:
        explicit CameraConfig(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3757418744 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::CameraTrapezoid> x671c887 {};
        float mAccelerationTimeMouse = 0.0;
        float mDecelerationTimeMouse = 0.0;
        float mAccelerationTimeKeyboard = 0.0;
        float mDecelerationTimeKeyboard = 0.0;
        float mTopdownZoom = 0.0;
        float mZoomMinDistance = 0.0;
        float mZoomMaxDistance = 0.0;
        float mZoomEaseTime = 0.0;
        float mZoomMinSpeed = 0.0;
        float mDragScale = 0.0;
        float mDragMomentumDecay = 0.0;
        float mDragMomentumRecencyWeight = 0.0;
        float mLockedCameraEasingDistance = 0.0;
        float mTransitionDurationIntoCinematicMode = 0.0;
        std::shared_ptr<yordle::data::meta::CameraTrapezoid> x71c9323a {};
        std::shared_ptr<yordle::data::meta::CameraTrapezoid> xf7617555 {};
        float x383f51a8 = 0.0;
    };

    class YORDLE_EXPORT MapAudioDataProperties : public bin_class { 
    public:
        explicit MapAudioDataProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3010308524 || bin_class::is_type(type);
        }

        uint32_t BaseData = 0;
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> bankUnits {};
        std::set<uint32_t> features {};
    };

    class YORDLE_EXPORT ClientStateAudioDataProperties : public bin_class { 
    public:
        explicit ClientStateAudioDataProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3024130158 || bin_class::is_type(type);
        }

        std::set<std::string> BankPaths {};
        std::string themeMusic {};
    };

    class YORDLE_EXPORT FeatureAudioDataProperties : public bin_class { 
    public:
        explicit FeatureAudioDataProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4071981464 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::bin_class>> bankUnits {};
        std::shared_ptr<yordle::data::meta::bin_class> music {};
        uint32_t feature = 0;
    };

    class YORDLE_EXPORT BankUnit : public bin_class { 
    public:
        explicit BankUnit(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2755749141 || bin_class::is_type(type);
        }

        std::string name {};
        std::set<std::string> bankPath {};
        std::set<std::string> events {};
        bool asynchrone = false;
        bool voiceOver = false;
    };

    class YORDLE_EXPORT AudioTagListProperties : public bin_class { 
    public:
        explicit AudioTagListProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1123665566 || bin_class::is_type(type);
        }

        std::set<std::string> tags {};
        std::string Key {};
    };

    class YORDLE_EXPORT AudioSystemDataProperties : public bin_class { 
    public:
        explicit AudioSystemDataProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 915602117 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::AudioTagListProperties>> systemTagEventList {};
    };

    class YORDLE_EXPORT AudioStatusEvents : public bin_class { 
    public:
        explicit AudioStatusEvents(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2254221038 || bin_class::is_type(type);
        }

        std::string rtpcName {};
        std::string startEvent {};
        std::string stopEvent {};
    };

    class YORDLE_EXPORT GlobalAudioDataProperties : public bin_class { 
    public:
        explicit GlobalAudioDataProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2263089413 || bin_class::is_type(type);
        }

        std::map<uint32_t, uint32_t> systems {};
        float cooldownVoiceOver = 0.0;
        std::map<uint8_t, std::shared_ptr<yordle::data::meta::AudioStatusEvents>> localPlayerStatusEvents {};
        uint32_t x103e4044 = 0;
    };

    class YORDLE_EXPORT MusicAudioDataProperties : public bin_class { 
    public:
        explicit MusicAudioDataProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1714459771 || bin_class::is_type(type);
        }

        std::string themeMusicID {};
        std::string themeMusicTransitionID {};
        std::string legacyThemeMusicID {};
        std::string legacyThemeMusicTransitionID {};
        std::string victoryMusicID {};
        std::string defeatMusicID {};
        std::string victoryBannerSound {};
        std::string defeatBannerSound {};
        std::string ambientEvent {};
        std::string reverbPreset {};
        std::string GameStartEvent {};
        std::string GameQuitEvent {};
    };

    class YORDLE_EXPORT EVOSettings : public bin_class { 
    public:
        explicit EVOSettings(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1597933322 || bin_class::is_type(type);
        }

        bool mEnableChatVO = false;
        bool mEnableAnnouncerVOReplacement = false;
        int32_t mChatVOThrottleCounterThreshold = 0;
        float mChatVOThrottleCounterDecayTime = 0.0;
        float mPingVOThrottleThreshold = 0.0;
    };

    class YORDLE_EXPORT ICatalogEntryOwner : public bin_class { 
    public:
        explicit ICatalogEntryOwner(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2479546740 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT CatalogEntry : public bin_class { 
    public:
        explicit CatalogEntry(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 607049692 || bin_class::is_type(type);
        }

        std::string contentId {};
        uint32_t itemID = 0;
        std::string offerId {};
    };

    class YORDLE_EXPORT CensoredImage : public bin_class { 
    public:
        explicit CensoredImage(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3496109055 || bin_class::is_type(type);
        }

        std::string image {};
        std::map<uint32_t, std::string> UncensoredImages {};
    };

    class YORDLE_EXPORT Character : public bin_class { 
    public:
        explicit Character(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2335876880 || bin_class::is_type(type);
        }

        std::string name {};
    };

    class YORDLE_EXPORT SkinCharacterDataProperties_CharacterIdleEffect : public bin_class { 
    public:
        explicit SkinCharacterDataProperties_CharacterIdleEffect(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 856064357 || bin_class::is_type(type);
        }

        uint32_t effectKey = 0;
        std::string effectName {};
        std::array<float, 3> position {};
        std::string boneName {};
        std::string targetBoneName {};
    };

    class YORDLE_EXPORT SkinCharacterMetaDataProperties_SpawningSkinOffset : public bin_class { 
    public:
        explicit SkinCharacterMetaDataProperties_SpawningSkinOffset(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1393249095 || bin_class::is_type(type);
        }

        std::string tag {};
        int32_t offset = 0;
    };

    class YORDLE_EXPORT ESportTeamEntry : public bin_class { 
    public:
        explicit ESportTeamEntry(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 336658597 || bin_class::is_type(type);
        }

        std::string teamName {};
        std::string leagueName {};
        std::string textureName {};
    };

    class YORDLE_EXPORT ESportLeagueEntry : public bin_class { 
    public:
        explicit ESportLeagueEntry(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1219793301 || bin_class::is_type(type);
        }

        std::string leagueName {};
        std::string textureName {};
    };

    class YORDLE_EXPORT SkinCharacterMetaDataProperties : public bin_class { 
    public:
        explicit SkinCharacterMetaDataProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4160558231 || bin_class::is_type(type);
        }

        bool eSportCharacter = false;
        std::set<std::shared_ptr<yordle::data::meta::ESportTeamEntry>> eSportTeamTable {};
        std::set<std::shared_ptr<yordle::data::meta::ESportLeagueEntry>> eSportLeagueTable {};
        bool skinBasedRelativeColorScheme = false;
        bool isRelativeColorCharacter = false;
        std::set<int32_t> relativeColorSwapTable {};
        bool useAudioProperties = false;
        std::set<std::shared_ptr<yordle::data::meta::SkinCharacterMetaDataProperties_SpawningSkinOffset>> spawningSkinOffsets {};
        bool useGDSBinaries = false;
    };

    class YORDLE_EXPORT SkinAudioProperties : public bin_class { 
    public:
        explicit SkinAudioProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2407209295 || bin_class::is_type(type);
        }

        std::set<std::string> tagEventList {};
        std::set<std::shared_ptr<yordle::data::meta::BankUnit>> bankUnits {};
    };

    class YORDLE_EXPORT SkinAnimationProperties : public bin_class { 
    public:
        explicit SkinAnimationProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1114474915 || bin_class::is_type(type);
        }

        uint32_t animationGraphData = 0;
    };

    class YORDLE_EXPORT SkinEmblem : public bin_class { 
    public:
        explicit SkinEmblem(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2074733870 || bin_class::is_type(type);
        }

        uint32_t mEmblemData = 0;
        uint32_t mLoadingScreenAnchor = 0;
    };

    class YORDLE_EXPORT SkinSummonerEmoteLoadout : public bin_class { 
    public:
        explicit SkinSummonerEmoteLoadout(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4080233272 || bin_class::is_type(type);
        }

        std::set<uint32_t> mEmotes {};
    };

    class YORDLE_EXPORT SkinCharacterDataProperties : public bin_class { 
    public:
        explicit SkinCharacterDataProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2607278582 || bin_class::is_type(type);
        }

        uint32_t skinClassification = 0;
        std::string championSkinName {};
        uint32_t attributeFlags = 0;
        int32_t skinParent = 0;
        std::string metaDataTags {};
        uint32_t emoteLoadout = 0;
        std::shared_ptr<yordle::data::meta::bin_class> skinUpgradeData {};
        std::string endOfGameAlias {};
        std::string x4678b8f7 {};
        std::shared_ptr<yordle::data::meta::CensoredImage> loadscreen {};
        std::shared_ptr<yordle::data::meta::CensoredImage> loadscreenVintage {};
        std::shared_ptr<yordle::data::meta::SkinAudioProperties> skinAudioProperties {};
        std::shared_ptr<yordle::data::meta::SkinAnimationProperties> skinAnimationProperties {};
        std::shared_ptr<yordle::data::meta::bin_class> skinMeshProperties {};
        std::string armorMaterial {};
        std::set<std::string> themeMusic {};
        bool x592970c = false;
        std::string HudMuteEvent {};
        std::string HudUnmuteEvent {};
        std::set<std::string> defaultAnimations {};
        std::set<std::shared_ptr<yordle::data::meta::SkinCharacterDataProperties_CharacterIdleEffect>> idleParticlesEffects {};
        std::string particleOverride_ChampionKillDeathParticle {};
        std::string particleOverride_DeathParticle {};
        std::string mSpawnParticleName {};
        std::set<std::string> extraCharacterPreloads {};
        std::string voiceOverOverride {};
        bool skipVOOverride = false;
        std::string iconAvatar {};
        uint32_t mContextualActionData = 0;
        std::string skinAudioNameOverride {};
        std::optional<std::string> iconCircle {};
        std::optional<float> iconCircleScale {};
        std::optional<std::string> iconSquare {};
        std::set<std::string> alternateIconsCircle {};
        std::set<std::string> alternateIconsSquare {};
        std::map<uint32_t, std::string> uncensoredIconCircles {};
        std::map<uint32_t, std::string> uncensoredIconSquares {};
        std::shared_ptr<yordle::data::meta::bin_class> secondaryResourceHudDisplayData {};
        std::string emoteBuffbone {};
        float emoteYOffset = 0.0;
        std::string godrayFXbone {};
        std::shared_ptr<yordle::data::meta::bin_class> healthBarData {};
        std::set<std::shared_ptr<yordle::data::meta::SkinEmblem>> mEmblems {};
        std::optional<int32_t> rarityGemOverride {};
        uint32_t mResourceResolver = 0;
        std::set<uint32_t> mAdditionalResourceResolvers {};
        std::shared_ptr<yordle::data::meta::bin_class> mOptionalBin {};
        uint32_t x25f9aa72 = 0;
    };

    class YORDLE_EXPORT SkinFilterData : public bin_class { 
    public:
        explicit SkinFilterData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3022275834 || bin_class::is_type(type);
        }

        uint32_t FilterType = 0;
        bool xc176d167 = false;
        std::set<uint32_t> skinIds {};
    };

    class YORDLE_EXPORT CharacterPassiveData : public bin_class { 
    public:
        explicit CharacterPassiveData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2393107013 || bin_class::is_type(type);
        }

        uint32_t xbd3c31e4 = 0;
        std::set<uint32_t> mComponentBuffs {};
        std::set<uint32_t> mChildSpells {};
        uint8_t mDisplayFlags = 0;
        bool x6346a946 = false;
        std::shared_ptr<yordle::data::meta::SkinFilterData> SkinFilter {};
    };

    class YORDLE_EXPORT GlobalPerLevelStatsFactor : public bin_class { 
    public:
        explicit GlobalPerLevelStatsFactor(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1907548119 || bin_class::is_type(type);
        }

        std::set<float> mPerLevelStatsFactor {};
    };

    class YORDLE_EXPORT OverrideAutoAttackCastTimeData : public bin_class { 
    public:
        explicit OverrideAutoAttackCastTimeData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3397751176 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mOverrideAutoattackCastTimeCalculation {};
    };

    class YORDLE_EXPORT CharacterRecord : public bin_class { 
    public:
        explicit CharacterRecord(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 602544405 || bin_class::is_type(type);
        }

        std::string mCharacterName {};
        std::string mFallbackCharacterName {};
        std::shared_ptr<yordle::data::meta::bin_class> targetLaserEffects {};
        std::shared_ptr<yordle::data::meta::bin_class> DisabledTargetLaserEffects {};
        std::shared_ptr<yordle::data::meta::EvolutionDescription> evolutionData {};
        std::shared_ptr<yordle::data::meta::bin_class> useableData {};
        float baseHP = 0.0;
        float hpPerLevel = 0.0;
        float baseStaticHPRegen = 0.0;
        float baseFactorHPRegen = 0.0;
        float hpRegenPerLevel = 0.0;
        float healthBarHeight = 0.0;
        bool healthBarFullParallax = false;
        std::string selfChampSpecificHealthSuffix {};
        std::string selfCBChampSpecificHealthSuffix {};
        std::string allyChampSpecificHealthSuffix {};
        std::string enemyChampSpecificHealthSuffix {};
        bool highlightHealthbarIcons = false;
        std::shared_ptr<yordle::data::meta::bin_class> primaryAbilityResource {};
        std::shared_ptr<yordle::data::meta::bin_class> secondaryAbilityResource {};
        float baseDamage = 0.0;
        float damagePerLevel = 0.0;
        float baseArmor = 0.0;
        float armorPerLevel = 0.0;
        float baseSpellBlock = 0.0;
        float spellBlockPerLevel = 0.0;
        float baseDodge = 0.0;
        float DodgePerLevel = 0.0;
        float baseMissChance = 0.0;
        float baseCritChance = 0.0;
        float critDamageMultiplier = 0.0;
        float critPerLevel = 0.0;
        float baseMoveSpeed = 0.0;
        float xcb4451d3 = 0.0;
        float attackRange = 0.0;
        float attackSpeed = 0.0;
        float attackSpeedRatio = 0.0;
        float attackSpeedPerLevel = 0.0;
        float AbilityPowerIncPerLevel = 0.0;
        float mAdaptiveForceToAbilityPowerWeight = 0.0;
        float attackAutoInterruptPercent = 0.0;
        float acquisitionRange = 0.0;
        std::optional<float> wakeUpRange {};
        std::optional<float> firstAcquisitionRange {};
        std::shared_ptr<yordle::data::meta::bin_class> basicAttack {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> extraAttacks {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> critAttacks {};
        float towerTargetingPriorityBoost = 0.0;
        float expGivenOnDeath = 0.0;
        float goldGivenOnDeath = 0.0;
        float goldRadius = 0.0;
        float experienceRadius = 0.0;
        float deathEventListeningRadius = 0.0;
        float localGoldGivenOnDeath = 0.0;
        float localExpGivenOnDeath = 0.0;
        bool localGoldSplitWithLastHitter = false;
        float globalGoldGivenOnDeath = 0.0;
        float globalExpGivenOnDeath = 0.0;
        std::optional<float> perceptionBubbleRadius {};
        std::optional<std::array<float, 3>> perceptionBoundingBoxSize {};
        float significance = 0.0;
        float untargetableSpawnTime = 0.0;
        float abilityPower = 0.0;
        std::set<std::string> spellNames {};
        std::set<std::string> extraSpells {};
        std::set<uint32_t> mAbilities {};
        uint32_t onKillEvent = 0;
        uint32_t OnKillEventSteal = 0;
        uint32_t onKillEventForSpectator = 0;
        std::string criticalAttack {};
        std::string passiveName {};
        std::string passiveLuaName {};
        std::string passiveToolTip {};
        std::string passiveSpell {};
        float passiveRange = 0.0;
        std::string passive1IconName {};
        std::string lore1 {};
        std::string tips1 {};
        std::string tips2 {};
        std::string friendlyTooltip {};
        std::string enemyTooltip {};
        std::string name {};
        std::string parName {};
        std::set<std::string> weaponMaterials {};
        std::string hoverIndicatorTextureName {};
        float hoverIndicatorRadius = 0.0;
        std::string hoverLineIndicatorBaseTextureName {};
        std::string hoverLineIndicatorTargetTextureName {};
        float hoverLineIndicatorWidth = 0.0;
        bool hoverIndicatorRotateToPlayer = false;
        std::string hoverIndicatorMinimapOverride {};
        std::string minimapIconOverride {};
        float hoverIndicatorRadiusMinimap = 0.0;
        float hoverLineIndicatorWidthMinimap = 0.0;
        float areaIndicatorRadius = 0.0;
        float areaIndicatorMinRadius = 0.0;
        float areaIndicatorMaxDistance = 0.0;
        float areaIndicatorTargetDistance = 0.0;
        float areaIndicatorMinDistance = 0.0;
        std::string areaIndicatorTextureName {};
        float areaIndicatorTextureSize = 0.0;
        std::string charAudioNameOverride {};
        bool x104d2294 = false;
        bool mUseCCAnimations = false;
        std::string jointForAnimAdjustedSelection {};
        float outlineBBoxExpansion = 0.0;
        std::string silhouetteAttachmentAnim {};
        float hitFxScale = 0.0;
        float selectionHeight = 0.0;
        float selectionRadius = 0.0;
        float pathfindingCollisionRadius = 0.0;
        std::optional<float> overrideGameplayCollisionRadius {};
        std::string unitTagsString {};
        uint32_t friendlyUxOverrideTeam = 0;
        std::string friendlyUxOverrideIncludeTagsString {};
        std::string friendlyUxOverrideExcludeTagsString {};
        std::shared_ptr<yordle::data::meta::bin_class> mEducationToolData {};
        std::set<int32_t> mAbilitySlotCC {};
        std::shared_ptr<yordle::data::meta::bin_class> characterToolData {};
        bool platformEnabled = false;
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> spellLevelUpInfo {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> recSpellRankUpInfo {};
        bool recordAsWard = false;
        float minionScoreValue = 0.0;
        bool useRiotRelationships = false;
        uint32_t flags = 0;
        uint32_t minionFlags = 0;
        std::string assetCategory {};
        std::set<uint32_t> purchaseIdentities {};
        std::set<uint32_t> mClientSideItemInventory {};
        uint32_t mPreferredPerkStyle = 0;
        std::shared_ptr<yordle::data::meta::bin_class> mPerkReplacements {};
        float deathTime = 0.0;
        float occludedUnitSelectableDistance = 0.0;
        float MovingTowardEnemyActivationAngle = 0.0;
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::bin_class>> mCharacterCalculations {};
        uint32_t mCharacterPassiveSpell = 0;
        std::set<std::shared_ptr<yordle::data::meta::CharacterPassiveData>> mCharacterPassiveBuffs {};
        std::shared_ptr<yordle::data::meta::bin_class> mDefaultStatOverrides {};
    };

    class YORDLE_EXPORT AbilityResourceSlotInfo : public bin_class { 
    public:
        explicit AbilityResourceSlotInfo(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3459369333 || bin_class::is_type(type);
        }

        uint8_t arType = 0;
        float arBase = 0.0;
        float arPerLevel = 0.0;
        float arBaseStaticRegen = 0.0;
        float arBaseFactorRegen = 0.0;
        float arRegenPerLevel = 0.0;
        float arIncrements = 0.0;
        int32_t arMaxSegments = 0;
        bool arHasRegenText = false;
        bool arAllowMaxValueToBeOverridden = false;
        bool arContributesToHealthValues = false;
        bool arPreventRegenWhileAtZero = false;
        bool arDisplayAsPips = false;
        bool arIsShown = false;
        bool arIsShownOnlyOnLocalPlayer = false;
        std::string arOverrideSmallPipName {};
        std::string arOverrideMediumPipName {};
        std::string arOverrideLargePipName {};
        std::string arOverrideEmptyPipName {};
        std::string arOverrideSpacerName {};
        bool arNegativeSpacer = false;
        bool x5ca738c0 = false;
        bool xa9d3a87c = false;
    };

    class YORDLE_EXPORT AttackSlotData : public bin_class { 
    public:
        explicit AttackSlotData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 112014489 || bin_class::is_type(type);
        }

        std::optional<float> mAttackTotalTime {};
        std::optional<float> mAttackCastTime {};
        std::shared_ptr<yordle::data::meta::OverrideAutoAttackCastTimeData> mOverrideAutoattackCastTime {};
        std::optional<float> mAttackDelayCastOffsetPercent {};
        std::optional<float> mAttackDelayCastOffsetPercentAttackSpeedRatio {};
        std::optional<float> mAttackProbability {};
        std::optional<std::string> mAttackName {};
    };

    class YORDLE_EXPORT TargetLaserComponentEffects : public bin_class { 
    public:
        explicit TargetLaserComponentEffects(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 490133160 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::SkinCharacterDataProperties_CharacterIdleEffect> beamEffectDefinition {};
        std::shared_ptr<yordle::data::meta::SkinCharacterDataProperties_CharacterIdleEffect> towerTargetingEffectDefinition {};
        std::shared_ptr<yordle::data::meta::SkinCharacterDataProperties_CharacterIdleEffect> champTargetingEffectDefinition {};
    };

    class YORDLE_EXPORT ToolEducationData : public bin_class { 
    public:
        explicit ToolEducationData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2970707127 || bin_class::is_type(type);
        }

        int32_t firstItem = 0;
        int32_t skillOrder = 0;
    };

    class YORDLE_EXPORT CharacterToolData : public bin_class { 
    public:
        explicit CharacterToolData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3963447610 || bin_class::is_type(type);
        }

        std::string searchTags {};
        std::string searchTagsSecondary {};
    };

    class YORDLE_EXPORT Companion : public Character { 
    public:
        explicit Companion(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2573155477 || Character::is_type(type);
        }

    };

    class YORDLE_EXPORT InteractionData : public bin_class { 
    public:
        explicit InteractionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1250691283 || bin_class::is_type(type);
        }

        std::string idleAnim {};
        bool shouldRandomizeIdleAnimPhase = false;
    };

    class YORDLE_EXPORT ISpellRankUpRequirement : public bin_class { 
    public:
        explicit ISpellRankUpRequirement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1708005576 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT HasSkillPointRequirement : public ISpellRankUpRequirement { 
    public:
        explicit HasSkillPointRequirement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4223600025 || ISpellRankUpRequirement::is_type(type);
        }

    };

    class YORDLE_EXPORT CharacterLevelRequirement : public ISpellRankUpRequirement { 
    public:
        explicit CharacterLevelRequirement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 130158569 || ISpellRankUpRequirement::is_type(type);
        }

        uint32_t mLevel = 0;
    };

    class YORDLE_EXPORT HasBuffRequirement : public ISpellRankUpRequirement { 
    public:
        explicit HasBuffRequirement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1790796033 || ISpellRankUpRequirement::is_type(type);
        }

        uint32_t mBuffName = 0;
        bool mFromAnyone = false;
    };

    class YORDLE_EXPORT SpellRankUpRequirements : public bin_class { 
    public:
        explicit SpellRankUpRequirements(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3158945758 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::ISpellRankUpRequirement>> mRequirements {};
    };

    class YORDLE_EXPORT SpellLevelUpInfo : public bin_class { 
    public:
        explicit SpellLevelUpInfo(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2606765944 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::SpellRankUpRequirements>> mRequirements {};
    };

    class YORDLE_EXPORT RecSpellRankUpInfo : public bin_class { 
    public:
        explicit RecSpellRankUpInfo(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 825182082 || bin_class::is_type(type);
        }

        std::set<uint8_t> mDefaultPriority {};
        std::set<uint8_t> mEarlyLevelOverrides {};
    };

    class YORDLE_EXPORT UseableData : public bin_class { 
    public:
        explicit UseableData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4101150036 || bin_class::is_type(type);
        }

        uint32_t flags = 0;
        std::string useHeroSpellName {};
        std::string useSpellName {};
        int32_t useCooldownSpellSlot = 0;
    };

    class YORDLE_EXPORT CharacterHealthBarDataRecord : public bin_class { 
    public:
        explicit CharacterHealthBarDataRecord(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 297212766 || bin_class::is_type(type);
        }

        float hpPerTick = 0.0;
        std::string attachToBone {};
        uint8_t unitHealthBarStyle = 0;
        bool showWhileUntargetable = false;
        bool x9c5124c0 = false;
        uint32_t xe784dd2f = 0;
        bool x66a7d70a = false;
        bool x8bdcfa04 = false;
        bool x7f0b706e = false;
    };

    class YORDLE_EXPORT SponsoredBanner : public bin_class { 
    public:
        explicit SponsoredBanner(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 6610142 || bin_class::is_type(type);
        }

        uint32_t banner = 0;
        uint64_t SponsorTexturePath = 0;
    };

    class YORDLE_EXPORT EsportsBannerConfiguration : public bin_class { 
    public:
        explicit EsportsBannerConfiguration(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3503743985 || bin_class::is_type(type);
        }

        std::string name {};
        uint32_t esportsTeam = 0;
        std::string leagueName {};
        uint32_t eventMutator = 0;
        uint64_t texturePath = 0;
        std::set<std::shared_ptr<yordle::data::meta::SponsoredBanner>> IndividualBannerOverrides {};
    };

    class YORDLE_EXPORT EsportsBannerData : public bin_class { 
    public:
        explicit EsportsBannerData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 761042637 || bin_class::is_type(type);
        }

        std::string bannerName {};
        uint32_t Team = 0;
    };

    class YORDLE_EXPORT EsportsData : public bin_class { 
    public:
        explicit EsportsData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 249502963 || bin_class::is_type(type);
        }

        std::set<std::string> leagues {};
    };

    class YORDLE_EXPORT ClashLogo : public bin_class { 
    public:
        explicit ClashLogo(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1951208621 || bin_class::is_type(type);
        }

        uint32_t mClashLogoId = 0;
        uint32_t mClashLogoColorId = 0;
        std::string mLogoPath {};
    };

    class YORDLE_EXPORT EsportsBannerOptions : public bin_class { 
    public:
        explicit EsportsBannerOptions(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 224714173 || bin_class::is_type(type);
        }

        std::string subMeshName {};
        bool IsSpectatorOnly = false;
        uint64_t defaultTexturePath = 0;
        uint32_t DefaultBlankMaterial = 0;
    };

    class YORDLE_EXPORT MasteryBadgeData : public bin_class { 
    public:
        explicit MasteryBadgeData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1337363141 || bin_class::is_type(type);
        }

        uint32_t mName = 0;
        std::string mParticleName {};
        float mRenderScale = 0.0;
        float mVerticalOffset = 0.0;
        int32_t mSummonerIconId = 0;
        uint32_t mMasteryLevel = 0;
    };

    class YORDLE_EXPORT MasteryBadgeConfig : public bin_class { 
    public:
        explicit MasteryBadgeConfig(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4114078183 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::MasteryBadgeData>> mBadges {};
    };

    class YORDLE_EXPORT MasteryData : public bin_class { 
    public:
        explicit MasteryData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 505623326 || bin_class::is_type(type);
        }

        std::string texture {};
        std::string LevelTraKey {};
        std::string DetailsTraKey {};
    };

    class YORDLE_EXPORT ChampionMasteryMap : public bin_class { 
    public:
        explicit ChampionMasteryMap(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2781975535 || bin_class::is_type(type);
        }

        std::map<int32_t, uint32_t> masteryData {};
    };

    class YORDLE_EXPORT BaseLoadoutData : public bin_class { 
    public:
        explicit BaseLoadoutData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2514536512 || bin_class::is_type(type);
        }

        std::string mNameTraKey {};
        std::shared_ptr<yordle::data::meta::CatalogEntry> catalogEntry {};
        std::string mDescriptionTraKey {};
    };

    class YORDLE_EXPORT LoadoutFeatureData : public bin_class { 
    public:
        explicit LoadoutFeatureData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3930402607 || bin_class::is_type(type);
        }

        uint32_t mFeature = 0;
        std::optional<std::string> mMutator {};
        std::optional<std::string> mBinaryFile {};
        std::string mLoadoutCategory {};
        std::set<std::string> mLoadoutProperties {};
        std::map<std::string, std::string> mGDSObjectPathTemplates {};
        bool mLoadFromContentIds = false;
    };

    class YORDLE_EXPORT RecallDecalData : public bin_class { 
    public:
        explicit RecallDecalData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 695369637 || bin_class::is_type(type);
        }

        std::string effectFile {};
        std::string arrivalEffectFile {};
        std::string EmpoweredEffectFile {};
        std::string EmpoweredArrivalFile {};
        uint32_t recallDecalId = 0;
    };

    class YORDLE_EXPORT GearSkinUpgrade : public bin_class { 
    public:
        explicit GearSkinUpgrade(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 668820321 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mGearData {};
        std::string x358d080b {};
    };

    class YORDLE_EXPORT SkinUpgradeData : public bin_class { 
    public:
        explicit SkinUpgradeData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1760736924 || bin_class::is_type(type);
        }

        std::set<uint32_t> mGearSkinUpgrades {};
    };

    class YORDLE_EXPORT TFTCompanionBucket : public bin_class { 
    public:
        explicit TFTCompanionBucket(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4009991563 || bin_class::is_type(type);
        }

        std::set<uint32_t> Companions {};
    };

    class YORDLE_EXPORT TFTBotLoadoutConfiguration : public bin_class { 
    public:
        explicit TFTBotLoadoutConfiguration(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2097505044 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::TFTCompanionBucket>> xeffbc65c {};
        std::set<uint32_t> mapSkins {};
    };

    class YORDLE_EXPORT BannerFlagData : public bin_class { 
    public:
        explicit BannerFlagData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2025704385 || bin_class::is_type(type);
        }

        uint32_t animationGraphData = 0;
        std::shared_ptr<yordle::data::meta::bin_class> skinMeshProperties {};
    };

    class YORDLE_EXPORT BannerFrameData : public bin_class { 
    public:
        explicit BannerFrameData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3564953724 || bin_class::is_type(type);
        }

        uint32_t animationGraphData = 0;
        std::shared_ptr<yordle::data::meta::bin_class> skinMeshProperties {};
    };

    class YORDLE_EXPORT CompanionData : public BaseLoadoutData { 
    public:
        explicit CompanionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2093092437 || BaseLoadoutData::is_type(type);
        }

        uint32_t rarity = 0;
        uint32_t level = 0;
        bool mDisabled = false;
        uint32_t mCharacter = 0;
        uint32_t mSkinId = 0;
        std::string speciesLink {};
        std::string mStandaloneCircleIcon {};
        std::string mStandaloneLoadoutsIcon {};
        std::string mStandaloneLoadoutsLargeIcon {};
        std::string mLoadScreen {};
    };

    class YORDLE_EXPORT CompanionSpeciesData : public bin_class { 
    public:
        explicit CompanionSpeciesData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2386264729 || bin_class::is_type(type);
        }

        std::string mSpeciesName {};
        uint32_t mSpeciesId = 0;
    };

    class YORDLE_EXPORT SummonerEmote : public bin_class { 
    public:
        explicit SummonerEmote(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1950165531 || bin_class::is_type(type);
        }

        uint32_t summonerEmoteId = 0;
        uint32_t vfxSystem = 0;
        std::string announcementIcon {};
        std::string selectionIcon {};
        float renderScale = 0.0;
        float verticalOffset = 0.0;
        std::string visibleSelectionName {};
    };

    class YORDLE_EXPORT SummonerEmoteSettings : public bin_class { 
    public:
        explicit SummonerEmoteSettings(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 508241094 || bin_class::is_type(type);
        }

        uint32_t mFirstBlood = 0;
        uint32_t mAce = 0;
    };

    class YORDLE_EXPORT GearData : public bin_class { 
    public:
        explicit GearData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3023323566 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> skinMeshProperties {};
        uint32_t animationGraphData = 0;
        std::shared_ptr<yordle::data::meta::bin_class> mVFXResourceResolver {};
        std::string mEquipAnimation {};
        std::string mSelfOnlyPortraitIcon {};
        std::string mPortraitIcon {};
        std::set<uint32_t> xb6c044fb {};
        std::set<uint32_t> x21b6167e {};
    };

    class YORDLE_EXPORT ModeProgressionRewardData : public BaseLoadoutData { 
    public:
        explicit ModeProgressionRewardData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2355674 || BaseLoadoutData::is_type(type);
        }

        std::string mBuffName {};
        std::set<std::string> mCharacters {};
        std::shared_ptr<yordle::data::meta::bin_class> mVFXResourceResolver {};
    };

    class YORDLE_EXPORT RegaliaData : public BaseLoadoutData { 
    public:
        explicit RegaliaData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2286074286 || BaseLoadoutData::is_type(type);
        }

        std::string texture {};
    };

    class YORDLE_EXPORT RegaliaLookup : public bin_class { 
    public:
        explicit RegaliaLookup(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1780014848 || bin_class::is_type(type);
        }

        std::string tier {};
        uint32_t regaliaCrest = 0;
        uint32_t regaliaCrown1 = 0;
        uint32_t regaliaCrown2 = 0;
        uint32_t regaliaCrown3 = 0;
        uint32_t regaliaCrown4 = 0;
        uint32_t RegaliaTrim = 0;
        uint32_t regaliaSplit1 = 0;
        uint32_t regaliaSplit2 = 0;
        uint32_t regaliaSplit3 = 0;
    };

    class YORDLE_EXPORT RegaliaRankedCrestEntry : public bin_class { 
    public:
        explicit RegaliaRankedCrestEntry(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3828118224 || bin_class::is_type(type);
        }

        uint32_t base = 0;
        std::map<int32_t, uint32_t> xfbb20410 {};
        std::map<int32_t, uint32_t> xaf2e170a {};
    };

    class YORDLE_EXPORT RegaliaRankedCrestMap : public bin_class { 
    public:
        explicit RegaliaRankedCrestMap(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2415052226 || bin_class::is_type(type);
        }

        std::map<std::string, std::shared_ptr<yordle::data::meta::RegaliaRankedCrestEntry>> x723d6f91 {};
    };

    class YORDLE_EXPORT RegaliaPrestigeCrestList : public bin_class { 
    public:
        explicit RegaliaPrestigeCrestList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3350243090 || bin_class::is_type(type);
        }

        std::set<uint32_t> PrestigeCrests {};
    };

    class YORDLE_EXPORT RegaliaRankedBannerMap : public bin_class { 
    public:
        explicit RegaliaRankedBannerMap(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 761319899 || bin_class::is_type(type);
        }

        std::map<std::string, uint32_t> xc5b8b568 {};
    };

    class YORDLE_EXPORT x2ba8fc33 : public bin_class { 
    public:
        explicit x2ba8fc33(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 732494899 || bin_class::is_type(type);
        }

        std::map<std::string, std::shared_ptr<yordle::data::meta::RegaliaData>> x5b1fd3c2 {};
    };

    class YORDLE_EXPORT StatStoneEventToTrack : public bin_class { 
    public:
        explicit StatStoneEventToTrack(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4146948500 || bin_class::is_type(type);
        }

        uint32_t EventToTrack = 0;
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> StatFilters {};
    };

    class YORDLE_EXPORT StatStoneData : public BaseLoadoutData { 
    public:
        explicit StatStoneData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3978526660 || BaseLoadoutData::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::StatStoneEventToTrack>> EventsToTrack {};
        uint32_t category = 0;
        uint32_t xfb2a56ef = 0;
        uint32_t x286fc9c3 = 0;
        std::set<uint64_t> Milestones {};
        bool EpicStatStone = false;
        bool TriggeredFromScript = false;
        bool IsRetired = false;
        uint8_t trackingType = 0;
        std::string stoneName {};
        bool x92bd18ab = false;
    };

    class YORDLE_EXPORT IStatStoneLogicDriver : public bin_class { 
    public:
        explicit IStatStoneLogicDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3276314181 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT TargetHasUnitTagFilter : public IStatStoneLogicDriver { 
    public:
        explicit TargetHasUnitTagFilter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3196462184 || IStatStoneLogicDriver::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> UnitTags {};
    };

    class YORDLE_EXPORT TrueDamageGivenFilter : public IStatStoneLogicDriver { 
    public:
        explicit TrueDamageGivenFilter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2925773367 || IStatStoneLogicDriver::is_type(type);
        }

    };

    class YORDLE_EXPORT CrowdControlFilter : public IStatStoneLogicDriver { 
    public:
        explicit CrowdControlFilter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2898073997 || IStatStoneLogicDriver::is_type(type);
        }

        std::set<uint8_t> x20cf84ac {};
        bool TrackDuration = false;
    };

    class YORDLE_EXPORT TargetHasBuffFilter : public IStatStoneLogicDriver { 
    public:
        explicit TargetHasBuffFilter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2971935795 || IStatStoneLogicDriver::is_type(type);
        }

        std::set<uint8_t> ValidBuffs {};
    };

    class YORDLE_EXPORT SourceTypeFilter : public IStatStoneLogicDriver { 
    public:
        explicit SourceTypeFilter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1442793122 || IStatStoneLogicDriver::is_type(type);
        }

        bool x47bac313 = false;
        bool x1e3fcd64 = false;
        bool xd5e57340 = false;
    };

    class YORDLE_EXPORT TargetTypeFilter : public IStatStoneLogicDriver { 
    public:
        explicit TargetTypeFilter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3994264754 || IStatStoneLogicDriver::is_type(type);
        }

        bool x47bac313 = false;
        bool x1e3fcd64 = false;
        bool xd5e57340 = false;
    };

    class YORDLE_EXPORT TargetTeamFilter : public IStatStoneLogicDriver { 
    public:
        explicit TargetTeamFilter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3663270019 || IStatStoneLogicDriver::is_type(type);
        }

        bool ally = false;
        bool enemy = false;
        bool Self = false;
    };

    class YORDLE_EXPORT SourceLessThanHealthPercentageFilter : public IStatStoneLogicDriver { 
    public:
        explicit SourceLessThanHealthPercentageFilter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1577686390 || IStatStoneLogicDriver::is_type(type);
        }

        float healthPercentage = 0.0;
    };

    class YORDLE_EXPORT AssistCountFilter : public IStatStoneLogicDriver { 
    public:
        explicit AssistCountFilter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3383798399 || IStatStoneLogicDriver::is_type(type);
        }

        uint8_t assistCount = 0;
    };

    class YORDLE_EXPORT MultiKillLogic : public IStatStoneLogicDriver { 
    public:
        explicit MultiKillLogic(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3987305908 || IStatStoneLogicDriver::is_type(type);
        }

    };

    class YORDLE_EXPORT DamageShieldedLogic : public IStatStoneLogicDriver { 
    public:
        explicit DamageShieldedLogic(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2857147974 || IStatStoneLogicDriver::is_type(type);
        }

        bool xa1e033be = false;
        bool x7944553a = false;
        bool x2ad527a6 = false;
        bool x621e14db = false;
        bool x60b7c1b6 = false;
        bool xcbc2f8ba = false;
        bool x2efb9d27 = false;
        bool x1701ca0a = false;
    };

    class YORDLE_EXPORT GoldSourceFilter : public IStatStoneLogicDriver { 
    public:
        explicit GoldSourceFilter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 924071072 || IStatStoneLogicDriver::is_type(type);
        }

        uint8_t ValidGoldSource = 0;
    };

    class YORDLE_EXPORT KillingSpreeFilter : public IStatStoneLogicDriver { 
    public:
        explicit KillingSpreeFilter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3258535250 || IStatStoneLogicDriver::is_type(type);
        }

        int32_t KillingSpreeCount = 0;
    };

    class YORDLE_EXPORT NeutralMinionCampClearedLogic : public IStatStoneLogicDriver { 
    public:
        explicit NeutralMinionCampClearedLogic(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2516419817 || IStatStoneLogicDriver::is_type(type);
        }

    };

    class YORDLE_EXPORT TurretFirstBloodLogic : public IStatStoneLogicDriver { 
    public:
        explicit TurretFirstBloodLogic(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1203614713 || IStatStoneLogicDriver::is_type(type);
        }

    };

    class YORDLE_EXPORT StatStoneSet : public bin_class { 
    public:
        explicit StatStoneSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2524344308 || bin_class::is_type(type);
        }

        std::string name {};
        std::shared_ptr<yordle::data::meta::CatalogEntry> catalogEntry {};
        std::set<uint32_t> statStones {};
    };

    class YORDLE_EXPORT StatStoneCategory : public bin_class { 
    public:
        explicit StatStoneCategory(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3156432820 || bin_class::is_type(type);
        }

        std::string gameIconUnlit {};
        std::string gameIconLit {};
        std::string gameIconFull {};
        std::string gameIconMini {};
        std::array<uint8_t, 4> CategoryColor {};
    };

    class YORDLE_EXPORT xead1b379 : public bin_class { 
    public:
        explicit xead1b379(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3939611513 || bin_class::is_type(type);
        }

        std::map<uint32_t, uint32_t> xfb403eda {};
    };

    class YORDLE_EXPORT x32be2466 : public bin_class { 
    public:
        explicit x32be2466(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 851321958 || bin_class::is_type(type);
        }

        std::map<uint32_t, uint32_t> x1a28d722 {};
    };

    class YORDLE_EXPORT TFTDamageSkin : public BaseLoadoutData { 
    public:
        explicit TFTDamageSkin(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2265035565 || BaseLoadoutData::is_type(type);
        }

        std::string mName {};
        uint32_t rarity = 0;
        std::string DamageBuffName {};
        uint32_t level = 0;
        bool disabled = false;
        uint32_t SkinID = 0;
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> x31af5dc6 {};
        uint32_t VfxResourceResolver = 0;
        std::string StandaloneLoadoutsIcon {};
        std::string StandaloneLoadoutsLargeIcon {};
        std::set<std::string> AudioBankPaths {};
        float x7ed5b4a7 = 0.0;
    };

    class YORDLE_EXPORT TftDamageSkinDescriptor : public bin_class { 
    public:
        explicit TftDamageSkinDescriptor(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3607046696 || bin_class::is_type(type);
        }

        uint32_t EffectType = 0;
        uint32_t x9d0cca5b = 0;
        std::string effectKey {};
        uint32_t AttachedToBone = 0;
        float EffectDelay = 0.0;
    };

    class YORDLE_EXPORT TftMapGroupData : public bin_class { 
    public:
        explicit TftMapGroupData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2233303452 || bin_class::is_type(type);
        }

        std::string mName {};
        uint32_t mId = 0;
    };

    class YORDLE_EXPORT TftMapSkin : public BaseLoadoutData { 
    public:
        explicit TftMapSkin(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2731557552 || BaseLoadoutData::is_type(type);
        }

        uint32_t rarity = 0;
        std::string StandaloneLoadoutsIcon {};
        std::string StandaloneLoadoutsLargeIcon {};
        std::string GroupLink {};
        std::set<std::string> AudioBankPaths {};
        std::set<uint32_t> characters {};
        std::string mapContainer {};
        uint16_t xafc467eb = 0;
        uint16_t x6e39b04a = 0;
    };

    class YORDLE_EXPORT TrophyData : public BaseLoadoutData { 
    public:
        explicit TrophyData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1176619879 || BaseLoadoutData::is_type(type);
        }

        float mPerceptionBubbleRadius = 0.0;
        std::shared_ptr<yordle::data::meta::bin_class> skinMeshProperties {};
        uint32_t animationGraphData = 0;
        std::shared_ptr<yordle::data::meta::bin_class> mVFXResourceResolver {};
        std::string mBracketTRAKey {};
    };

    class YORDLE_EXPORT TrophyPedestalData : public BaseLoadoutData { 
    public:
        explicit TrophyPedestalData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4045134945 || BaseLoadoutData::is_type(type);
        }

        uint32_t animationGraphData = 0;
        std::string mJointName {};
        std::shared_ptr<yordle::data::meta::bin_class> skinMeshProperties {};
        std::string mTierTRAKey {};
    };

    class YORDLE_EXPORT x1650a4ce : public bin_class { 
    public:
        explicit x1650a4ce(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 374383822 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT EmblemPosition : public bin_class { 
    public:
        explicit EmblemPosition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1572178072 || bin_class::is_type(type);
        }

        std::string mVertical {};
        std::string mHorizontal {};
    };

    class YORDLE_EXPORT EmblemData : public bin_class { 
    public:
        explicit EmblemData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1713655491 || bin_class::is_type(type);
        }

        bool mShowOnLoadingScreen = false;
        float mLoadingScreenScale = 0.0;
        std::string mImagePath {};
    };

    class YORDLE_EXPORT EmblemSettings : public bin_class { 
    public:
        explicit EmblemSettings(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 381157638 || bin_class::is_type(type);
        }

        float mBottomFraction = 0.0;
        bool mDebugDrawEmblems = false;
    };

    class YORDLE_EXPORT GameModeAutoItemPurchasingConfig : public bin_class { 
    public:
        explicit GameModeAutoItemPurchasingConfig(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1773891178 || bin_class::is_type(type);
        }

        int32_t x19ef67a2 = 0;
        std::set<std::string> xe34f62d0 {};
        std::set<std::string> xc8adfdbc {};
        std::set<std::string> x83f0cccd {};
        uint32_t x14596d09 = 0;
    };

    class YORDLE_EXPORT GameModeChampionList : public bin_class { 
    public:
        explicit GameModeChampionList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2322891183 || bin_class::is_type(type);
        }

        std::set<uint32_t> mChampions {};
    };

    class YORDLE_EXPORT GameModeConstant : public bin_class { 
    public:
        explicit GameModeConstant(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1670770484 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT GameModeConstantFloat : public GameModeConstant { 
    public:
        explicit GameModeConstantFloat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2541033414 || GameModeConstant::is_type(type);
        }

        float mValue = 0.0;
    };

    class YORDLE_EXPORT GameModeConstantInteger : public GameModeConstant { 
    public:
        explicit GameModeConstantInteger(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1074986366 || GameModeConstant::is_type(type);
        }

        int32_t mValue = 0;
    };

    class YORDLE_EXPORT GameModeConstantBool : public GameModeConstant { 
    public:
        explicit GameModeConstantBool(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1679679788 || GameModeConstant::is_type(type);
        }

        bool mValue = false;
    };

    class YORDLE_EXPORT GameModeConstantString : public GameModeConstant { 
    public:
        explicit GameModeConstantString(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2710093141 || GameModeConstant::is_type(type);
        }

        std::string mValue {};
    };

    class YORDLE_EXPORT GameModeConstantStringVector : public GameModeConstant { 
    public:
        explicit GameModeConstantStringVector(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3193188146 || GameModeConstant::is_type(type);
        }

        std::set<std::string> mValue {};
    };

    class YORDLE_EXPORT GameModeConstantTRAKey : public GameModeConstant { 
    public:
        explicit GameModeConstantTRAKey(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4100984476 || GameModeConstant::is_type(type);
        }

        std::string mValue {};
    };

    class YORDLE_EXPORT GameModeConstantVector3f : public GameModeConstant { 
    public:
        explicit GameModeConstantVector3f(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2293025490 || GameModeConstant::is_type(type);
        }

        std::array<float, 3> mValue {};
    };

    class YORDLE_EXPORT GameModeConstantFloatPerLevel : public GameModeConstant { 
    public:
        explicit GameModeConstantFloatPerLevel(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2851992205 || GameModeConstant::is_type(type);
        }

        std::set<float> mValues {};
    };

    class YORDLE_EXPORT GameModeConstantsGroup : public bin_class { 
    public:
        explicit GameModeConstantsGroup(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 720276364 || bin_class::is_type(type);
        }

        std::map<uint32_t, std::shared_ptr<yordle::data::meta::GameModeConstant>> mConstants {};
    };

    class YORDLE_EXPORT GameModeConstants : public bin_class { 
    public:
        explicit GameModeConstants(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 201829573 || bin_class::is_type(type);
        }

        std::map<uint32_t, std::shared_ptr<yordle::data::meta::GameModeConstantsGroup>> mGroups {};
    };

    class YORDLE_EXPORT GameModeItemList : public bin_class { 
    public:
        explicit GameModeItemList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 401601815 || bin_class::is_type(type);
        }

        std::set<uint32_t> mItems {};
    };

    class YORDLE_EXPORT GameModeMapData : public bin_class { 
    public:
        explicit GameModeMapData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2312017462 || bin_class::is_type(type);
        }

        uint32_t mModeName = 0;
        std::set<uint32_t> mChampionLists {};
        std::set<uint32_t> itemLists {};
        std::string xf74c67bb {};
        uint32_t mItemShopData = 0;
        uint32_t AnnouncementsMapping = 0;
        bool mRelativeColorization = false;
        uint32_t mNeutralTimersDisplay = 0;
        uint32_t mCursorConfig = 0;
        uint32_t mCursorConfigUpdate = 0;
        uint32_t mHudScoreData = 0;
        uint32_t mRenderStyle = 0;
        uint32_t mFloatingTextOverride = 0;
        uint32_t mStatsUiData = 0;
        bool mChampionIndicatorEnabled = false;
        bool ItemShopEnabled = false;
        uint32_t mExperienceCurveData = 0;
        uint32_t mExperienceModData = 0;
        uint32_t mDeathTimes = 0;
        uint32_t mLoadScreenTipConfiguration = 0;
        uint32_t mMapLocators = 0;
        std::set<uint32_t> mScriptDataObjectLists {};
        std::shared_ptr<yordle::data::meta::bin_class> mPerkReplacements {};
        uint32_t mGameModeConstants = 0;
        uint32_t mGameplayConfig = 0;
        uint32_t mMissionBuffData = 0;
        uint32_t mSurrenderSettings = 0;
        uint32_t x6941e612 = 0;
        bool x882a6450 = false;
        std::set<uint32_t> x70b29c3d {};
        std::string mLoadingScreenBackground {};
    };

    class YORDLE_EXPORT GameMutatorExpansions : public bin_class { 
    public:
        explicit GameMutatorExpansions(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4119089369 || bin_class::is_type(type);
        }

        std::string mExpandedMutator {};
        std::set<std::string> mMutators {};
    };

    class YORDLE_EXPORT IGameCalculationPart : public bin_class { 
    public:
        explicit IGameCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3053458126 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT EffectValueCalculationPart : public IGameCalculationPart { 
    public:
        explicit EffectValueCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2344649559 || IGameCalculationPart::is_type(type);
        }

        int32_t mEffectIndex = 0;
    };

    class YORDLE_EXPORT NamedDataValueCalculationPart : public IGameCalculationPart { 
    public:
        explicit NamedDataValueCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 858698817 || IGameCalculationPart::is_type(type);
        }

        uint32_t mDataValue = 0;
    };

    class YORDLE_EXPORT CooldownMultiplierCalculationPart : public IGameCalculationPart { 
    public:
        explicit CooldownMultiplierCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 515850313 || IGameCalculationPart::is_type(type);
        }

    };

    class YORDLE_EXPORT CustomReductionMultiplierCalculationPart : public IGameCalculationPart { 
    public:
        explicit CustomReductionMultiplierCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2599819896 || IGameCalculationPart::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IGameCalculationPart> x6e82b179 {};
        float mMaximumReductionPercent = 0.0;
    };

    class YORDLE_EXPORT ProductOfSubPartsCalculationPart : public IGameCalculationPart { 
    public:
        explicit ProductOfSubPartsCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2903535207 || IGameCalculationPart::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IGameCalculationPart> mPart1 {};
        std::shared_ptr<yordle::data::meta::IGameCalculationPart> mPart2 {};
    };

    class YORDLE_EXPORT SumOfSubPartsCalculationPart : public IGameCalculationPart { 
    public:
        explicit SumOfSubPartsCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2225484659 || IGameCalculationPart::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::IGameCalculationPart>> mSubparts {};
    };

    class YORDLE_EXPORT x803dae4c : public IGameCalculationPart { 
    public:
        explicit x803dae4c(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2151525964 || IGameCalculationPart::is_type(type);
        }

        std::optional<float> mCeiling {};
        std::optional<float> mFloor {};
        std::set<std::shared_ptr<yordle::data::meta::IGameCalculationPart>> mSubparts {};
    };

    class YORDLE_EXPORT NumberCalculationPart : public IGameCalculationPart { 
    public:
        explicit NumberCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2667126912 || IGameCalculationPart::is_type(type);
        }

        float mNumber = 0.0;
    };

    class YORDLE_EXPORT IGameCalculationPartWithStats : public IGameCalculationPart { 
    public:
        explicit IGameCalculationPartWithStats(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3052837161 || IGameCalculationPart::is_type(type);
        }

        uint8_t mStat = 0;
        uint8_t mStatFormula = 0;
    };

    class YORDLE_EXPORT StatByCoefficientCalculationPart : public IGameCalculationPartWithStats { 
    public:
        explicit StatByCoefficientCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1477816489 || IGameCalculationPartWithStats::is_type(type);
        }

        float mCoefficient = 0.0;
    };

    class YORDLE_EXPORT StatBySubPartCalculationPart : public IGameCalculationPartWithStats { 
    public:
        explicit StatBySubPartCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3440733311 || IGameCalculationPartWithStats::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IGameCalculationPart> mSubpart {};
    };

    class YORDLE_EXPORT StatByNamedDataValueCalculationPart : public IGameCalculationPartWithStats { 
    public:
        explicit StatByNamedDataValueCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1599893668 || IGameCalculationPartWithStats::is_type(type);
        }

        uint32_t mDataValue = 0;
    };

    class YORDLE_EXPORT x5abdfab : public IGameCalculationPart { 
    public:
        explicit x5abdfab(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 95149995 || IGameCalculationPart::is_type(type);
        }

        uint8_t mStat = 0;
        uint8_t mStatFormula = 0;
        float xbfe6ad01 = 0.0;
        uint32_t mDataValue = 0;
    };

    class YORDLE_EXPORT xe9fb4d18 : public IGameCalculationPart { 
    public:
        explicit xe9fb4d18(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3925560600 || IGameCalculationPart::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IGameCalculationPart> x616627c4 {};
        uint8_t x465802ea = 0;
        uint8_t x27833dcc = 0;
    };

    class YORDLE_EXPORT SubPartScaledProportionalToStat : public IGameCalculationPart { 
    public:
        explicit SubPartScaledProportionalToStat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2572940566 || IGameCalculationPart::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IGameCalculationPart> mSubpart {};
        float mRatio = 0.0;
        uint8_t mStat = 0;
        uint8_t mStatFormula = 0;
        std::string mStyleTag {};
        std::string xa5749b52 {};
    };

    class YORDLE_EXPORT AbilityResourceByCoefficientCalculationPart : public IGameCalculationPart { 
    public:
        explicit AbilityResourceByCoefficientCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1983743771 || IGameCalculationPart::is_type(type);
        }

        float mCoefficient = 0.0;
        uint8_t mAbilityResource = 0;
        uint8_t mStatFormula = 0;
    };

    class YORDLE_EXPORT IGameCalculationPartWithBuffCounter : public IGameCalculationPart { 
    public:
        explicit IGameCalculationPartWithBuffCounter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1989226833 || IGameCalculationPart::is_type(type);
        }

        uint32_t mBuffName = 0;
        std::string mIconKey {};
        std::string mScalingTagKey {};
    };

    class YORDLE_EXPORT BuffCounterByCoefficientCalculationPart : public IGameCalculationPartWithBuffCounter { 
    public:
        explicit BuffCounterByCoefficientCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1255179386 || IGameCalculationPartWithBuffCounter::is_type(type);
        }

        float mCoefficient = 0.0;
    };

    class YORDLE_EXPORT BuffCounterByNamedDataValueCalculationPart : public IGameCalculationPartWithBuffCounter { 
    public:
        explicit BuffCounterByNamedDataValueCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2063182569 || IGameCalculationPartWithBuffCounter::is_type(type);
        }

        uint32_t mDataValue = 0;
    };

    class YORDLE_EXPORT IGameCalculationPartByCharLevel : public IGameCalculationPart { 
    public:
        explicit IGameCalculationPartByCharLevel(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 308440063 || IGameCalculationPart::is_type(type);
        }

    };

    class YORDLE_EXPORT ByCharLevelInterpolationCalculationPart : public IGameCalculationPartByCharLevel { 
    public:
        explicit ByCharLevelInterpolationCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 369020348 || IGameCalculationPartByCharLevel::is_type(type);
        }

        float mStartValue = 0.0;
        float mEndValue = 0.0;
        bool x7fe8e3b3 = false;
        bool xa331f6bf = false;
    };

    class YORDLE_EXPORT ByCharLevelBreakpointsCalculationPart : public IGameCalculationPartByCharLevel { 
    public:
        explicit ByCharLevelBreakpointsCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1559666382 || IGameCalculationPartByCharLevel::is_type(type);
        }

        float mLevel1Value = 0.0;
        float x2deb550 = 0.0;
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> mBreakpoints {};
    };

    class YORDLE_EXPORT Breakpoint : public bin_class { 
    public:
        explicit Breakpoint(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2392053998 || bin_class::is_type(type);
        }

        uint32_t mLevel = 0;
        float xd5fd07ed = 0.0;
        float x57fdc438 = 0.0;
    };

    class YORDLE_EXPORT ByCharLevelFormulaCalculationPart : public IGameCalculationPartByCharLevel { 
    public:
        explicit ByCharLevelFormulaCalculationPart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 606188120 || IGameCalculationPartByCharLevel::is_type(type);
        }

        std::set<float> mValues {};
    };

    class YORDLE_EXPORT x663d5e00 : public IGameCalculationPart { 
    public:
        explicit x663d5e00(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1715297792 || IGameCalculationPart::is_type(type);
        }

        float Coefficient = 0.0;
        uint8_t epicness = 0;
    };

    class YORDLE_EXPORT IGameCalculation : public bin_class { 
    public:
        explicit IGameCalculation(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 389493299 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IGameCalculationPart> mMultiplier {};
        uint8_t xcbcac618 = 0;
        uint8_t x37070a8d = 0;
        uint8_t xe6eebb2f = 0;
        bool tooltipOnly = false;
    };

    class YORDLE_EXPORT GameCalculation : public IGameCalculation { 
    public:
        explicit GameCalculation(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3158348420 || IGameCalculation::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::IGameCalculationPart>> mFormulaParts {};
        bool mDisplayAsPercent = false;
        int32_t mPrecision = 0;
    };

    class YORDLE_EXPORT GameCalculationModified : public IGameCalculation { 
    public:
        explicit GameCalculationModified(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 118371731 || IGameCalculation::is_type(type);
        }

        std::optional<int32_t> mOverrideSpellLevel {};
        uint32_t mModifiedGameCalculation = 0;
    };

    class YORDLE_EXPORT GameCalculationConditional : public IGameCalculation { 
    public:
        explicit GameCalculationConditional(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3922646404 || IGameCalculation::is_type(type);
        }

        uint32_t mDefaultGameCalculation = 0;
        uint32_t mConditionalGameCalculation = 0;
        std::shared_ptr<yordle::data::meta::bin_class> xc0482365 {};
    };

    class YORDLE_EXPORT GameplayConfig : public bin_class { 
    public:
        explicit GameplayConfig(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3168105463 || bin_class::is_type(type);
        }

        float mSpellPostponeTimeoutSec = 0.0;
        float mAutoAttackMinPreCastLockoutDeltaTimeSec = 0.0;
        float mAutoAttackMinPostCastLockoutDeltaTimeSec = 0.0;
        float mLethalityPercentGivenAtLevel0 = 0.0;
        int32_t mLethalityScalesToLevel = 0;
        int32_t mLethalityScalesCapsAtLevel = 0;
        float mLethalityRatioFromTarget = 0.0;
        float mLethalityRatioFromAttacker = 0.0;
        float AbilityHasteMax = 0.0;
        float mCritTotalArmorPenPercent = 0.0;
        float mCritBonusArmorPenPercent = 0.0;
        float mCritGlobalDamageMultiplier = 0.0;
        float mAdaptiveForceAbilityPowerScale = 0.0;
        float mAdaptiveForceAttackDamageScale = 0.0;
        float mMinionDeathDelay = 0.0;
        float mMinionAutoLeeway = 0.0;
        float mMinionAAHelperLimit = 0.0;
        float mItemSellQueueTime = 0.0;
        std::shared_ptr<yordle::data::meta::bin_class> mCCScoreMultipliers {};
        bool mPerSlotCDRIsAdditive = false;
        std::set<uint32_t> mSummonerSpells {};
        std::set<uint32_t> mLegacySummonerSpells {};
        std::shared_ptr<yordle::data::meta::IGameCalculation> mBasicAttackCalculation {};
        uint32_t ItemsRolesPerRow = 0;
        uint32_t xa64802f2 = 0;
    };

    class YORDLE_EXPORT EnchantmentGroup : public bin_class { 
    public:
        explicit EnchantmentGroup(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 903342517 || bin_class::is_type(type);
        }

        std::set<int32_t> mEnchantments {};
        std::set<int32_t> mBaseItems {};
        bool mCanSidegrade = false;
        int32_t mItemIdRangeMinimum = 0;
        int32_t mItemIdRangeMaximum = 0;
    };

    class YORDLE_EXPORT ItemData : public bin_class { 
    public:
        explicit ItemData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 608970470 || bin_class::is_type(type);
        }

        std::string spellName {};
        std::string mDisplayName {};
        std::string mRequiredChampion {};
        std::string mRequiredAlly {};
        int32_t mRequiredLevel = 0;
        std::string mRequiredSpellName {};
        std::set<uint32_t> mRequiredPurchaseIdentities {};
        std::string mDisabledDescriptionOverride {};
        std::string mParentEnchantmentGroup {};
        std::string mDeathRecapName {};
        int32_t itemID = 0;
        int32_t maxStack = 0;
        std::set<uint32_t> mItemGroups {};
        std::set<uint32_t> mItemAdviceAttributes {};
        uint32_t itemVOGroup = 0;
        int32_t price = 0;
        std::string mRequiredBuffCurrencyName {};
        int32_t mRequiredBuffCurrencyCost = 0;
        float mSidegradeCredit = 0.0;
        bool consumed = false;
        bool usableInStore = false;
        bool consumeOnAcquire = false;
        bool clickable = false;
        bool mMajorActiveItem = false;
        bool mItemCalloutPlayer = false;
        bool mItemCalloutSpectator = false;
        uint8_t clearUndoHistory = 0;
        bool mCanBeSold = false;
        bool mHiddenFromOpponents = false;
        bool mIsEnchantment = false;
        int32_t specialRecipe = 0;
        uint8_t epicness = 0;
        uint8_t SecondaryEpicness = 0;
        std::set<uint32_t> recipeItemLinks {};
        std::set<uint32_t> requiredItemLinks {};
        std::set<uint32_t> sidegradeItemLinks {};
        std::set<uint32_t> mItemModifiers {};
        std::set<std::string> mScripts {};
        uint32_t parentItemLink = 0;
        uint32_t parentEnchantmentLink = 0;
        std::set<float> mEffectAmount {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> mDataValues {};
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::bin_class>> xfb56608c {};
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::IGameCalculation>> mItemCalculations {};
        std::set<float> mEnchantmentEffectAmount {};
        std::set<float> mEffectByLevelAmount {};
        float mFlatCooldownMod = 0.0;
        float mPercentCooldownMod = 0.0;
        float mAbilityHasteMod = 0.0;
        float mFlatHPPoolMod = 0.0;
        float mPercentHPPoolMod = 0.0;
        float mFlatHPRegenMod = 0.0;
        float mPercentHPRegenMod = 0.0;
        float mPercentBaseHPRegenMod = 0.0;
        float mPercentTenacityItemMod = 0.0;
        float mPercentSlowResistMod = 0.0;
        float mFlatMovementSpeedMod = 0.0;
        float mPercentMovementSpeedMod = 0.0;
        float mPercentMultiplicativeMovementSpeedMod = 0.0;
        float mFlatArmorMod = 0.0;
        float mPercentArmorMod = 0.0;
        float mFlatArmorPenetrationMod = 0.0;
        float mPercentArmorPenetrationMod = 0.0;
        float mPercentBonusArmorPenetrationMod = 0.0;
        float mFlatMagicPenetrationMod = 0.0;
        float mPercentMagicPenetrationMod = 0.0;
        float mPercentBonusMagicPenetrationMod = 0.0;
        float mFlatSpellBlockMod = 0.0;
        float mPercentSpellBlockMod = 0.0;
        float mFlatDodgeMod = 0.0;
        float mFlatCritChanceMod = 0.0;
        float mFlatMissChanceMod = 0.0;
        float mFlatCritDamageMod = 0.0;
        float mPercentCritDamageMod = 0.0;
        float mFlatPhysicalDamageMod = 0.0;
        float mPercentPhysicalDamageMod = 0.0;
        float mFlatMagicDamageMod = 0.0;
        float mPercentMagicDamageMod = 0.0;
        float mFlatPhysicalReduction = 0.0;
        float mPercentPhysicalReduction = 0.0;
        float mFlatMagicReduction = 0.0;
        float mPercentMagicReduction = 0.0;
        float mPercentEXPBonus = 0.0;
        float mFlatAttackRangeMod = 0.0;
        float mPercentAttackRangeMod = 0.0;
        float mFlatCastRangeMod = 0.0;
        float mPercentCastRangeMod = 0.0;
        float mPercentAttackSpeedMod = 0.0;
        float mPercentMultiplicativeAttackSpeedMod = 0.0;
        float mPercentHealingAmountMod = 0.0;
        float mPercentLifeStealMod = 0.0;
        float mPercentSpellVampMod = 0.0;
        float PercentPhysicalVampMod = 0.0;
        float PercentOmnivampMod = 0.0;
        float mPercentSpellEffectivenessMod = 0.0;
        float mFlatBubbleRadiusMod = 0.0;
        float mPercentBubbleRadiusMod = 0.0;
        float sellBackModifier = 0.0;
        float mCooldownShowDisabledDuration = 0.0;
        float flatMPPoolMod = 0.0;
        float PercentMPPoolMod = 0.0;
        float flatMPRegenMod = 0.0;
        float PercentMPRegenMod = 0.0;
        float percentBaseMPRegenMod = 0.0;
        std::shared_ptr<yordle::data::meta::bin_class> mItemDataBuild {};
        std::set<std::string> mCategories {};
        std::shared_ptr<yordle::data::meta::bin_class> mItemDataAvailability {};
        int32_t mBuildDepth = 0;
        std::set<uint8_t> mItemAttributes {};
        int32_t x224a3815 = 0;
        uint8_t xc01bb6dd = 0;
        uint8_t x51265c89 = 0;
        std::shared_ptr<yordle::data::meta::bin_class> mItemDataClient {};
        std::shared_ptr<yordle::data::meta::bin_class> mVFXResourceResolver {};
    };

    class YORDLE_EXPORT ItemDataValue : public bin_class { 
    public:
        explicit ItemDataValue(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2999331975 || bin_class::is_type(type);
        }

        std::string mName {};
        float mValue = 0.0;
    };

    class YORDLE_EXPORT x61f8c41c : public bin_class { 
    public:
        explicit x61f8c41c(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1643693084 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::ItemDataValue>> x6afef1b {};
    };

    class YORDLE_EXPORT ItemDataAvailability : public bin_class { 
    public:
        explicit ItemDataAvailability(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3225152729 || bin_class::is_type(type);
        }

        bool mInStore = false;
        bool mForceLoad = false;
        bool mHidefromAll = false;
    };

    class YORDLE_EXPORT ItemDataBuild : public bin_class { 
    public:
        explicit ItemDataBuild(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3845505502 || bin_class::is_type(type);
        }

        std::set<uint32_t> itemLinks {};
    };

    class YORDLE_EXPORT ItemGroup : public bin_class { 
    public:
        explicit ItemGroup(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 992861497 || bin_class::is_type(type);
        }

        uint32_t mItemGroupID = 0;
        int32_t mMaxGroupOwnable = 0;
        int32_t mInventorySlotMin = 0;
        int32_t mInventorySlotMax = 0;
        float mPurchaseCooldown = 0.0;
        bool mCooldownExtendedByAmbientGoldStart = false;
        std::set<uint32_t> mItemModifiers {};
    };

    class YORDLE_EXPORT ItemModifier : public bin_class { 
    public:
        explicit ItemModifier(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2109319947 || bin_class::is_type(type);
        }

        uint32_t mItemModifierID = 0;
        uint32_t mModifiedItem = 0;
        uint32_t mModifiedGroup = 0;
        uint32_t mModifiedIfBuildsFromItem = 0;
        int32_t mMinimumModifierInstancesToBeActive = 0;
        int32_t mMaximumModifierInstancesToBeActive = 0;
        int32_t mMaximumDeltasToStack = 0;
        bool mShowAsModifiedInUI = false;
        bool mModifierIsInheritedByOwnedParentItems = false;
        std::set<uint32_t> mAddedBuildFrom {};
        std::set<uint32_t> mRemovedBuildFrom {};
        bool mReplaceInsteadOfAddingBuildFrom = false;
        bool mIgnoreMaxGroupOwnable = false;
        uint32_t mIgnoreSpecificMaxGroupOwnable = 0;
        float mDeltaGoldCost = 0.0;
        float mDeltaGoldCostPercent = 0.0;
        float mDeltaBuffCurrencyCostPercent = 0.0;
        int32_t mDeltaRequiredLevel = 0;
        int32_t mDeltaBuffCurrencyCost = 0;
        int32_t mDeltaMaxStacks = 0;
        int32_t mVisualPriority = 0;
        std::string inventoryIconToOverlay {};
        std::string mDescriptionToAppend {};
        std::string mDescriptionToPrepend {};
        std::string mDescriptionToReplace {};
        std::string mDynamicTooltipToAppend {};
        std::string mDynamicTooltipToPrepend {};
        std::string mDynamicTooltipToReplace {};
        std::string mDisplayNameToAppend {};
        std::string mDisplayNameToPrepend {};
        std::string mDisplayNameToReplace {};
        bool mClickableToEnable = false;
        bool mMajorActiveItemToEnable = false;
        std::string mSpellNameToReplace {};
    };

    class YORDLE_EXPORT ItemDataClient : public bin_class { 
    public:
        explicit ItemDataClient(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2233135733 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mTooltipData {};
        std::string mDescription {};
        std::string mDynamicTooltip {};
        std::string mShopTooltip {};
        std::string ShopExtendedTooltip {};
        std::string inventoryIcon {};
        std::string InventoryIconSmall {};
        std::string InventoryIconLarge {};
        uint32_t InventoryIconMaterial = 0;
        uint8_t epicness = 0;
        float effectRadius = 0.0;
        std::set<int32_t> mFloatVarsDecimals {};
    };

    class YORDLE_EXPORT ChampionItemRecommendations : public bin_class { 
    public:
        explicit ChampionItemRecommendations(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3337884263 || bin_class::is_type(type);
        }

        uint32_t xcc35ff18 = 0;
        uint32_t mContextListLink = 0;
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> xad6d25a8 {};
        std::set<uint32_t> x2d7fd821 {};
    };

    class YORDLE_EXPORT ItemRecommendationItemList : public bin_class { 
    public:
        explicit ItemRecommendationItemList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1183984318 || bin_class::is_type(type);
        }

        std::set<uint32_t> mItemList {};
    };

    class YORDLE_EXPORT ItemRecommendationContextList : public bin_class { 
    public:
        explicit ItemRecommendationContextList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2188140632 || bin_class::is_type(type);
        }

        std::map<uint32_t, std::shared_ptr<yordle::data::meta::ItemRecommendationItemList>> mAllStartingItemIds {};
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::ItemRecommendationItemList>> xa109530e {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> mContexts {};
    };

    class YORDLE_EXPORT ItemRecommendationContext : public bin_class { 
    public:
        explicit ItemRecommendationContext(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4266457040 || bin_class::is_type(type);
        }

        uint32_t mChampionId = 0;
        uint32_t mMapID = 0;
        uint32_t x37b75f5c = 0;
        uint32_t mPosition = 0;
        bool mIsDefaultPosition = false;
        std::shared_ptr<yordle::data::meta::bin_class> mStartingItemMatrix {};
        std::set<std::shared_ptr<yordle::data::meta::ItemRecommendationItemList>> mStartingItemBundles {};
        std::set<uint32_t> mPopularItems {};
        std::shared_ptr<yordle::data::meta::bin_class> mCompletedItemMatrix {};
    };

    class YORDLE_EXPORT ItemRecommendationChoices : public bin_class { 
    public:
        explicit ItemRecommendationChoices(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1589364011 || bin_class::is_type(type);
        }

        std::set<uint32_t> mChoices {};
    };

    class YORDLE_EXPORT ItemRecommendationMatrixRow : public bin_class { 
    public:
        explicit ItemRecommendationMatrixRow(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2727115092 || bin_class::is_type(type);
        }

        std::map<std::string, std::shared_ptr<yordle::data::meta::ItemRecommendationChoices>> mChoicesMap {};
    };

    class YORDLE_EXPORT ItemRecommendationMatrix : public bin_class { 
    public:
        explicit ItemRecommendationMatrix(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 779837744 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::ItemRecommendationMatrixRow>> mrows {};
    };

    class YORDLE_EXPORT x5a3bc52d : public bin_class { 
    public:
        explicit x5a3bc52d(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1513866541 || bin_class::is_type(type);
        }

        std::set<uint32_t> items {};
        uint32_t x50ef1a22 = 0;
    };

    class YORDLE_EXPORT ItemRecommendationCondition : public bin_class { 
    public:
        explicit ItemRecommendationCondition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 396544810 || bin_class::is_type(type);
        }

        uint32_t mItem = 0;
        uint32_t mDisplayLimit = 0;
        uint8_t mGroupId = 0;
    };

    class YORDLE_EXPORT ItemRecommendationOverrideContext : public bin_class { 
    public:
        explicit ItemRecommendationOverrideContext(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3898055584 || bin_class::is_type(type);
        }

        uint32_t mMapID = 0;
        uint32_t x37b75f5c = 0;
        uint32_t mPosition = 0;
    };

    class YORDLE_EXPORT ItemRecommendationOverrideStartingItemSet : public bin_class { 
    public:
        explicit ItemRecommendationOverrideStartingItemSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2556481222 || bin_class::is_type(type);
        }

        std::set<uint32_t> mStartingItems {};
    };

    class YORDLE_EXPORT ItemRecommendationOverride : public bin_class { 
    public:
        explicit ItemRecommendationOverride(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1661050393 || bin_class::is_type(type);
        }

        bool mForceOverride = false;
        std::set<std::shared_ptr<yordle::data::meta::ItemRecommendationOverrideContext>> mOverrideContexts {};
        std::set<std::shared_ptr<yordle::data::meta::ItemRecommendationOverrideStartingItemSet>> mStartingItemSets {};
        std::set<std::shared_ptr<yordle::data::meta::x5a3bc52d>> mRecItemRanges {};
        std::set<uint32_t> mCoreItems {};
        std::set<std::shared_ptr<yordle::data::meta::ItemRecommendationCondition>> mRecommendedItems {};
    };

    class YORDLE_EXPORT ItemRecommendationOverrideSet : public bin_class { 
    public:
        explicit ItemRecommendationOverrideSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2753712911 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::ItemRecommendationOverride>> mOverrides {};
    };

    class YORDLE_EXPORT ItemAdviceAttribute : public bin_class { 
    public:
        explicit ItemAdviceAttribute(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 573358062 || bin_class::is_type(type);
        }

        std::string mAttribute {};
    };

    class YORDLE_EXPORT ItemCareyOverrideStartingItemSet : public bin_class { 
    public:
        explicit ItemCareyOverrideStartingItemSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2822771443 || bin_class::is_type(type);
        }

        uint32_t mAttribute = 0;
    };

    class YORDLE_EXPORT ItemCareyOverrideStartingItemSetSet : public bin_class { 
    public:
        explicit ItemCareyOverrideStartingItemSetSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1101955153 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::ItemCareyOverrideStartingItemSet>> x6ca781cd {};
    };

    class YORDLE_EXPORT ItemShopGameModeData : public bin_class { 
    public:
        explicit ItemShopGameModeData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4103435203 || bin_class::is_type(type);
        }

        std::set<uint32_t> xc561f8e9 {};
        uint32_t xc3b3430a = 0;
        uint32_t x51a18bc3 = 0;
        std::map<uint32_t, uint32_t> x897c69b7 {};
        std::map<uint32_t, uint32_t> RecItemsSwaps {};
    };

    class YORDLE_EXPORT CollectiblesEsportsTeamData : public bin_class { 
    public:
        explicit CollectiblesEsportsTeamData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3808259511 || bin_class::is_type(type);
        }

        uint32_t teamId = 0;
        std::string shortName {};
        std::string fullName {};
        std::string leagueName {};
    };

    class YORDLE_EXPORT SummonerIconData : public bin_class { 
    public:
        explicit SummonerIconData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2783969040 || bin_class::is_type(type);
        }

        uint32_t iconId = 0;
        uint32_t esportsTeam = 0;
        std::string gameTexture {};
        bool x50e5b6e1 = false;
        std::string eSportsEventMutator {};
    };

    class YORDLE_EXPORT LiveFeatureToggles : public bin_class { 
    public:
        explicit LiveFeatureToggles(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 954042444 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mLoLToggles {};
        std::shared_ptr<yordle::data::meta::bin_class> mGameplayToggles {};
        std::shared_ptr<yordle::data::meta::bin_class> mEngineToggles {};
    };

    class YORDLE_EXPORT LoLFeatureToggles : public bin_class { 
    public:
        explicit LoLFeatureToggles(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3353146463 || bin_class::is_type(type);
        }

        bool NewSpellScript = false;
        bool xf2505841 = false;
        bool x6dbee4b7 = false;
        bool xa3820b10 = false;
        bool ItemUndo = false;
        bool xf1125a78 = false;
        bool queuedOrdersTriggerPreIssueOrder = false;
        bool EnableCustomPlayerScoreColoring = false;
        bool closeOnEndGameAfterDelay = false;
        bool PromoController = false;
        bool cooldownSpellQueueing = false;
        bool useNewAttackSpeed = false;
        bool UseNewFireBBEvents = false;
        bool abilityResetUI = false;
        bool xa6cc4da4 = false;
        bool xa6000d17 = false;
        bool xed504579 = false;
        bool xd3323ebc = false;
        bool x8cd3b1f9 = false;
        bool x8bab003a = false;
        bool x3e3c2065 = false;
        bool x6f0ba2b0 = false;
        bool x69b85d1 = false;
        bool x59e03167 = false;
        bool x6d9b5c59 = false;
        bool xcc5e3f8d = false;
        bool x82799f80 = false;
        bool x92187457 = false;
        bool x768400a9 = false;
        bool xa28bbddc = false;
        bool x76e809b = false;
        bool x9b710bf6 = false;
        bool x68c9483d = false;
        bool xc779da22 = false;
        bool x9cfc57ba = false;
        bool xcd2f9591 = false;
        bool x85af0cb5 = false;
        bool x84fe7ccf = false;
        bool x90e08cc7 = false;
        bool x2f0e955a = false;
        bool xefe584bb = false;
        bool xc25a56fb = false;
    };

    class YORDLE_EXPORT GDSMapObjectExtraInfo : public bin_class { 
    public:
        explicit GDSMapObjectExtraInfo(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1222455122 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT GDSMapObjectAnimationInfo : public GDSMapObjectExtraInfo { 
    public:
        explicit GDSMapObjectAnimationInfo(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2301501426 || GDSMapObjectExtraInfo::is_type(type);
        }

        std::string defaultAnimation {};
        bool looping = false;
        bool destroyOnCompletion = false;
        float duration = 0.0;
    };

    class YORDLE_EXPORT GDSMapObjectLightingInfo : public GDSMapObjectExtraInfo { 
    public:
        explicit GDSMapObjectLightingInfo(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 651368964 || GDSMapObjectExtraInfo::is_type(type);
        }

        std::set<std::array<float, 4>> colors {};
    };

    class YORDLE_EXPORT GDSMapObjectBannerInfo : public GDSMapObjectExtraInfo { 
    public:
        explicit GDSMapObjectBannerInfo(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1777761610 || GDSMapObjectExtraInfo::is_type(type);
        }

        uint32_t BannerData = 0;
    };

    class YORDLE_EXPORT LootOutputBase : public bin_class { 
    public:
        explicit LootOutputBase(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2506702743 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT LootItemDetails : public bin_class { 
    public:
        explicit LootItemDetails(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1665937510 || bin_class::is_type(type);
        }

        uint32_t mStoreId = 0;
        uint32_t mRarity = 0;
        uint32_t mValue = 0;
    };

    class YORDLE_EXPORT LootStatus : public bin_class { 
    public:
        explicit LootStatus(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 685945729 || bin_class::is_type(type);
        }

        std::set<std::string> mTags {};
        std::string mImageTexturePath {};
        std::string mActiveDate {};
        std::string mInactiveDate {};
        int32_t mLifetimeMax = 0;
        bool mAutoRedeem = false;
        bool mActive = false;
    };

    class YORDLE_EXPORT LootItem : public LootOutputBase { 
    public:
        explicit LootItem(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1545315440 || LootOutputBase::is_type(type);
        }

        std::string mInternalName {};
        std::string mName {};
        std::string mHoverDescription {};
        std::string mAdminDescription {};
        std::shared_ptr<yordle::data::meta::LootStatus> mStatus {};
        std::shared_ptr<yordle::data::meta::LootItemDetails> mDetails {};
    };

    class YORDLE_EXPORT ClientStateCommonSettings : public bin_class { 
    public:
        explicit ClientStateCommonSettings(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2643135015 || bin_class::is_type(type);
        }

        uint32_t x5b40f8fd = 0;
        uint32_t x6a9d87e7 = 0;
        uint32_t xefe9214c = 0;
    };

    class YORDLE_EXPORT IdentityInstance : public bin_class { 
    public:
        explicit IdentityInstance(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1790162312 || bin_class::is_type(type);
        }

        std::string mItemTexturePath {};
    };

    class YORDLE_EXPORT x4d31ed46 : public bin_class { 
    public:
        explicit x4d31ed46(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1295117638 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IdentityInstance> mIdentityInstance {};
        std::shared_ptr<yordle::data::meta::CatalogEntry> mCatalogEntry {};
    };

    class YORDLE_EXPORT x14aef50c : public bin_class { 
    public:
        explicit x14aef50c(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 347010316 || bin_class::is_type(type);
        }

        std::string mInventoryType {};
        uint8_t mOrder = 0;
        std::set<int32_t> mItemIDs {};
        std::set<std::shared_ptr<yordle::data::meta::x14aef50c>> mInventoryFilters {};
    };

    class YORDLE_EXPORT x9f59e92d : public bin_class { 
    public:
        explicit x9f59e92d(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2673469741 || bin_class::is_type(type);
        }

        std::string mName {};
        uint8_t mOrder = 0;
        bool mEnabled = false;
        std::set<std::shared_ptr<yordle::data::meta::x14aef50c>> mInventoryFilters {};
    };

    class YORDLE_EXPORT MapAction : public bin_class { 
    public:
        explicit MapAction(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3419333123 || bin_class::is_type(type);
        }

        float startTime = 0.0;
    };

    class YORDLE_EXPORT xaf23408c : public MapAction { 
    public:
        explicit xaf23408c(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2938323084 || MapAction::is_type(type);
        }

        std::set<std::string> x5c042946 {};
        std::string x15db0d85 {};
        float x29a7efc6 = 0.0;
        bool Shuffle = false;
    };

    class YORDLE_EXPORT x8c0d80f5 : public MapAction { 
    public:
        explicit x8c0d80f5(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2349695221 || MapAction::is_type(type);
        }

        std::set<std::string> MapParticleName {};
        bool Shuffle = false;
    };

    class YORDLE_EXPORT x6cdbb71d : public MapAction { 
    public:
        explicit x6cdbb71d(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1826338589 || MapAction::is_type(type);
        }

        std::string targetName {};
        std::string pathname {};
        float duration = 0.0;
        float velocity = 0.0;
        bool x3ade3a5d = false;
        bool xeefb990f = false;
    };

    class YORDLE_EXPORT MapActionPlayAnimation : public MapAction { 
    public:
        explicit MapActionPlayAnimation(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3013740817 || MapAction::is_type(type);
        }

        std::string PropName {};
        std::string animationName {};
        bool looping = false;
    };

    class YORDLE_EXPORT MapActionPlaySoundAtLocation : public MapAction { 
    public:
        explicit MapActionPlaySoundAtLocation(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2134659206 || MapAction::is_type(type);
        }

        std::string SoundEventName {};
        std::string LocationName {};
    };

    class YORDLE_EXPORT x49da656e : public MapAction { 
    public:
        explicit x49da656e(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1239049582 || MapAction::is_type(type);
        }

        std::string PropName {};
        std::string Key {};
        float value = 0.0;
    };

    class YORDLE_EXPORT xced6ab09 : public MapAction { 
    public:
        explicit xced6ab09(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3470174985 || MapAction::is_type(type);
        }

        std::set<std::string> MapParticleName {};
        bool shown = false;
    };

    class YORDLE_EXPORT xe1bb8efb : public MapAction { 
    public:
        explicit xe1bb8efb(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3787165435 || MapAction::is_type(type);
        }

    };

    class YORDLE_EXPORT MapAlternateAsset : public bin_class { 
    public:
        explicit MapAlternateAsset(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3846963535 || bin_class::is_type(type);
        }

        std::string mGrassTintTextureName {};
        std::string x603134b8 {};
        std::string x198716d9 {};
        uint32_t mParticleResourceResolver = 0;
        uint32_t x97472c4d = 0;
    };

    class YORDLE_EXPORT MapAlternateAssets : public bin_class { 
    public:
        explicit MapAlternateAssets(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 849736052 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::MapAlternateAsset>> mAlternateAssets {};
    };

    class YORDLE_EXPORT MapCharacterList : public bin_class { 
    public:
        explicit MapCharacterList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 199060396 || bin_class::is_type(type);
        }

        std::set<uint32_t> characters {};
    };

    class YORDLE_EXPORT MapLocatorArray : public bin_class { 
    public:
        explicit MapLocatorArray(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2902067178 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::bin_class>> locators {};
    };

    class YORDLE_EXPORT MapNavigationGridOverlays : public bin_class { 
    public:
        explicit MapNavigationGridOverlays(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3880372342 || bin_class::is_type(type);
        }

        std::map<std::string, uint32_t> overlays {};
    };

    class YORDLE_EXPORT MapNavigationGridOverlay : public bin_class { 
    public:
        explicit MapNavigationGridOverlay(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 953399041 || bin_class::is_type(type);
        }

        std::string navGridFileName {};
        std::string regionsFilename {};
    };

    class YORDLE_EXPORT MapSkinColorizationPostEffect : public bin_class { 
    public:
        explicit MapSkinColorizationPostEffect(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 955345470 || bin_class::is_type(type);
        }

        std::array<float, 3> mMultipliersRGB {};
        float mMultipliersSaturation = 0.0;
    };

    class YORDLE_EXPORT MapSkin : public bin_class { 
    public:
        explicit MapSkin(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3441028924 || bin_class::is_type(type);
        }

        std::string mMapContainerLink {};
        std::shared_ptr<yordle::data::meta::bin_class> mMinimapBackgroundConfig {};
        std::shared_ptr<yordle::data::meta::MapAlternateAssets> mAlternateAssets {};
        std::string mMapObjectsCFG {};
        std::string mNavigationMesh {};
        uint32_t x14f54bbd = 0;
        std::string mWorldGeometry {};
        std::string mWorldParticlesINI {};
        std::shared_ptr<yordle::data::meta::MapSkinColorizationPostEffect> mColorizationPostEffect {};
        std::string mGrassTintTexture {};
        std::string xb0e90e8e {};
        std::map<uint32_t, int32_t> mObjectSkinFallbacks {};
        std::set<uint32_t> mResourceResolvers {};
    };

    class YORDLE_EXPORT MapVisibilityFlagRange : public bin_class { 
    public:
        explicit MapVisibilityFlagRange(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 298132920 || bin_class::is_type(type);
        }

        uint8_t minIndex = 0;
        uint8_t maxIndex = 0;
    };

    class YORDLE_EXPORT MapVisibilityFlagDefinition : public bin_class { 
    public:
        explicit MapVisibilityFlagDefinition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 730516414 || bin_class::is_type(type);
        }

        uint32_t name = 0;
        std::string PublicName {};
        uint8_t BitIndex = 0;
        float transitionTime = 0.0;
    };

    class YORDLE_EXPORT MapVisibilityFlagDefinitions : public bin_class { 
    public:
        explicit MapVisibilityFlagDefinitions(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1484706743 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::MapVisibilityFlagDefinition>> FlagDefinitions {};
        std::shared_ptr<yordle::data::meta::MapVisibilityFlagRange> FlagRange {};
        bool x822356e3 = false;
        bool x5ffc00df = false;
    };

    class YORDLE_EXPORT MinimapBackground : public bin_class { 
    public:
        explicit MinimapBackground(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2712490432 || bin_class::is_type(type);
        }

        std::array<float, 2> mOrigin {};
        std::array<float, 2> mSize {};
        std::string mTextureName {};
    };

    class YORDLE_EXPORT MinimapBackgroundConfig : public bin_class { 
    public:
        explicit MinimapBackgroundConfig(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 718267822 || bin_class::is_type(type);
        }

        std::string mDefaultTextureName {};
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::MinimapBackground>> mCustomMinimapBackgrounds {};
    };

    class YORDLE_EXPORT MissionAsset : public bin_class { 
    public:
        explicit MissionAsset(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1923729607 || bin_class::is_type(type);
        }

        std::string mInternalName {};
        std::string mIconTexturePath {};
        bool xf82efec6 = false;
    };

    class YORDLE_EXPORT CheatPage : public bin_class { 
    public:
        explicit CheatPage(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2577175271 || bin_class::is_type(type);
        }

        std::set<uint32_t> mCheats {};
    };

    class YORDLE_EXPORT CheatSet : public bin_class { 
    public:
        explicit CheatSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1165487172 || bin_class::is_type(type);
        }

        std::string mName {};
        bool mIsPlayerFacing = false;
        std::string mGameMutator {};
        uint32_t mGameModeName = 0;
        uint32_t mAssociatedChampion = 0;
        std::set<std::shared_ptr<yordle::data::meta::CheatPage>> mCheatPages {};
        bool mUseIconsForButtons = false;
        bool mIsUIAlwaysShown = false;
    };

    class YORDLE_EXPORT CheatMenuUIData : public bin_class { 
    public:
        explicit CheatMenuUIData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 337391297 || bin_class::is_type(type);
        }

        std::string mDisplayName {};
        std::string mFloatingTextDisplayName {};
        std::string mTooltipText {};
        std::string mDynamicTooltipText {};
        std::string mHotkey {};
        std::set<std::string> mHotkeys {};
        bool mIsToggleCheat = false;
    };

    class YORDLE_EXPORT Cheat : public bin_class { 
    public:
        explicit Cheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2490030924 || bin_class::is_type(type);
        }

        std::string mName {};
        bool mIsPlayerFacing = false;
        std::shared_ptr<yordle::data::meta::CheatMenuUIData> mCheatMenuUIData {};
        float mRecastFrequency = 0.0;
    };

    class YORDLE_EXPORT ScriptCheat : public Cheat { 
    public:
        explicit ScriptCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3690099329 || Cheat::is_type(type);
        }

        uint32_t mTarget = 0;
        uint32_t mScriptCallback = 0;
    };

    class YORDLE_EXPORT AddGoldCheat : public Cheat { 
    public:
        explicit AddGoldCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3317948433 || Cheat::is_type(type);
        }

        float mGoldAmount = 0.0;
        uint32_t mTarget = 0;
    };

    class YORDLE_EXPORT MaxAllSkillsCheat : public Cheat { 
    public:
        explicit MaxAllSkillsCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3590488641 || Cheat::is_type(type);
        }

        bool mOnlyOnePointEach = false;
        uint32_t mTarget = 0;
    };

    class YORDLE_EXPORT AddExperienceCheat : public Cheat { 
    public:
        explicit AddExperienceCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 947718767 || Cheat::is_type(type);
        }

        uint32_t mTarget = 0;
        bool mGiveMaxLevel = false;
    };

    class YORDLE_EXPORT ToggleBuffCheat : public Cheat { 
    public:
        explicit ToggleBuffCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2218753755 || Cheat::is_type(type);
        }

        uint32_t mTarget = 0;
        std::string mBuffName {};
        bool UseTargetAsCaster = false;
    };

    class YORDLE_EXPORT AddHealthCheat : public Cheat { 
    public:
        explicit AddHealthCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2639255897 || Cheat::is_type(type);
        }

        uint32_t mTarget = 0;
        float mAmount = 0.0;
    };

    class YORDLE_EXPORT AddPARCheat : public Cheat { 
    public:
        explicit AddPARCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 666034550 || Cheat::is_type(type);
        }

        uint32_t mTarget = 0;
        float mAmount = 0.0;
    };

    class YORDLE_EXPORT ToggleRegenCheat : public Cheat { 
    public:
        explicit ToggleRegenCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3048271729 || Cheat::is_type(type);
        }

        uint32_t mTarget = 0;
        bool mToggleHP = false;
        bool mTogglePAR = false;
    };

    class YORDLE_EXPORT ClearTargetCooldownCheat : public Cheat { 
    public:
        explicit ClearTargetCooldownCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1355264261 || Cheat::is_type(type);
        }

        uint32_t mTarget = 0;
    };

    class YORDLE_EXPORT TimeMultiplierCheat : public Cheat { 
    public:
        explicit TimeMultiplierCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 308619146 || Cheat::is_type(type);
        }

        bool mSpeedUp = false;
        bool mSpeedDown = false;
    };

    class YORDLE_EXPORT DamageUnitCheat : public Cheat { 
    public:
        explicit DamageUnitCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3963713437 || Cheat::is_type(type);
        }

        uint32_t mTarget = 0;
        uint32_t mDamageAmount = 0;
        float mPercentageOfAttack = 0.0;
        uint32_t mDamageType = 0;
        uint32_t mHitResult = 0;
    };

    class YORDLE_EXPORT ToggleBarracksCheat : public Cheat { 
    public:
        explicit ToggleBarracksCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2011491725 || Cheat::is_type(type);
        }

        bool mKillExistingMinions = false;
        bool mKillWards = false;
    };

    class YORDLE_EXPORT ToggleTeamCheat : public Cheat { 
    public:
        explicit ToggleTeamCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2796927515 || Cheat::is_type(type);
        }

        uint32_t mTarget = 0;
    };

    class YORDLE_EXPORT SetRespawnTimerCheat : public Cheat { 
    public:
        explicit SetRespawnTimerCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1050508117 || Cheat::is_type(type);
        }

        uint32_t mTarget = 0;
        float mTimerValue = 0.0;
    };

    class YORDLE_EXPORT ToggleInvulnerableCheat : public Cheat { 
    public:
        explicit ToggleInvulnerableCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3748300377 || Cheat::is_type(type);
        }

        uint32_t mTarget = 0;
    };

    class YORDLE_EXPORT KillAllTurretsCheat : public Cheat { 
    public:
        explicit KillAllTurretsCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 691714906 || Cheat::is_type(type);
        }

    };

    class YORDLE_EXPORT ForceSpawnNeutralCampsCheat : public Cheat { 
    public:
        explicit ForceSpawnNeutralCampsCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2240430239 || Cheat::is_type(type);
        }

        bool mSpawnBaron = false;
    };

    class YORDLE_EXPORT ResetGoldCheat : public Cheat { 
    public:
        explicit ResetGoldCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3658203397 || Cheat::is_type(type);
        }

        uint32_t mTarget = 0;
    };

    class YORDLE_EXPORT TogglePlantFastRespawnCheat : public Cheat { 
    public:
        explicit TogglePlantFastRespawnCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2818226507 || Cheat::is_type(type);
        }

    };

    class YORDLE_EXPORT SwapChampionCheat : public Cheat { 
    public:
        explicit SwapChampionCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1887008704 || Cheat::is_type(type);
        }

    };

    class YORDLE_EXPORT ToggleAfkDetectionCheat : public Cheat { 
    public:
        explicit ToggleAfkDetectionCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1458280349 || Cheat::is_type(type);
        }

    };

    class YORDLE_EXPORT PerkEffectAmountPerMode : public bin_class { 
    public:
        explicit PerkEffectAmountPerMode(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2971960800 || bin_class::is_type(type);
        }

        std::map<uint32_t, float> mEffectAmountPerMode {};
    };

    class YORDLE_EXPORT PerkScriptData : public bin_class { 
    public:
        explicit PerkScriptData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2766644386 || bin_class::is_type(type);
        }

        std::map<uint32_t, float> mEffectAmount {};
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::PerkEffectAmountPerMode>> mEffectAmountGameMode {};
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::IGameCalculation>> mCalculations {};
    };

    class YORDLE_EXPORT PerkScript : public bin_class { 
    public:
        explicit PerkScript(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 501137906 || bin_class::is_type(type);
        }

        std::string mSpellScriptName {};
        std::shared_ptr<yordle::data::meta::bin_class> mSpellScript {};
        std::shared_ptr<yordle::data::meta::PerkScriptData> mSpellScriptData {};
    };

    class YORDLE_EXPORT PerkBuff : public bin_class { 
    public:
        explicit PerkBuff(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1031283364 || bin_class::is_type(type);
        }

        std::string mBuffScriptName {};
        std::shared_ptr<yordle::data::meta::bin_class> mBuffSpellObject {};
    };

    class YORDLE_EXPORT BasePerk : public bin_class { 
    public:
        explicit BasePerk(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3196794540 || bin_class::is_type(type);
        }

        uint32_t mPerkId = 0;
        std::string mPerkName {};
        std::string mDisplayNameLocalizationKey {};
        std::string mTooltipNameLocalizationKey {};
        std::string mPingTextLocalizationKey {};
        std::string mShortDescLocalizationKey {};
        std::string mLongDescLocalizationKey {};
        std::set<std::string> mEndOfGameStatDescriptions {};
        std::string mDisplayStatLocalizationKey {};
        std::string mIconTextureName {};
        bool mEnabled = false;
        bool mStackable = false;
        std::shared_ptr<yordle::data::meta::PerkScript> mScript {};
        std::set<std::shared_ptr<yordle::data::meta::PerkBuff>> mBuffs {};
        std::shared_ptr<yordle::data::meta::bin_class> mVFXResourceResolver {};
        std::set<std::string> mCharacters {};
    };

    class YORDLE_EXPORT PerkStyle : public bin_class { 
    public:
        explicit PerkStyle(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 240569694 || bin_class::is_type(type);
        }

        uint32_t mPerkStyleId = 0;
        std::string mPerkStyleName {};
        std::string mDisplayNameLocalizationKey {};
        std::string mTooltipNameLocalizationKey {};
        std::string mDefaultPageLocalizationKey {};
        std::string mPingTextLocalizationKey {};
        std::string mIconTextureName {};
        bool mEnabled = false;
        bool mIsAdvancedStyle = false;
        std::set<uint32_t> mAllowedSubStyles {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> mSubStyleBonus {};
        std::map<std::string, std::string> mLCUAssetFileMap {};
        std::shared_ptr<yordle::data::meta::bin_class> mDefaultSplash {};
        std::set<uint32_t> mDefaultPerksWhenSplashed {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> xfa4e9a2 {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> mSlots {};
        std::set<uint32_t> mSlotlinks {};
        std::shared_ptr<yordle::data::meta::PerkScript> mScript {};
        std::shared_ptr<yordle::data::meta::PerkScript> mScriptAsSubStyle {};
        std::set<std::shared_ptr<yordle::data::meta::PerkBuff>> mBuffs {};
        std::shared_ptr<yordle::data::meta::bin_class> mStyleVFXResourceResolver {};
    };

    class YORDLE_EXPORT PerkSlot : public bin_class { 
    public:
        explicit PerkSlot(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 232419497 || bin_class::is_type(type);
        }

        std::string mSlotLabelKey {};
        uint32_t mType = 0;
        std::set<uint32_t> mPerks {};
    };

    class YORDLE_EXPORT DefaultSplashedPerkStyle : public bin_class { 
    public:
        explicit DefaultSplashedPerkStyle(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2405280373 || bin_class::is_type(type);
        }

        uint32_t mStyle = 0;
        uint32_t mPerk1 = 0;
        uint32_t mPerk2 = 0;
    };

    class YORDLE_EXPORT DefaultStatModPerkSet : public bin_class { 
    public:
        explicit DefaultStatModPerkSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3234822452 || bin_class::is_type(type);
        }

        uint32_t mStyleId = 0;
        std::set<uint32_t> mPerks {};
    };

    class YORDLE_EXPORT PerkSubStyleBonus : public bin_class { 
    public:
        explicit PerkSubStyleBonus(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3127434961 || bin_class::is_type(type);
        }

        uint32_t mStyleId = 0;
        uint32_t mPerk = 0;
    };

    class YORDLE_EXPORT SummonerSpellPerkReplacement : public bin_class { 
    public:
        explicit SummonerSpellPerkReplacement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4081542451 || bin_class::is_type(type);
        }

        uint32_t mSummonerSpellRequired = 0;
        uint32_t xd48a5ef1 = 0;
    };

    class YORDLE_EXPORT SummonerSpellPerkReplacementList : public bin_class { 
    public:
        explicit SummonerSpellPerkReplacementList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3014400443 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::SummonerSpellPerkReplacement>> mReplacements {};
    };

    class YORDLE_EXPORT Perk : public BasePerk { 
    public:
        explicit Perk(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3069197533 || BasePerk::is_type(type);
        }

        bool mDefault = false;
        std::string mMajorChangePatchVersion {};
        std::shared_ptr<yordle::data::meta::SummonerSpellPerkReplacementList> mSummonerPerkReplacements {};
    };

    class YORDLE_EXPORT PerkReplacement : public bin_class { 
    public:
        explicit PerkReplacement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1517326239 || bin_class::is_type(type);
        }

        uint32_t mReplaceTarget = 0;
        uint32_t mReplaceWith = 0;
    };

    class YORDLE_EXPORT PerkReplacementList : public bin_class { 
    public:
        explicit PerkReplacementList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2307915623 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::PerkReplacement>> mReplacements {};
    };

    class YORDLE_EXPORT PerkConfig : public bin_class { 
    public:
        explicit PerkConfig(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1524731407 || bin_class::is_type(type);
        }

        uint32_t mBotOverrideSet = 0;
        std::shared_ptr<yordle::data::meta::PerkReplacementList> mPerkReplacements {};
        uint32_t x108e746d = 0;
    };

    class YORDLE_EXPORT OverridePerkSelectionSet : public bin_class { 
    public:
        explicit OverridePerkSelectionSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 890839731 || bin_class::is_type(type);
        }

        uint32_t mStyle = 0;
        uint32_t mSubStyle = 0;
        std::set<uint32_t> mPerks {};
    };

    class YORDLE_EXPORT ToonInkingFilterParams : public bin_class { 
    public:
        explicit ToonInkingFilterParams(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2533312697 || bin_class::is_type(type);
        }

        float mPixelSize = 0.0;
        float mMinVal = 0.0;
        float mMaxVal = 0.0;
        float mResultScale = 0.0;
    };

    class YORDLE_EXPORT RenderStyleData : public bin_class { 
    public:
        explicit RenderStyleData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4227680462 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ToonInkingFilterParams> mUnitFilterParamsInterior {};
        std::shared_ptr<yordle::data::meta::ToonInkingFilterParams> mUnitFilterParamsExterior {};
        bool mUnitStyleUseInking = false;
    };

    class YORDLE_EXPORT MaterialOverrideCallbackDynamicMaterial : public bin_class { 
    public:
        explicit MaterialOverrideCallbackDynamicMaterial(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1441690361 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT MouseOverEffectData : public bin_class { 
    public:
        explicit MouseOverEffectData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4069567955 || bin_class::is_type(type);
        }

        std::array<uint8_t, 4> mAllyColor {};
        std::array<uint8_t, 4> mEnemyColor {};
        std::array<uint8_t, 4> mNeutralColor {};
        std::array<uint8_t, 4> mSelfColor {};
        int32_t mMouseOverSize = 0;
        float mMouseOverColorFactor = 0.0;
        uint32_t mMouseOverBlurPassCount = 0;
        int32_t mSelectedSize = 0;
        float mSelectedColorFactor = 0.0;
        uint32_t mSelectedBlurPassCount = 0;
        int32_t mAvatarSize = 0;
        float mAvatarColorFactor = 0.0;
        std::array<uint8_t, 4> mAvatarColor {};
        uint32_t mAvatarBlurPassCount = 0;
        int32_t mKillerSize = 0;
        float mKillerColorFactor = 0.0;
        uint32_t mKillerBlurPassCount = 0;
        std::set<float> mInteractionTimes {};
        std::set<int32_t> mInteractionSizes {};
    };

    class YORDLE_EXPORT FxSequence : public bin_class { 
    public:
        explicit FxSequence(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 729255394 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::bin_class>> Actions {};
    };

    class YORDLE_EXPORT FxTableEntry : public bin_class { 
    public:
        explicit FxTableEntry(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 351234915 || bin_class::is_type(type);
        }

        std::string name {};
        uint32_t Sequence = 0;
    };

    class YORDLE_EXPORT FxTable : public bin_class { 
    public:
        explicit FxTable(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1638517141 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::FxTableEntry>> Entries {};
    };

    class YORDLE_EXPORT FxTarget : public bin_class { 
    public:
        explicit FxTarget(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 87271638 || bin_class::is_type(type);
        }

        uint32_t type = 0;
        int32_t Index = 0;
    };

    class YORDLE_EXPORT FxTiming : public bin_class { 
    public:
        explicit FxTiming(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3687298637 || bin_class::is_type(type);
        }

        uint32_t anchor = 0;
        uint32_t type = 0;
        float offset = 0.0;
    };

    class YORDLE_EXPORT FxTransform : public bin_class { 
    public:
        explicit FxTransform(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 754442341 || bin_class::is_type(type);
        }

        uint32_t type = 0;
        int32_t Index = 0;
        std::string AttachmentName {};
    };

    class YORDLE_EXPORT IFxAction : public bin_class { 
    public:
        explicit IFxAction(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3063177560 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::FxTiming> Start {};
        std::shared_ptr<yordle::data::meta::FxTiming> End {};
    };

    class YORDLE_EXPORT GameplayFeatureToggles : public bin_class { 
    public:
        explicit GameplayFeatureToggles(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3021260058 || bin_class::is_type(type);
        }

        bool NewActorStuckPathfinding = false;
        bool fowCastRayAccurate = false;
        bool disableSpellLevelMinimumProtections = false;
        bool IndividualItemVisibility = false;
        bool AFKDetection2 = false;
    };

    class YORDLE_EXPORT ScriptDataObject : public bin_class { 
    public:
        explicit ScriptDataObject(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1625294129 || bin_class::is_type(type);
        }

        std::string mName {};
        std::map<std::string, std::shared_ptr<yordle::data::meta::GameModeConstant>> mConstants {};
        uint32_t x9be36761 = 0;
    };

    class YORDLE_EXPORT ScriptDataObjectList : public bin_class { 
    public:
        explicit ScriptDataObjectList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3171701405 || bin_class::is_type(type);
        }

        std::string mName {};
        std::set<uint32_t> mScriptDataObjects {};
    };

    class YORDLE_EXPORT ICastRequirement : public bin_class { 
    public:
        explicit ICastRequirement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1550969638 || bin_class::is_type(type);
        }

        bool mInvertResult = false;
    };

    class YORDLE_EXPORT HasAllSubRequirementsCastRequirement : public ICastRequirement { 
    public:
        explicit HasAllSubRequirementsCastRequirement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4155399702 || ICastRequirement::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::ICastRequirement>> mSubRequirements {};
    };

    class YORDLE_EXPORT HasNNearbyUnitsRequirement : public ICastRequirement { 
    public:
        explicit HasNNearbyUnitsRequirement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1987560042 || ICastRequirement::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::ICastRequirement>> mUnitsRequirements {};
        uint32_t mUnitsRequired = 0;
        float mRange = 0.0;
        uint32_t mDistanceType = 0;
    };

    class YORDLE_EXPORT HasNNearbyVisibleUnitsRequirement : public ICastRequirement { 
    public:
        explicit HasNNearbyVisibleUnitsRequirement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3970312064 || ICastRequirement::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::ICastRequirement>> mUnitsRequirements {};
        uint32_t mUnitsRequired = 0;
        float mRange = 0.0;
        uint32_t mDistanceType = 0;
    };

    class YORDLE_EXPORT HasTypeAndStatusFlags : public ICastRequirement { 
    public:
        explicit HasTypeAndStatusFlags(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4095662801 || ICastRequirement::is_type(type);
        }

        uint32_t mAffectsTypeFlags = 0;
        uint32_t mAffectsStatusFlags = 0;
    };

    class YORDLE_EXPORT HasAtleastNSubRequirementsCastRequirement : public ICastRequirement { 
    public:
        explicit HasAtleastNSubRequirementsCastRequirement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 44654127 || ICastRequirement::is_type(type);
        }

        uint32_t mSuccessesRequired = 0;
        std::set<std::shared_ptr<yordle::data::meta::ICastRequirement>> mSubRequirements {};
    };

    class YORDLE_EXPORT HasUnitTagsCastRequirement : public ICastRequirement { 
    public:
        explicit HasUnitTagsCastRequirement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1461533414 || ICastRequirement::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mUnitTags {};
    };

    class YORDLE_EXPORT SameTeamCastRequirement : public ICastRequirement { 
    public:
        explicit SameTeamCastRequirement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1622554532 || ICastRequirement::is_type(type);
        }

    };

    class YORDLE_EXPORT HasBuffCastRequirement : public ICastRequirement { 
    public:
        explicit HasBuffCastRequirement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1528795992 || ICastRequirement::is_type(type);
        }

        uint32_t mBuffName = 0;
        bool mFromAnyone = false;
    };

    class YORDLE_EXPORT AboveHealthPercentCastRequirement : public ICastRequirement { 
    public:
        explicit AboveHealthPercentCastRequirement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 329280789 || ICastRequirement::is_type(type);
        }

        float mCurrentPercentHealth = 0.0;
    };

    class YORDLE_EXPORT AbovePARPercentCastRequirement : public ICastRequirement { 
    public:
        explicit AbovePARPercentCastRequirement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 795738052 || ICastRequirement::is_type(type);
        }

        uint8_t mPARType = 0;
        float mCurrentPercentPAR = 0.0;
    };

    class YORDLE_EXPORT IsSpecifiedUnitCastRequirement : public ICastRequirement { 
    public:
        explicit IsSpecifiedUnitCastRequirement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3745993663 || ICastRequirement::is_type(type);
        }

        uint32_t mUnit = 0;
    };

    class YORDLE_EXPORT x10f4d0bf : public ICastRequirement { 
    public:
        explicit x10f4d0bf(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 284479679 || ICastRequirement::is_type(type);
        }

    };

    class YORDLE_EXPORT xdc65ffe4 : public ICastRequirement { 
    public:
        explicit xdc65ffe4(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3697672164 || ICastRequirement::is_type(type);
        }

    };

    class YORDLE_EXPORT ItemSlotHasChargesCastRequirement : public ICastRequirement { 
    public:
        explicit ItemSlotHasChargesCastRequirement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3151502687 || ICastRequirement::is_type(type);
        }

    };

    class YORDLE_EXPORT x2e7c5eda : public ICastRequirement { 
    public:
        explicit x2e7c5eda(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 779902682 || ICastRequirement::is_type(type);
        }

        uint32_t level = 0;
    };

    class YORDLE_EXPORT x48284759 : public ICastRequirement { 
    public:
        explicit x48284759(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1210599257 || ICastRequirement::is_type(type);
        }

        float Distance = 0.0;
    };

    class YORDLE_EXPORT CCScoreMultipliers : public bin_class { 
    public:
        explicit CCScoreMultipliers(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2006398389 || bin_class::is_type(type);
        }

        float stun = 0.0;
        float taunt = 0.0;
        float fear = 0.0;
        float flee = 0.0;
        float suppression = 0.0;
        float knockup = 0.0;
        float knockback = 0.0;
        float polymorph = 0.0;
        float root = 0.0;
        float silence = 0.0;
        float charm = 0.0;
        float slow = 0.0;
        float attackSpeedSlow = 0.0;
        float blind = 0.0;
        float disarm = 0.0;
        float grounded = 0.0;
        float nearsight = 0.0;
        float drowsy = 0.0;
        float asleep = 0.0;
    };

    class YORDLE_EXPORT BuffData : public bin_class { 
    public:
        explicit BuffData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1177802644 || bin_class::is_type(type);
        }

        std::string mDescription {};
        std::shared_ptr<yordle::data::meta::bin_class> mTooltipData {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> mVfxSpawnConditions {};
        bool x62e282aa = false;
        bool mShowDuration = false;
        bool xd019c1 = false;
        std::set<int32_t> mFloatVarsDecimals {};
        uint8_t mBuffAttributeFlag = 0;
    };

    class YORDLE_EXPORT TeamBuffData : public bin_class { 
    public:
        explicit TeamBuffData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2090279541 || bin_class::is_type(type);
        }

        std::string mBuffName {};
        std::string mUiName {};
        bool x9a53f442 = false;
    };

    class YORDLE_EXPORT MissionBuffData : public bin_class { 
    public:
        explicit MissionBuffData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4073390176 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::TeamBuffData> dragon {};
        std::shared_ptr<yordle::data::meta::TeamBuffData> fireDrake {};
        std::shared_ptr<yordle::data::meta::TeamBuffData> airDrake {};
        std::shared_ptr<yordle::data::meta::TeamBuffData> waterDrake {};
        std::shared_ptr<yordle::data::meta::TeamBuffData> earthDrake {};
        std::shared_ptr<yordle::data::meta::TeamBuffData> elderDrake {};
        std::shared_ptr<yordle::data::meta::TeamBuffData> GameModeCustom1 {};
        std::shared_ptr<yordle::data::meta::TeamBuffData> GameModeCustom2 {};
        std::shared_ptr<yordle::data::meta::TeamBuffData> x8dea39f8 {};
        std::shared_ptr<yordle::data::meta::TeamBuffData> x94ea44fd {};
        std::shared_ptr<yordle::data::meta::TeamBuffData> x93ea436a {};
        std::shared_ptr<yordle::data::meta::TeamBuffData> x92ea41d7 {};
        std::shared_ptr<yordle::data::meta::TeamBuffData> x91ea4044 {};
        std::shared_ptr<yordle::data::meta::TeamBuffData> x88ea3219 {};
        std::shared_ptr<yordle::data::meta::TeamBuffData> x87ea3086 {};
        std::shared_ptr<yordle::data::meta::TeamBuffData> xbbbe4f6a {};
    };

    class YORDLE_EXPORT BuffStackingTemplate : public bin_class { 
    public:
        explicit BuffStackingTemplate(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 471801710 || bin_class::is_type(type);
        }

        std::string name {};
        int32_t maxStacks = 0;
        int32_t xb36eae8c = 0;
        bool StacksExclusive = false;
        uint32_t BuffAddType = 0;
    };

    class YORDLE_EXPORT BuffStackingSettings : public bin_class { 
    public:
        explicit BuffStackingSettings(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1852984937 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::BuffStackingTemplate>> templateDefinition {};
    };

    class YORDLE_EXPORT VFXSpawnConditionData : public bin_class { 
    public:
        explicit VFXSpawnConditionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3390937687 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::bin_class>> mPersistentVfxs {};
    };

    class YORDLE_EXPORT VFXDefaultSpawnConditionData : public VFXSpawnConditionData { 
    public:
        explicit VFXDefaultSpawnConditionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 922712184 || VFXSpawnConditionData::is_type(type);
        }

    };

    class YORDLE_EXPORT HasBuffData : public bin_class { 
    public:
        explicit HasBuffData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3836337806 || bin_class::is_type(type);
        }

        std::string mBuffName {};
        bool mFromAnyone = false;
        bool mFromOwner = false;
        bool mFromAttacker = false;
    };

    class YORDLE_EXPORT HasBuffComparisonData : public bin_class { 
    public:
        explicit HasBuffComparisonData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3686997399 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::HasBuffData>> mBuffs {};
        uint8_t mCompareOp = 0;
    };

    class YORDLE_EXPORT HasBuffSpawnConditionData : public VFXSpawnConditionData { 
    public:
        explicit HasBuffSpawnConditionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2412429686 || VFXSpawnConditionData::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::HasBuffComparisonData> mBuffComparisons {};
    };

    class YORDLE_EXPORT IsSkinSpawnConditionData : public VFXSpawnConditionData { 
    public:
        explicit IsSkinSpawnConditionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1323437592 || VFXSpawnConditionData::is_type(type);
        }

        uint32_t mSkinId = 0;
    };

    class YORDLE_EXPORT IsOwnerHeroConditionData : public VFXSpawnConditionData { 
    public:
        explicit IsOwnerHeroConditionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3706207649 || VFXSpawnConditionData::is_type(type);
        }

    };

    class YORDLE_EXPORT IsOwnerAliveConditionData : public VFXSpawnConditionData { 
    public:
        explicit IsOwnerAliveConditionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3575093694 || VFXSpawnConditionData::is_type(type);
        }

    };

    class YORDLE_EXPORT HasSpellRankSpawnConditionData : public VFXSpawnConditionData { 
    public:
        explicit HasSpellRankSpawnConditionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3181780357 || VFXSpawnConditionData::is_type(type);
        }

        uint32_t mSpellSlot = 0;
        int32_t mSpellLevel = 0;
    };

    class YORDLE_EXPORT VfxSpawnConditions : public bin_class { 
    public:
        explicit VfxSpawnConditions(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2833994484 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::VFXSpawnConditionData>> mConditionalVfxData {};
        std::shared_ptr<yordle::data::meta::VFXDefaultSpawnConditionData> mDefaultVfxData {};
    };

    class YORDLE_EXPORT IVFXSpawnConditions : public bin_class { 
    public:
        explicit IVFXSpawnConditions(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3813882857 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT AlwaysSpawnCondition : public IVFXSpawnConditions { 
    public:
        explicit AlwaysSpawnCondition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2968154316 || IVFXSpawnConditions::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::VFXDefaultSpawnConditionData> mDefaultVfxData {};
    };

    class YORDLE_EXPORT HasBuffNameSpawnConditions : public IVFXSpawnConditions { 
    public:
        explicit HasBuffNameSpawnConditions(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1349646866 || IVFXSpawnConditions::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::HasBuffSpawnConditionData>> mConditions {};
        std::shared_ptr<yordle::data::meta::VFXDefaultSpawnConditionData> mDefaultVfxData {};
    };

    class YORDLE_EXPORT HasSkinIDSpawnConditions : public IVFXSpawnConditions { 
    public:
        explicit HasSkinIDSpawnConditions(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3161555652 || IVFXSpawnConditions::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::IsSkinSpawnConditionData>> mConditions {};
        std::shared_ptr<yordle::data::meta::VFXDefaultSpawnConditionData> mDefaultVfxData {};
    };

    class YORDLE_EXPORT IsOwnerHeroSpawnConditions : public IVFXSpawnConditions { 
    public:
        explicit IsOwnerHeroSpawnConditions(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1556398653 || IVFXSpawnConditions::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::IsOwnerHeroConditionData>> mConditions {};
        std::shared_ptr<yordle::data::meta::VFXDefaultSpawnConditionData> mDefaultVfxData {};
    };

    class YORDLE_EXPORT IsOwnerAliveSpawnConditions : public IVFXSpawnConditions { 
    public:
        explicit IsOwnerAliveSpawnConditions(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 759657674 || IVFXSpawnConditions::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::IsOwnerAliveConditionData>> mConditions {};
        std::shared_ptr<yordle::data::meta::VFXDefaultSpawnConditionData> mDefaultVfxData {};
    };

    class YORDLE_EXPORT EffectCreationData : public bin_class { 
    public:
        explicit EffectCreationData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2338173165 || bin_class::is_type(type);
        }

        std::string mBoneName {};
        std::string mTargetBoneName {};
        std::string mEffectName {};
        uint32_t mEffectKey = 0;
        std::string xfe758550 {};
        uint32_t xa03a9542 = 0;
        bool xc42cf88d = false;
        float mPlaySpeedModifier = 0.0;
        bool xa45eda7b = false;
        uint32_t x87596a93 = 0;
        bool x62f57c79 = false;
        bool mFaceTarget = false;
        bool xfd1e1bb4 = false;
        bool x453384e6 = false;
    };

    class YORDLE_EXPORT RatioConversion : public bin_class { 
    public:
        explicit RatioConversion(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3393100796 || bin_class::is_type(type);
        }

        uint8_t mSourceStatType = 0;
        uint8_t mSourceStatOutput = 0;
        uint8_t mResultingStatType = 0;
        uint8_t mResultingStatOutput = 0;
        float x9227ce44 = 0.0;
    };

    class YORDLE_EXPORT x4379a5b2 : public bin_class { 
    public:
        explicit x4379a5b2(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1132045746 || bin_class::is_type(type);
        }

        uint8_t x5c92b7f2 = 0;
        uint8_t xaca5b9b4 = 0;
        std::set<std::shared_ptr<yordle::data::meta::IGameCalculationPart>> x583da425 {};
    };

    class YORDLE_EXPORT SpellModifier : public bin_class { 
    public:
        explicit SpellModifier(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1983940620 || bin_class::is_type(type);
        }

        uint32_t mModifierID = 0;
        uint8_t xa9cc2bf6 = 0;
        uint8_t xa47f56d7 = 0;
        uint32_t x5b1192f5 = 0;
        std::set<std::shared_ptr<yordle::data::meta::RatioConversion>> x441a3020 {};
        std::set<std::shared_ptr<yordle::data::meta::x4379a5b2>> xddbea054 {};
    };

    class YORDLE_EXPORT AbilityObject : public bin_class { 
    public:
        explicit AbilityObject(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3696800942 || bin_class::is_type(type);
        }

        uint32_t mRootSpell = 0;
        std::set<uint32_t> mChildSpells {};
        bool x86ddaddb = false;
        std::string mName {};
        uint8_t mType = 0;
    };

    class YORDLE_EXPORT SpellObject : public bin_class { 
    public:
        explicit SpellObject(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1585338886 || bin_class::is_type(type);
        }

        std::string mScriptName {};
        std::shared_ptr<yordle::data::meta::bin_class> mScript {};
        std::shared_ptr<yordle::data::meta::bin_class> mSpell {};
        std::shared_ptr<yordle::data::meta::BuffData> mBuff {};
    };

    class YORDLE_EXPORT MissileSpecification : public bin_class { 
    public:
        explicit MissileSpecification(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3221008892 || bin_class::is_type(type);
        }

        float mMissileWidth = 0.0;
        std::shared_ptr<yordle::data::meta::bin_class> movementComponent {};
        std::shared_ptr<yordle::data::meta::bin_class> visibilityComponent {};
        std::shared_ptr<yordle::data::meta::bin_class> heightSolver {};
        std::shared_ptr<yordle::data::meta::bin_class> verticalFacing {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> missileGroupSpawners {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> behaviors {};
    };

    class YORDLE_EXPORT MissileBehaviorSpec : public bin_class { 
    public:
        explicit MissileBehaviorSpec(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 369826590 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT FixedDistanceIgnoringTerrain : public MissileBehaviorSpec { 
    public:
        explicit FixedDistanceIgnoringTerrain(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3184228220 || MissileBehaviorSpec::is_type(type);
        }

        float mMaximumDistance = 0.0;
        float mMinimumGapBetweenTerrainWalls = 0.0;
        std::optional<uint32_t> mMaximumTerrainWallsToSkip {};
        std::optional<float> scanWidthOverride {};
        std::shared_ptr<yordle::data::meta::bin_class> mTargeterDefinition {};
    };

    class YORDLE_EXPORT ScaleByScaleSkinCoef : public MissileBehaviorSpec { 
    public:
        explicit ScaleByScaleSkinCoef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 384088054 || MissileBehaviorSpec::is_type(type);
        }

    };

    class YORDLE_EXPORT WidthPerSecond : public MissileBehaviorSpec { 
    public:
        explicit WidthPerSecond(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 768590138 || MissileBehaviorSpec::is_type(type);
        }

        float mWidthPerSecond = 0.0;
    };

    class YORDLE_EXPORT MissileTriggerSpec : public MissileBehaviorSpec { 
    public:
        explicit MissileTriggerSpec(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3362386950 || MissileBehaviorSpec::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::bin_class>> mActions {};
    };

    class YORDLE_EXPORT TriggerOnMovementComplete : public MissileTriggerSpec { 
    public:
        explicit TriggerOnMovementComplete(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3145117116 || MissileTriggerSpec::is_type(type);
        }

        int32_t mDelay = 0;
    };

    class YORDLE_EXPORT TriggerOnDelay : public MissileTriggerSpec { 
    public:
        explicit TriggerOnDelay(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3108709201 || MissileTriggerSpec::is_type(type);
        }

        float mDelay = 0.0;
    };

    class YORDLE_EXPORT DelayStart : public MissileBehaviorSpec { 
    public:
        explicit DelayStart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1863542244 || MissileBehaviorSpec::is_type(type);
        }

        float mDelayTime = 0.0;
    };

    class YORDLE_EXPORT x798277f : public MissileBehaviorSpec { 
    public:
        explicit x798277f(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 127412095 || MissileBehaviorSpec::is_type(type);
        }

        float x5e19cde2 = 0.0;
        uint32_t x6bfae91c = 0;
        uint32_t x754a85a6 = 0;
    };

    class YORDLE_EXPORT TriggerOnStart : public MissileTriggerSpec { 
    public:
        explicit TriggerOnStart(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1023490542 || MissileTriggerSpec::is_type(type);
        }

    };

    class YORDLE_EXPORT TriggerOnHit : public MissileTriggerSpec { 
    public:
        explicit TriggerOnHit(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 447874143 || MissileTriggerSpec::is_type(type);
        }

    };

    class YORDLE_EXPORT TriggerOnDistanceFromCaster : public MissileTriggerSpec { 
    public:
        explicit TriggerOnDistanceFromCaster(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2746720777 || MissileTriggerSpec::is_type(type);
        }

        float mDistance = 0.0;
    };

    class YORDLE_EXPORT TriggerFromScript : public MissileTriggerSpec { 
    public:
        explicit TriggerFromScript(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4280641128 || MissileTriggerSpec::is_type(type);
        }

        uint32_t mTriggerName = 0;
        float mDelay = 0.0;
    };

    class YORDLE_EXPORT MissileTriggeredActionSpec : public bin_class { 
    public:
        explicit MissileTriggeredActionSpec(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1405067729 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT Cast : public MissileTriggeredActionSpec { 
    public:
        explicit Cast(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2854572110 || MissileTriggeredActionSpec::is_type(type);
        }

    };

    class YORDLE_EXPORT Destroy : public MissileTriggeredActionSpec { 
    public:
        explicit Destroy(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3294324549 || MissileTriggeredActionSpec::is_type(type);
        }

    };

    class YORDLE_EXPORT ReturnToCaster : public MissileTriggeredActionSpec { 
    public:
        explicit ReturnToCaster(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3563037474 || MissileTriggeredActionSpec::is_type(type);
        }

        bool mPreserveSpeed = false;
        std::shared_ptr<yordle::data::meta::bin_class> mOverrideSpec {};
    };

    class YORDLE_EXPORT ClearAlreadyHitTracking : public MissileTriggeredActionSpec { 
    public:
        explicit ClearAlreadyHitTracking(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2263200418 || MissileTriggeredActionSpec::is_type(type);
        }

    };

    class YORDLE_EXPORT CallOnMissileBounce : public MissileTriggeredActionSpec { 
    public:
        explicit CallOnMissileBounce(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2611874788 || MissileTriggeredActionSpec::is_type(type);
        }

    };

    class YORDLE_EXPORT ClearTargetAndKeepMoving : public MissileTriggeredActionSpec { 
    public:
        explicit ClearTargetAndKeepMoving(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3843873303 || MissileTriggeredActionSpec::is_type(type);
        }

        std::optional<float> mOverrideHeightAugment {};
        std::optional<float> mOverrideRange {};
        std::shared_ptr<yordle::data::meta::bin_class> mOverrideMovement {};
    };

    class YORDLE_EXPORT ChangeMissileSpeed : public MissileTriggeredActionSpec { 
    public:
        explicit ChangeMissileSpeed(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3645322198 || MissileTriggeredActionSpec::is_type(type);
        }

        uint32_t mSpeedChangeType = 0;
        float mSpeedValue = 0.0;
    };

    class YORDLE_EXPORT ChangeTurnRadius : public MissileTriggeredActionSpec { 
    public:
        explicit ChangeTurnRadius(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1722047856 || MissileTriggeredActionSpec::is_type(type);
        }

        std::set<float> x84bb076a {};
    };

    class YORDLE_EXPORT ChangeHeightSolver : public MissileTriggeredActionSpec { 
    public:
        explicit ChangeHeightSolver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 934449797 || MissileTriggeredActionSpec::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mOverrideHeightSolver {};
    };

    class YORDLE_EXPORT DestroyOnHit : public MissileBehaviorSpec { 
    public:
        explicit DestroyOnHit(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 107695717 || MissileBehaviorSpec::is_type(type);
        }

    };

    class YORDLE_EXPORT DestroyOnMovementComplete : public MissileBehaviorSpec { 
    public:
        explicit DestroyOnMovementComplete(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4211998018 || MissileBehaviorSpec::is_type(type);
        }

        int32_t mDelay = 0;
    };

    class YORDLE_EXPORT xe357c116 : public MissileBehaviorSpec { 
    public:
        explicit xe357c116(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3814179094 || MissileBehaviorSpec::is_type(type);
        }

    };

    class YORDLE_EXPORT CastOnHit : public MissileBehaviorSpec { 
    public:
        explicit CastOnHit(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3656718200 || MissileBehaviorSpec::is_type(type);
        }

    };

    class YORDLE_EXPORT CastOnMovementComplete : public MissileBehaviorSpec { 
    public:
        explicit CastOnMovementComplete(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2645302597 || MissileBehaviorSpec::is_type(type);
        }

    };

    class YORDLE_EXPORT ReturnToCasterOnMovementComplete : public MissileBehaviorSpec { 
    public:
        explicit ReturnToCasterOnMovementComplete(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 545864281 || MissileBehaviorSpec::is_type(type);
        }

        bool mPreserveSpeed = false;
        std::shared_ptr<yordle::data::meta::bin_class> mOverrideSpec {};
    };

    class YORDLE_EXPORT MissileGroupSpawnerSpec : public bin_class { 
    public:
        explicit MissileGroupSpawnerSpec(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1040594301 || bin_class::is_type(type);
        }

        uint32_t mChildMissileSpell = 0;
    };

    class YORDLE_EXPORT HeightSolverType : public bin_class { 
    public:
        explicit HeightSolverType(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 974318101 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT GravityHeightSolver : public HeightSolverType { 
    public:
        explicit GravityHeightSolver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2530014013 || HeightSolverType::is_type(type);
        }

        float mGravity = 0.0;
    };

    class YORDLE_EXPORT FollowTerrainHeightSolver : public HeightSolverType { 
    public:
        explicit FollowTerrainHeightSolver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1318474241 || HeightSolverType::is_type(type);
        }

        float mHeightOffset = 0.0;
        float mMaxSlope = 0.0;
    };

    class YORDLE_EXPORT BlendedLinearHeightSolver : public HeightSolverType { 
    public:
        explicit BlendedLinearHeightSolver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 692892064 || HeightSolverType::is_type(type);
        }

    };

    class YORDLE_EXPORT SinusoidalHeightSolver : public HeightSolverType { 
    public:
        explicit SinusoidalHeightSolver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4027168330 || HeightSolverType::is_type(type);
        }

        float mVerticalOffset = 0.0;
        float mAmplitude = 0.0;
        float mNumberOfPeriods = 0.0;
    };

    class YORDLE_EXPORT CurveTheDifferenceHeightSolver : public HeightSolverType { 
    public:
        explicit CurveTheDifferenceHeightSolver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3920264276 || HeightSolverType::is_type(type);
        }

        float mInitialTargetHeightOffset = 0.0;
    };

    class YORDLE_EXPORT MissileMovementSpec : public bin_class { 
    public:
        explicit MissileMovementSpec(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1798110077 || bin_class::is_type(type);
        }

        bool mUseHeightOffsetAtEnd = false;
        bool mTracksTarget = false;
        bool xaa44f99e = false;
        float mTargetHeightAugment = 0.0;
        float mOffsetInitialTargetHeight = 0.0;
        std::string mStartBoneName {};
        std::map<uint32_t, std::string> xa6cb1fa4 {};
        std::string mTargetBoneName {};
        float mStartDelay = 0.0;
    };

    class YORDLE_EXPORT CircleMovement : public MissileMovementSpec { 
    public:
        explicit CircleMovement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 60513980 || MissileMovementSpec::is_type(type);
        }

        float mRadialVelocity = 0.0;
        float mAngularVelocity = 0.0;
        float mLinearVelocity = 0.0;
        float mLifetime = 0.0;
    };

    class YORDLE_EXPORT SyncCircleMovement : public MissileMovementSpec { 
    public:
        explicit SyncCircleMovement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 479174419 || MissileMovementSpec::is_type(type);
        }

        float mAngularVelocity = 0.0;
        float mLifetime = 0.0;
        uint8_t x2630302a = 0;
        bool x16d0a895 = false;
    };

    class YORDLE_EXPORT NullMovement : public MissileMovementSpec { 
    public:
        explicit NullMovement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2051207289 || MissileMovementSpec::is_type(type);
        }

        bool mWaitForChildren = false;
        float mDelayTime = 0.0;
    };

    class YORDLE_EXPORT AcceleratingMovement : public MissileMovementSpec { 
    public:
        explicit AcceleratingMovement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2945473954 || MissileMovementSpec::is_type(type);
        }

        bool mInferDirectionFromFacingIfNeeded = false;
        bool mProjectTargetToCastRange = false;
        bool mUseGroundHeightAtTarget = false;
        float mAcceleration = 0.0;
        float mMinSpeed = 0.0;
        float mMaxSpeed = 0.0;
        float mInitialSpeed = 0.0;
    };

    class YORDLE_EXPORT DecelToLocationMovement : public AcceleratingMovement { 
    public:
        explicit DecelToLocationMovement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2993585533 || AcceleratingMovement::is_type(type);
        }

    };

    class YORDLE_EXPORT FixedTimeMovement : public MissileMovementSpec { 
    public:
        explicit FixedTimeMovement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4147218533 || MissileMovementSpec::is_type(type);
        }

        bool mInferDirectionFromFacingIfNeeded = false;
        bool mProjectTargetToCastRange = false;
        bool mUseGroundHeightAtTarget = false;
        float mTravelTime = 0.0;
    };

    class YORDLE_EXPORT FixedSpeedMovement : public MissileMovementSpec { 
    public:
        explicit FixedSpeedMovement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 103819417 || MissileMovementSpec::is_type(type);
        }

        bool mInferDirectionFromFacingIfNeeded = false;
        bool mProjectTargetToCastRange = false;
        bool mUseGroundHeightAtTarget = false;
        float mSpeed = 0.0;
    };

    class YORDLE_EXPORT PhysicsMovement : public MissileMovementSpec { 
    public:
        explicit PhysicsMovement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 470290435 || MissileMovementSpec::is_type(type);
        }

        float mLifetime = 0.0;
        float mInitialSpeed = 0.0;
        float mDrag = 0.0;
        bool mWallSliding = false;
        float xca771747 = 0.0;
    };

    class YORDLE_EXPORT TrackMouseMovement : public MissileMovementSpec { 
    public:
        explicit TrackMouseMovement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1415088838 || MissileMovementSpec::is_type(type);
        }

        std::set<float> x84bb076a {};
        bool mInferDirectionFromFacingIfNeeded = false;
        bool mProjectTargetToCastRange = false;
        bool mUseGroundHeightAtTarget = false;
        float mAcceleration = 0.0;
        float mMinSpeed = 0.0;
        float mMaxSpeed = 0.0;
        float mInitialSpeed = 0.0;
        float x604989cf = 0.0;
    };

    class YORDLE_EXPORT GenericSplineMovementSpec : public MissileMovementSpec { 
    public:
        explicit GenericSplineMovementSpec(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1659331669 || MissileMovementSpec::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mSplineInfo {};
        bool mUseMissilePositionAsOrigin = false;
    };

    class YORDLE_EXPORT FixedTimeSplineMovement : public GenericSplineMovementSpec { 
    public:
        explicit FixedTimeSplineMovement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3401906356 || GenericSplineMovementSpec::is_type(type);
        }

        float mTravelTime = 0.0;
    };

    class YORDLE_EXPORT FixedSpeedSplineMovement : public GenericSplineMovementSpec { 
    public:
        explicit FixedSpeedSplineMovement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2002648336 || GenericSplineMovementSpec::is_type(type);
        }

        float mSpeed = 0.0;
    };

    class YORDLE_EXPORT WallFollowMovement : public MissileMovementSpec { 
    public:
        explicit WallFollowMovement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2409973973 || MissileMovementSpec::is_type(type);
        }

        bool mInferDirectionFromFacingIfNeeded = false;
        bool mProjectTargetToCastRange = false;
        bool mUseGroundHeightAtTarget = false;
        float mSpeed = 0.0;
        bool mCounterClockwise = false;
        float mWallOffset = 0.0;
        float mWallLength = 0.0;
        float mWallSearchRadius = 0.0;
        bool xbcff2ee1 = false;
        bool x38872364 = false;
    };

    class YORDLE_EXPORT VerticalFacingType : public bin_class { 
    public:
        explicit VerticalFacingType(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3891808829 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT VeritcalFacingMatchVelocity : public VerticalFacingType { 
    public:
        explicit VeritcalFacingMatchVelocity(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3974501911 || VerticalFacingType::is_type(type);
        }

    };

    class YORDLE_EXPORT VerticalFacingFaceTarget : public VerticalFacingType { 
    public:
        explicit VerticalFacingFaceTarget(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 577189237 || VerticalFacingType::is_type(type);
        }

    };

    class YORDLE_EXPORT MissileVisibilitySpec : public bin_class { 
    public:
        explicit MissileVisibilitySpec(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1749521072 || bin_class::is_type(type);
        }

        bool mTargetControlsVisibility = false;
        bool mVisibleToOwnerTeamOnly = false;
        float mPerceptionBubbleRadius = 0.0;
        float xbb639057 = 0.0;
    };

    class YORDLE_EXPORT Defaultvisibility : public MissileVisibilitySpec { 
    public:
        explicit Defaultvisibility(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3535923758 || MissileVisibilitySpec::is_type(type);
        }

    };

    class YORDLE_EXPORT EnterFOWVisibility : public MissileVisibilitySpec { 
    public:
        explicit EnterFOWVisibility(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2461751699 || MissileVisibilitySpec::is_type(type);
        }

        bool mMissileClientExitFOWPrediction = false;
        bool mMissileClientWaitForTargetUpdateBeforeMissileShow = false;
    };

    class YORDLE_EXPORT MissileAttachedTargetingDefinition : public bin_class { 
    public:
        explicit MissileAttachedTargetingDefinition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3701578183 || bin_class::is_type(type);
        }

        uint8_t mEndPositionType = 0;
        std::string mLineTextureName {};
        float mLineTextureWidth = 0.0;
        std::string mLineEndTextureName {};
        float mLineEndTextureWidth = 0.0;
        float mLineEndTextureHeight = 0.0;
    };

    class YORDLE_EXPORT AISpellData : public bin_class { 
    public:
        explicit AISpellData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4010062211 || bin_class::is_type(type);
        }

        bool mSendAIEvent = false;
        float mRadius = 0.0;
        float mLifetime = 0.0;
        float mRange = 0.0;
        float mSpeed = 0.0;
        bool mEndOnly = false;
        uint8_t mBlockLevel = 0;
    };

    class YORDLE_EXPORT SpellEffectAmount : public bin_class { 
    public:
        explicit SpellEffectAmount(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2463406204 || bin_class::is_type(type);
        }

        std::set<float> value {};
    };

    class YORDLE_EXPORT SpellDataValue : public bin_class { 
    public:
        explicit SpellDataValue(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 5245094 || bin_class::is_type(type);
        }

        std::string mName {};
        std::set<float> mValues {};
    };

    class YORDLE_EXPORT SpellDataValueVector : public bin_class { 
    public:
        explicit SpellDataValueVector(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1798273677 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::SpellDataValue>> SpellDataValues {};
    };

    class YORDLE_EXPORT PlatformSpellInfo : public bin_class { 
    public:
        explicit PlatformSpellInfo(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1523572560 || bin_class::is_type(type);
        }

        int32_t mAvatarLevelRequired = 0;
        int32_t mSpellID = 0;
        bool mPlatformEnabled = false;
        std::set<std::string> mGameModes {};
    };

    class YORDLE_EXPORT ISplineInfo : public bin_class { 
    public:
        explicit ISplineInfo(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 771419981 || bin_class::is_type(type);
        }

        std::array<float, 3> mStartPositionOffset {};
        bool mUseMissilePositionAsOrigin = false;
    };

    class YORDLE_EXPORT HermiteSplineInfo : public ISplineInfo { 
    public:
        explicit HermiteSplineInfo(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1365802124 || ISplineInfo::is_type(type);
        }

        std::array<float, 3> mControlPoint1 {};
        std::array<float, 3> mControlPoint2 {};
    };

    class YORDLE_EXPORT OverrideAttackTimeData : public bin_class { 
    public:
        explicit OverrideAttackTimeData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1471545228 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IGameCalculation> x20991541 {};
        float mCastTimePercent = 0.0;
    };

    class YORDLE_EXPORT UseAutoattackCastTimeData : public bin_class { 
    public:
        explicit UseAutoattackCastTimeData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 868276581 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IGameCalculation> mAutoattackCastTimeCalculation {};
        bool x862fbe94 = false;
    };

    class YORDLE_EXPORT SpellLockDeltaTimeData : public bin_class { 
    public:
        explicit SpellLockDeltaTimeData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3565606633 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IGameCalculation> mSpellLockDeltaTimeCalculation {};
    };

    class YORDLE_EXPORT x7a9e7d89 : public bin_class { 
    public:
        explicit x7a9e7d89(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2057207177 || bin_class::is_type(type);
        }

        float x55205acb = 0.0;
        std::set<std::shared_ptr<yordle::data::meta::ICastRequirement>> x166d5141 {};
        std::set<std::shared_ptr<yordle::data::meta::ICastRequirement>> x175e6650 {};
        bool xda83e690 = false;
        uint32_t mAffectsTypeOverride = 0;
        uint32_t mAffectsStatusOverride = 0;
    };

    class YORDLE_EXPORT AlternateSpellAssets : public bin_class { 
    public:
        explicit AlternateSpellAssets(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 609301268 || bin_class::is_type(type);
        }

        std::string mAnimationName {};
        std::string mAnimationLoopName {};
        std::string mAnimationWinddownName {};
        std::string mAnimationLeadOutName {};
        bool mUseAnimatorFramerate = false;
        uint32_t mHitEffectOrientType = 0;
        bool mHaveHitEffect = false;
        bool mHaveHitBone = false;
        std::string mHitBoneName {};
        uint32_t mHitEffectKey = 0;
        std::string mHitEffectName {};
        uint32_t mHitEffectPlayerKey = 0;
        std::string mHitEffectPlayerName {};
        uint32_t mAfterEffectKey = 0;
        std::string mAfterEffectName {};
    };

    class YORDLE_EXPORT SpellDataResource : public bin_class { 
    public:
        explicit SpellDataResource(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1127646569 || bin_class::is_type(type);
        }

        uint32_t flags = 0;
        uint32_t mAffectsTypeFlags = 0;
        uint32_t mAffectsStatusFlags = 0;
        std::shared_ptr<yordle::data::meta::bin_class> mRequiredUnitTags {};
        std::shared_ptr<yordle::data::meta::bin_class> mExcludedUnitTags {};
        std::set<std::shared_ptr<yordle::data::meta::ICastRequirement>> mCastRequirementsCaster {};
        std::set<std::shared_ptr<yordle::data::meta::ICastRequirement>> mCastRequirementsTarget {};
        std::shared_ptr<yordle::data::meta::PlatformSpellInfo> mPlatformSpellInfo {};
        std::string mAlternateName {};
        std::set<std::string> mSpellTags {};
        std::set<std::shared_ptr<yordle::data::meta::SpellEffectAmount>> mEffectAmount {};
        std::set<std::shared_ptr<yordle::data::meta::SpellDataValue>> mDataValues {};
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::SpellDataValueVector>> xfb56608c {};
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::IGameCalculation>> mSpellCalculations {};
        float mCoefficient = 0.0;
        float mCoefficient2 = 0.0;
        std::set<std::shared_ptr<yordle::data::meta::AlternateSpellAssets>> mAlternateSpellAssets {};
        std::string mAnimationName {};
        std::string mAnimationLoopName {};
        std::string mAnimationWinddownName {};
        std::string mAnimationLeadOutName {};
        std::set<std::string> mImgIconName {};
        std::string mMinimapIconName {};
        std::string mKeywordWhenAcquired {};
        float mCastTime = 0.0;
        std::set<float> mChannelDuration {};
        std::set<float> cooldownTime {};
        float delayCastOffsetPercent = 0.0;
        float delayTotalTimePercent = 0.0;
        float mPreCastLockoutDeltaTime = 0.0;
        std::shared_ptr<yordle::data::meta::SpellLockDeltaTimeData> mPreCastLockoutDeltaTimeData {};
        float mPostCastLockoutDeltaTime = 0.0;
        std::shared_ptr<yordle::data::meta::SpellLockDeltaTimeData> mPostCastLockoutDeltaTimeData {};
        bool mIsDelayedByCastLocked = false;
        float mStartCooldown = 0.0;
        std::set<float> mCastRangeGrowthMax {};
        std::set<float> mCastRangeGrowthStartTime {};
        std::set<float> mCastRangeGrowthDuration {};
        float mChargeUpdateInterval = 0.0;
        float mCancelChargeOnRecastTime = 0.0;
        uint8_t x3d746f1f = 0;
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> x1632f6fc {};
        std::set<std::shared_ptr<yordle::data::meta::CharacterPassiveData>> mCharacterPassiveBuffs {};
        std::set<int32_t> mMaxAmmo {};
        std::set<int32_t> mAmmoUsed {};
        std::set<float> mAmmoRechargeTime {};
        bool mAmmoNotAffectedByCDR = false;
        bool mCooldownNotAffectedByCDR = false;
        bool mAmmoCountHiddenInUI = false;
        bool mCostAlwaysShownInUI = false;
        bool x9fb86dc4 = false;
        bool cannotBeSuppressed = false;
        bool canCastWhileDisabled = false;
        bool mCanTriggerChargeSpellWhileDisabled = false;
        bool canCastOrQueueWhileCasting = false;
        bool canOnlyCastWhileDisabled = false;
        bool mCantCancelWhileWindingUp = false;
        bool x7e3432a0 = false;
        bool mCantCancelWhileChanneling = false;
        bool cantCastWhileRooted = false;
        bool mChannelIsInterruptedByDisables = false;
        bool mChannelIsInterruptedByAttacking = false;
        bool mApplyAttackDamage = false;
        bool mApplyAttackEffect = false;
        bool mApplyMaterialOnHitSound = false;
        bool mDoesntBreakChannels = false;
        bool mBelongsToAvatar = false;
        bool mIsDisabledWhileDead = false;
        bool canOnlyCastWhileDead = false;
        bool mCursorChangesInGrass = false;
        bool mCursorChangesInTerrain = false;
        bool mProjectTargetToCastRange = false;
        bool mSpellRevealsChampion = false;
        bool mUseMinimapTargeting = false;
        bool castRangeUseBoundingBoxes = false;
        bool mMinimapIconRotation = false;
        bool mUseChargeChanneling = false;
        bool mCanMoveWhileChanneling = false;
        bool mDisableCastBar = false;
        bool mShowChannelBar = false;
        bool alwaysSnapFacing = false;
        bool useAnimatorFramerate = false;
        bool bHaveHitEffect = false;
        bool bIsToggleSpell = false;
        bool mDoNotNeedToFaceTarget = false;
        float mTurnSpeedScalar = 0.0;
        bool mNoWinddownIfCancelled = false;
        bool mIgnoreRangeCheck = false;
        bool mOrientRadiusTextureFromPlayer = false;
        std::shared_ptr<yordle::data::meta::OverrideAttackTimeData> mOverrideAttackTime {};
        std::shared_ptr<yordle::data::meta::UseAutoattackCastTimeData> mUseAutoattackCastTimeData {};
        bool mIgnoreAnimContinueUntilCastFrame = false;
        bool mHideRangeIndicatorWhenCasting = false;
        bool mUpdateRotationWhenCasting = false;
        bool mPingableWhileDisabled = false;
        bool mConsideredAsAutoAttack = false;
        bool mDoesNotConsumeMana = false;
        bool mDoesNotConsumeCooldown = false;
        bool mLockedSpellOriginationCastID = false;
        bool x898fbad4 = false;
        uint16_t mMinimapIconDisplayFlag = 0;
        std::set<float> castRange {};
        std::set<float> castRangeDisplayOverride {};
        std::set<float> castRadius {};
        std::set<float> castRadiusSecondary {};
        float castConeAngle = 0.0;
        float castConeDistance = 0.0;
        float castTargetAdditionalUnitsRadius = 0.0;
        float luaOnMissileUpdateDistanceInterval = 0.0;
        std::shared_ptr<yordle::data::meta::MissileSpecification> mMissileSpec {};
        uint32_t mCastType = 0;
        float castFrame = 0.0;
        float missileSpeed = 0.0;
        uint32_t mMissileEffectKey = 0;
        std::string mMissileEffectName {};
        uint32_t mMissileEffectPlayerKey = 0;
        std::string mMissileEffectPlayerName {};
        uint32_t mMissileEffectEnemyKey = 0;
        std::string mMissileEffectEnemyName {};
        float mLineWidth = 0.0;
        float mLineDragLength = 0.0;
        uint32_t mLookAtPolicy = 0;
        uint32_t mHitEffectOrientType = 0;
        std::set<uint32_t> mResourceResolvers {};
        uint32_t mHitEffectKey = 0;
        std::string mHitEffectName {};
        uint32_t mHitEffectPlayerKey = 0;
        std::string mHitEffectPlayerName {};
        uint32_t mAfterEffectKey = 0;
        std::string mAfterEffectName {};
        bool bHaveHitBone = false;
        std::string mHitBoneName {};
        std::array<float, 3> mParticleStartOffset {};
        std::set<int32_t> mFloatVarsDecimals {};
        std::set<float> mana {};
        std::set<float> manaUiOverride {};
        uint32_t selectionPriority = 0;
        std::shared_ptr<yordle::data::meta::bin_class> mTargetingTypeData {};
        std::set<std::shared_ptr<yordle::data::meta::x7a9e7d89>> x7a9e7d89 {};
        std::string mVOEventCategory {};
        std::shared_ptr<yordle::data::meta::AISpellData> mAIData {};
        std::optional<float> mSpellCooldownOrSealedQueueThreshold {};
        uint8_t x3f432a6 = 0;
        bool xf7e5bc = false;
        bool x39381720 = false;
        bool xa8eb09d1 = false;
        bool x24b763c2 = false;
        std::shared_ptr<yordle::data::meta::bin_class> mClientData {};
    };

    class YORDLE_EXPORT SpellPassiveData : public bin_class { 
    public:
        explicit SpellPassiveData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3562978890 || bin_class::is_type(type);
        }

        uint32_t mBuff = 0;
        uint32_t x8692e24a = 0;
        bool x76b67bcc = false;
        bool xcbdf3af2 = false;
        bool xf862632b = false;
        bool x7aa0fed6 = false;
        uint8_t mDisplayFlags = 0;
    };

    class YORDLE_EXPORT CustomTargeterDefinitions : public bin_class { 
    public:
        explicit CustomTargeterDefinitions(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3174223914 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::bin_class>> mTargeterDefinitions {};
    };

    class YORDLE_EXPORT SpellDataResourceClient : public bin_class { 
    public:
        explicit SpellDataResourceClient(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2110892290 || bin_class::is_type(type);
        }

        uint32_t x375656dd = 0;
        uint32_t x7d4a0e6e = 0;
        std::shared_ptr<yordle::data::meta::bin_class> mTooltipData {};
        std::shared_ptr<yordle::data::meta::bin_class> mSpawningUIDefinition {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> mTargeterDefinitions {};
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::CustomTargeterDefinitions>> mCustomTargeterDefinitions {};
        std::set<std::shared_ptr<yordle::data::meta::MissileAttachedTargetingDefinition>> mMissileTargeterDefinitions {};
        uint32_t mLeftClickSpellAction = 0;
        uint32_t mRightClickSpellAction = 0;
    };

    class YORDLE_EXPORT SpawningUIDefinition : public bin_class { 
    public:
        explicit SpawningUIDefinition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1607774867 || bin_class::is_type(type);
        }

        std::string buffNameFilter {};
        int32_t maxNumberOfUnits = 0;
    };

    class YORDLE_EXPORT IScriptPreload : public bin_class { 
    public:
        explicit IScriptPreload(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3560905284 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT ScriptPreloadCharacter : public bin_class { 
    public:
        explicit ScriptPreloadCharacter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 796426082 || bin_class::is_type(type);
        }

        std::string PreloadResourceName {};
    };

    class YORDLE_EXPORT ScriptPreloadSpell : public bin_class { 
    public:
        explicit ScriptPreloadSpell(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2709224959 || bin_class::is_type(type);
        }

        std::string PreloadResourceName {};
    };

    class YORDLE_EXPORT ScriptPreloadModule : public bin_class { 
    public:
        explicit ScriptPreloadModule(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1322354127 || bin_class::is_type(type);
        }

        std::string PreloadResourceName {};
    };

    class YORDLE_EXPORT ScriptPreloadParticle : public bin_class { 
    public:
        explicit ScriptPreloadParticle(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3450289597 || bin_class::is_type(type);
        }

        std::string PreloadResourceName {};
    };

    class YORDLE_EXPORT LoLSpellPreloadData : public bin_class { 
    public:
        explicit LoLSpellPreloadData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3712288203 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::ScriptPreloadCharacter>> CharacterPreloads {};
        std::set<std::shared_ptr<yordle::data::meta::ScriptPreloadSpell>> SpellPreloads {};
        std::set<std::shared_ptr<yordle::data::meta::ScriptPreloadModule>> ModulePreloads {};
        std::set<std::shared_ptr<yordle::data::meta::ScriptPreloadParticle>> ParticlePreloads {};
    };

    class YORDLE_EXPORT ScriptGlobalProperties : public bin_class { 
    public:
        explicit ScriptGlobalProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3193997900 || bin_class::is_type(type);
        }

        bool PersistsThroughDeath = false;
        bool NonDispellable = false;
        int32_t OnPreDamagePriority = 0;
        uint32_t DeathEventType = 0;
        float CastTime = 0.0;
        float ChannelDuration = 0.0;
        std::string buffName {};
        std::string buffTextureName {};
        std::string displayName {};
        std::set<std::string> AutoBuffActivateEffects {};
        std::set<std::string> AutoBuffActivateAttachBoneNames {};
        bool IsDeathRecapSource = false;
        uint32_t SpellToggleSlot = 0;
        bool IsItemToggled = false;
        std::set<std::string> SpellFXOverrideSkins {};
        std::set<std::string> SpellVOOverrideSkins {};
        std::set<std::string> PopupMessages {};
    };

    class YORDLE_EXPORT ILineIndicatorType : public bin_class { 
    public:
        explicit ILineIndicatorType(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4153143643 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT IndicatorTypeLocal : public ILineIndicatorType { 
    public:
        explicit IndicatorTypeLocal(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1062280453 || ILineIndicatorType::is_type(type);
        }

    };

    class YORDLE_EXPORT IndicatorTypeGlobal : public ILineIndicatorType { 
    public:
        explicit IndicatorTypeGlobal(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2357149705 || ILineIndicatorType::is_type(type);
        }

        bool mIsFloating = false;
    };

    class YORDLE_EXPORT ITargeterFadeBehavior : public bin_class { 
    public:
        explicit ITargeterFadeBehavior(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1348413282 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT FadeOverTimeBehavior : public ITargeterFadeBehavior { 
    public:
        explicit FadeOverTimeBehavior(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2433758018 || ITargeterFadeBehavior::is_type(type);
        }

        float mTimeStart = 0.0;
        float mTimeEnd = 0.0;
        float mStartAlpha = 0.0;
        float mEndAlpha = 0.0;
    };

    class YORDLE_EXPORT FadeByMouseRangeBehavior : public ITargeterFadeBehavior { 
    public:
        explicit FadeByMouseRangeBehavior(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3193505140 || ITargeterFadeBehavior::is_type(type);
        }

        float x76a72ad1 = 0.0;
        float x65183440 = 0.0;
        float mStartAlpha = 0.0;
        float mEndAlpha = 0.0;
    };

    class YORDLE_EXPORT FadeToExplicitValueBehavior : public ITargeterFadeBehavior { 
    public:
        explicit FadeToExplicitValueBehavior(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2832031521 || ITargeterFadeBehavior::is_type(type);
        }

        float mAlpha = 0.0;
    };

    class YORDLE_EXPORT x29dfd7ad : public bin_class { 
    public:
        explicit x29dfd7ad(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 702535597 || bin_class::is_type(type);
        }

        float xaeebcbdd = 0.0;
        float xa8a2f6c7 = 0.0;
        float x64e4f9f9 = 0.0;
    };

    class YORDLE_EXPORT FloatPerSpellLevel : public bin_class { 
    public:
        explicit FloatPerSpellLevel(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 508250748 || bin_class::is_type(type);
        }

        std::set<float> mPerLevelValues {};
        uint32_t mValueType = 0;
    };

    class YORDLE_EXPORT DrawablePositionLocator : public bin_class { 
    public:
        explicit DrawablePositionLocator(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3451066870 || bin_class::is_type(type);
        }

        uint32_t basePosition = 0;
        float distanceOffset = 0.0;
        float angleOffsetRadian = 0.0;
        uint32_t orientationType = 0;
    };

    class YORDLE_EXPORT TargeterDefinition : public bin_class { 
    public:
        explicit TargeterDefinition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1278600786 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ITargeterFadeBehavior> mFadeBehavior {};
    };

    class YORDLE_EXPORT TargeterDefinitionAoe : public TargeterDefinition { 
    public:
        explicit TargeterDefinitionAoe(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3795530517 || TargeterDefinition::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::DrawablePositionLocator> centerLocator {};
        uint32_t textureOrientation = 0;
        bool isConstrainedToRange = false;
        std::shared_ptr<yordle::data::meta::DrawablePositionLocator> constraintPosLocator {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> constraintRange {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> overrideRadius {};
        std::shared_ptr<yordle::data::meta::x29dfd7ad> x2acbb00b {};
        std::string textureRadiusOverrideName {};
    };

    class YORDLE_EXPORT TargeterDefinitionArc : public TargeterDefinition { 
    public:
        explicit TargeterDefinitionArc(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3161379494 || TargeterDefinition::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::DrawablePositionLocator> startLocator {};
        std::shared_ptr<yordle::data::meta::DrawablePositionLocator> endLocator {};
        bool isClockwiseArc = false;
        bool isConstrainedToRange = false;
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> constraintRange {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> overrideRadius {};
        std::string textureArcOverrideName {};
        float thicknessOffset = 0.0;
    };

    class YORDLE_EXPORT TargeterDefinitionCone : public TargeterDefinition { 
    public:
        explicit TargeterDefinitionCone(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2281086721 || TargeterDefinition::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::DrawablePositionLocator> startLocator {};
        std::shared_ptr<yordle::data::meta::DrawablePositionLocator> endLocator {};
        uint32_t fallbackDirection = 0;
        bool hasMaxGrowRange = false;
        bool coneFollowsEnd = false;
        std::optional<float> coneAngleDegrees {};
        std::optional<float> coneRange {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> rangeGrowthStartTime {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> rangeGrowthDuration {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> rangeGrowthMax {};
        std::string textureConeOverrideName {};
        std::string textureConeMaxGrowName {};
    };

    class YORDLE_EXPORT TargeterDefinitionLine : public TargeterDefinition { 
    public:
        explicit TargeterDefinitionLine(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 872611392 || TargeterDefinition::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ILineIndicatorType> indicatorType {};
        std::shared_ptr<yordle::data::meta::DrawablePositionLocator> startLocator {};
        std::shared_ptr<yordle::data::meta::DrawablePositionLocator> endLocator {};
        uint32_t fallbackDirection = 0;
        bool alwaysDraw = false;
        bool hasMaxGrowRange = false;
        bool useGlobalLineIndicator = false;
        std::optional<bool> lineStopsAtEndPosition {};
        float minimumDisplayedRange = 0.0;
        float arrowSize = 0.0;
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> lineWidth {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> overrideBaseRange {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> rangeGrowthStartTime {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> rangeGrowthDuration {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> rangeGrowthMax {};
        std::string textureBaseOverrideName {};
        std::string textureTargetOverrideName {};
        std::string textureBaseMaxGrowName {};
        std::string textureTargetMaxGrowName {};
        bool mAngleLineToEndpointHeight = false;
        bool mCenterArrowToEndPoint = false;
        bool facingLine = false;
        float minAngle = 0.0;
        float maxAngle = 0.0;
        float minAngleRangeFactor = 0.0;
        float maxAngleRangeFactor = 0.0;
        bool fade = false;
        float fadeAngle = 0.0;
    };

    class YORDLE_EXPORT TargeterDefinitionMinimap : public TargeterDefinition { 
    public:
        explicit TargeterDefinitionMinimap(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 411843849 || TargeterDefinition::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::DrawablePositionLocator> centerLocator {};
        std::optional<bool> useCasterBoundingBox {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> overrideBaseRange {};
    };

    class YORDLE_EXPORT TargeterDefinitionRange : public TargeterDefinition { 
    public:
        explicit TargeterDefinitionRange(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 75156191 || TargeterDefinition::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::DrawablePositionLocator> centerLocator {};
        uint32_t textureOrientation = 0;
        bool hideWithLineIndicator = false;
        bool hasMaxGrowRange = false;
        std::optional<bool> useCasterBoundingBox {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> overrideBaseRange {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> rangeGrowthStartTime {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> rangeGrowthDuration {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> rangeGrowthMax {};
        std::string textureOverrideName {};
        std::string textureMaxGrowName {};
    };

    class YORDLE_EXPORT TargeterDefinitionWall : public TargeterDefinition { 
    public:
        explicit TargeterDefinitionWall(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1653312970 || TargeterDefinition::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::DrawablePositionLocator> centerLocator {};
        uint32_t wallOrientation = 0;
        float wallRotation = 0.0;
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> thickness {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> length {};
        std::string textureWallOverrideName {};
    };

    class YORDLE_EXPORT TargeterDefinitionMultiAOE : public TargeterDefinition { 
    public:
        explicit TargeterDefinitionMultiAOE(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 120327418 || TargeterDefinition::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::DrawablePositionLocator> centerLocator {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> overrideAOERadius {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> overrideMinCastRange {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> overrideMaxCastRange {};
        float angelOffsetRadian = 0.0;
        uint32_t numOfInnerAOE = 0;
        std::string leftTextureName {};
        std::string rightTextureName {};
        std::string innerTextureName {};
    };

    class YORDLE_EXPORT TargeterDefinitionSpline : public TargeterDefinition { 
    public:
        explicit TargeterDefinitionSpline(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 669603267 || TargeterDefinition::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::DrawablePositionLocator> startLocator {};
        std::shared_ptr<yordle::data::meta::DrawablePositionLocator> endLocator {};
        std::string baseTextureName {};
        std::string frontTextureName {};
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> splineWidth {};
        std::shared_ptr<yordle::data::meta::ISplineInfo> overrideSpline {};
        uint32_t minSegmentCount = 0;
        float maxSegmentLength = 0.0;
        bool isConstrainedToRange = false;
        std::shared_ptr<yordle::data::meta::FloatPerSpellLevel> constraintRange {};
    };

    class YORDLE_EXPORT TargeterDefinitionSkipTerrain : public TargeterDefinition { 
    public:
        explicit TargeterDefinitionSkipTerrain(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3994921506 || TargeterDefinition::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::DrawablePositionLocator> mStartLocator {};
        std::shared_ptr<yordle::data::meta::DrawablePositionLocator> mEndLocator {};
        std::string mBaseTextureName {};
        std::string mTerrainTextureName {};
        std::string mTargetTextureName {};
        float mTargetTextureRadius = 0.0;
        uint32_t mFallbackDirection = 0;
    };

    class YORDLE_EXPORT TargetingTypeData : public bin_class { 
    public:
        explicit TargetingTypeData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2144288560 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT Self : public TargetingTypeData { 
    public:
        explicit Self(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1683726967 || TargetingTypeData::is_type(type);
        }

    };

    class YORDLE_EXPORT Target : public TargetingTypeData { 
    public:
        explicit Target(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 845187144 || TargetingTypeData::is_type(type);
        }

        bool x6f92d6b3 = false;
    };

    class YORDLE_EXPORT Area : public TargetingTypeData { 
    public:
        explicit Area(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2601460036 || TargetingTypeData::is_type(type);
        }

    };

    class YORDLE_EXPORT Cone : public TargetingTypeData { 
    public:
        explicit Cone(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3711978346 || TargetingTypeData::is_type(type);
        }

    };

    class YORDLE_EXPORT SelfAoe : public TargetingTypeData { 
    public:
        explicit SelfAoe(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3931936918 || TargetingTypeData::is_type(type);
        }

    };

    class YORDLE_EXPORT TargetOrLocation : public TargetingTypeData { 
    public:
        explicit TargetOrLocation(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 530745462 || TargetingTypeData::is_type(type);
        }

    };

    class YORDLE_EXPORT Location : public TargetingTypeData { 
    public:
        explicit Location(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 200649126 || TargetingTypeData::is_type(type);
        }

    };

    class YORDLE_EXPORT Direction : public TargetingTypeData { 
    public:
        explicit Direction(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3748513642 || TargetingTypeData::is_type(type);
        }

    };

    class YORDLE_EXPORT DragDirection : public TargetingTypeData { 
    public:
        explicit DragDirection(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 183658092 || TargetingTypeData::is_type(type);
        }

    };

    class YORDLE_EXPORT LineTargetToCaster : public TargetingTypeData { 
    public:
        explicit LineTargetToCaster(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 752642599 || TargetingTypeData::is_type(type);
        }

    };

    class YORDLE_EXPORT AreaClamped : public TargetingTypeData { 
    public:
        explicit AreaClamped(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 808547418 || TargetingTypeData::is_type(type);
        }

    };

    class YORDLE_EXPORT LocationClamped : public TargetingTypeData { 
    public:
        explicit LocationClamped(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1986849908 || TargetingTypeData::is_type(type);
        }

    };

    class YORDLE_EXPORT TerrainLocation : public TargetingTypeData { 
    public:
        explicit TerrainLocation(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2104163269 || TargetingTypeData::is_type(type);
        }

    };

    class YORDLE_EXPORT TerrainType : public TargetingTypeData { 
    public:
        explicit TerrainType(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 890181294 || TargetingTypeData::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mBrushCursor {};
        std::shared_ptr<yordle::data::meta::bin_class> mRiverCursor {};
        std::shared_ptr<yordle::data::meta::bin_class> mWallCursor {};
    };

    class YORDLE_EXPORT StatFormulaData : public bin_class { 
    public:
        explicit StatFormulaData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3086678927 || bin_class::is_type(type);
        }

        std::map<uint8_t, float> StatComponents {};
    };

    class YORDLE_EXPORT StatFormulaDataList : public bin_class { 
    public:
        explicit StatFormulaDataList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1250314967 || bin_class::is_type(type);
        }

        std::map<uint32_t, std::shared_ptr<yordle::data::meta::StatFormulaData>> StatFormulas {};
    };

    class YORDLE_EXPORT GameModeDefaultStats : public bin_class { 
    public:
        explicit GameModeDefaultStats(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2299573588 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::StatFormulaDataList> DefaultCharacterStats {};
    };

    class YORDLE_EXPORT TftSurrenderCheat : public Cheat { 
    public:
        explicit TftSurrenderCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1005214616 || Cheat::is_type(type);
        }

    };

    class YORDLE_EXPORT TftChangeDamageSkinCheat : public Cheat { 
    public:
        explicit TftChangeDamageSkinCheat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3415378836 || Cheat::is_type(type);
        }

    };

    class YORDLE_EXPORT TftMapCharacterRecordData : public bin_class { 
    public:
        explicit TftMapCharacterRecordData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 229654189 || bin_class::is_type(type);
        }

        uint8_t tier = 0;
    };

    class YORDLE_EXPORT TftMapCharacterSkinData : public bin_class { 
    public:
        explicit TftMapCharacterSkinData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2653184481 || bin_class::is_type(type);
        }

        std::string SquareIconTexturePath {};
    };

    class YORDLE_EXPORT TftMapCharacterData : public bin_class { 
    public:
        explicit TftMapCharacterData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2155905376 || bin_class::is_type(type);
        }

        std::string name {};
        std::set<std::shared_ptr<yordle::data::meta::TftMapCharacterSkinData>> SkinData {};
        std::set<std::shared_ptr<yordle::data::meta::TftMapCharacterRecordData>> charData {};
    };

    class YORDLE_EXPORT TftMapCharacterList : public bin_class { 
    public:
        explicit TftMapCharacterList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2927874496 || bin_class::is_type(type);
        }

        std::string ListName {};
        std::set<std::shared_ptr<yordle::data::meta::TftMapCharacterData>> characters {};
    };

    class YORDLE_EXPORT TFTMapCharacterLists : public bin_class { 
    public:
        explicit TFTMapCharacterLists(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1820531913 || bin_class::is_type(type);
        }

        std::string MapName {};
        std::set<std::shared_ptr<yordle::data::meta::TftMapCharacterList>> characterLists {};
    };

    class YORDLE_EXPORT TFTAnnouncementData : public bin_class { 
    public:
        explicit TFTAnnouncementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3519409590 || bin_class::is_type(type);
        }

        std::string mIconPath {};
        std::string mTitleTra {};
        float mDuration = 0.0;
        float mDelay = 0.0;
    };

    class YORDLE_EXPORT TFTAttachmentSlotStyleData : public bin_class { 
    public:
        explicit TFTAttachmentSlotStyleData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3726789741 || bin_class::is_type(type);
        }

        std::string mName {};
        std::string mOverlayIconPath {};
        std::string mSubtextTra {};
    };

    class YORDLE_EXPORT TFTCharacterRecord : public CharacterRecord { 
    public:
        explicit TFTCharacterRecord(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 809801457 || CharacterRecord::is_type(type);
        }

        std::string PortraitIcon {};
        uint8_t tier = 0;
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> mLinkedTraits {};
        float mMoveInterval = 0.0;
        float mMoveProximity = 0.0;
        float mMoveRange = 0.0;
        float mMoveHeight = 0.0;
        float mInitialMana = 0.0;
        uint32_t mShopData = 0;
        std::string x4e28a666 {};
        std::array<float, 3> xd9439003 {};
        bool x4a52410b = false;
        bool xef57098f = false;
        bool xbb71cb89 = false;
        float x7cbc4762 = 0.0;
    };

    class YORDLE_EXPORT TFTDragData : public bin_class { 
    public:
        explicit TFTDragData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1414729207 || bin_class::is_type(type);
        }

        bool mHoldToHover = false;
        bool mHoldToDrag = false;
        bool x44ab329e = false;
        float xd1296e95 = 0.0;
        float x6d90172b = 0.0;
        float x59129cbe = 0.0;
        float xe2567252 = 0.0;
        float mDragBlendTime = 0.0;
        float mDragPickupHeight = 0.0;
        float mDragPickupDuration = 0.0;
        float mDragReleaseDuration = 0.0;
        float mDragOvershootDuration = 0.0;
        float mDragOvershootHeight = 0.0;
        std::string mDragSoundEvent {};
        std::string mDropSoundEvent {};
    };

    class YORDLE_EXPORT TftDropRates : public bin_class { 
    public:
        explicit TftDropRates(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4070851979 || bin_class::is_type(type);
        }

        std::set<float> mDropRatesByTier {};
    };

    class YORDLE_EXPORT xf260c3ae : public bin_class { 
    public:
        explicit xf260c3ae(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4066427822 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::TftDropRates>> mDropRatesByLevel {};
    };

    class YORDLE_EXPORT TftEffectAmount : public bin_class { 
    public:
        explicit TftEffectAmount(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1660895988 || bin_class::is_type(type);
        }

        uint32_t name = 0;
        float value = 0.0;
        std::string formatString {};
    };

    class YORDLE_EXPORT TftItemComposition : public bin_class { 
    public:
        explicit TftItemComposition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1707263328 || bin_class::is_type(type);
        }

        std::set<uint32_t> mComponents {};
    };

    class YORDLE_EXPORT TftItemData : public bin_class { 
    public:
        explicit TftItemData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3515269914 || bin_class::is_type(type);
        }

        int32_t mId = 0;
        std::string mName {};
        std::string mBuffName {};
        bool mIsUnique = false;
        std::set<uint32_t> mComposition {};
        std::set<std::shared_ptr<yordle::data::meta::TftItemComposition>> xa3ac84d8 {};
        std::set<uint32_t> x6752c795 {};
        std::set<std::shared_ptr<yordle::data::meta::TftEffectAmount>> effectAmounts {};
        std::set<uint32_t> ItemTags {};
        std::string mDisplayNameTra {};
        std::string mDescriptionNameTra {};
        std::string mIconPath {};
        std::optional<std::array<uint8_t, 4>> mColor {};
        std::array<float, 2> x91d75dff {};
        uint32_t mVfxSystem = 0;
        int32_t x6d8fceed = 0;
    };

    class YORDLE_EXPORT TFTItemList : public bin_class { 
    public:
        explicit TFTItemList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2541164198 || bin_class::is_type(type);
        }

        std::set<uint32_t> mItems {};
        uint32_t VfxResourceResolver = 0;
    };

    class YORDLE_EXPORT x3604b3e3 : public bin_class { 
    public:
        explicit x3604b3e3(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 906277859 || bin_class::is_type(type);
        }

        uint32_t x79dafa57 = 0;
        float xae9687e = 0.0;
    };

    class YORDLE_EXPORT TFTModeData : public bin_class { 
    public:
        explicit TFTModeData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 30889102 || bin_class::is_type(type);
        }

        uint32_t mDefaultSetData = 0;
        std::shared_ptr<yordle::data::meta::TFTDragData> mDragData {};
        std::shared_ptr<yordle::data::meta::TFTDragData> mMobileDragData {};
        float x3caeb7b4 = 0.0;
        uint32_t x4a191241 = 0;
        uint32_t mTftMapSkinDefault = 0;
        uint32_t mTftDamageSkinDefault = 0;
        uint32_t mDefaultTftCompanion = 0;
        uint32_t mTutorialTftCompanion = 0;
        float xb75a7951 = 0.0;
        std::set<std::shared_ptr<yordle::data::meta::x3604b3e3>> xe13c7aa {};
        std::set<uint32_t> x12aaf1d8 {};
    };

    class YORDLE_EXPORT TFTGameVariationData : public bin_class { 
    public:
        explicit TFTGameVariationData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 53563192 || bin_class::is_type(type);
        }

        std::string mName {};
        std::string mStageIconPath {};
        std::string mTooltipIconPath {};
        std::string mTooltipDescriptionTra {};
        std::string mTooltipTitleTra {};
        uint32_t mAnnouncementData = 0;
    };

    class YORDLE_EXPORT TFTNotificationData : public bin_class { 
    public:
        explicit TFTNotificationData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2099815050 || bin_class::is_type(type);
        }

        std::string mName {};
        float mDurationSeconds = 0.0;
        std::string mToplineTra {};
        std::string mBottomlineTra {};
        std::string mIconPath {};
        std::string x1e7fffb0 {};
        std::string xde5be189 {};
        std::string xa6874a6e {};
    };

    class YORDLE_EXPORT TFTPhaseData : public bin_class { 
    public:
        explicit TFTPhaseData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 634061068 || bin_class::is_type(type);
        }

        bool mEnabled = false;
        float mDuration = 0.0;
        uint32_t mDisplay = 0;
        std::string mLabel {};
        uint32_t mAnnouncementData = 0;
    };

    class YORDLE_EXPORT TFTRoundData : public bin_class { 
    public:
        explicit TFTRoundData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4104567591 || bin_class::is_type(type);
        }

        std::string mName {};
        std::string mIconPath {};
        std::string mDisplayNameTra {};
        std::string mDescriptionTra {};
        std::string mDefaultTooltipTra {};
        std::map<uint32_t, std::string> mStateTooltipsTra {};
        std::string xd20054c0 {};
        std::string x304b0330 {};
        std::string xf862cc05 {};
        std::string xcb830e67 {};
        std::string mTftDamageSidewall {};
        std::string x4cb318cd {};
        std::shared_ptr<yordle::data::meta::TFTPhaseData> mDraftArrival {};
        std::shared_ptr<yordle::data::meta::TFTPhaseData> mDraft {};
        std::shared_ptr<yordle::data::meta::TFTPhaseData> mDraftDeparture {};
        std::shared_ptr<yordle::data::meta::TFTPhaseData> mPlanningArrival {};
        std::shared_ptr<yordle::data::meta::TFTPhaseData> mPlanning {};
        std::shared_ptr<yordle::data::meta::TFTPhaseData> mPlanningDeparture {};
        std::shared_ptr<yordle::data::meta::TFTPhaseData> mCombatArrival {};
        std::shared_ptr<yordle::data::meta::TFTPhaseData> mCombat {};
        std::shared_ptr<yordle::data::meta::TFTPhaseData> mCombatDeparture {};
        std::map<std::string, std::shared_ptr<yordle::data::meta::GameModeConstant>> mScriptData {};
    };

    class YORDLE_EXPORT TFTStageData : public bin_class { 
    public:
        explicit TFTStageData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4147633913 || bin_class::is_type(type);
        }

        std::set<uint32_t> mRounds {};
    };

    class YORDLE_EXPORT TFTSetData : public bin_class { 
    public:
        explicit TFTSetData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1133007103 || bin_class::is_type(type);
        }

        uint32_t TftGameType = 0;
        uint32_t number = 0;
        std::string Mutator {};
        std::set<uint32_t> DebugCharacterLists {};
        std::set<uint32_t> characterLists {};
        std::set<uint32_t> itemLists {};
        uint32_t traitList = 0;
        std::set<uint32_t> traits {};
        std::map<std::string, uint32_t> DropRateTables {};
        std::map<std::string, std::shared_ptr<yordle::data::meta::GameModeConstant>> ScriptData {};
        std::set<std::shared_ptr<yordle::data::meta::TFTStageData>> stages {};
        std::set<uint32_t> UnitUpgrades {};
        std::set<uint32_t> ScriptDataObjectLists {};
        uint32_t VfxResourceResolver = 0;
    };

    class YORDLE_EXPORT TftShopData : public bin_class { 
    public:
        explicit TftShopData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3844837213 || bin_class::is_type(type);
        }

        std::string mName {};
        uint8_t mRarity = 0;
        std::string mPortraitIconPath {};
        std::string mIconPath {};
        std::string mMobileIconPath {};
        std::string mMobileSmallIconPath {};
        std::string mDisplayNameTra {};
        std::string mAbilityNameTra {};
        std::string mDescriptionTra {};
    };

    class YORDLE_EXPORT TFTStatData : public bin_class { 
    public:
        explicit TFTStatData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2098479675 || bin_class::is_type(type);
        }

        std::string mName {};
        uint32_t mType = 0;
        uint32_t mContext = 0;
        uint32_t mLifetime = 0;
        int32_t xf3a339c = 0;
    };

    class YORDLE_EXPORT TFTStreak : public bin_class { 
    public:
        explicit TFTStreak(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 646351631 || bin_class::is_type(type);
        }

        std::optional<uint32_t> mMinimumStreakLength {};
        std::optional<uint32_t> mMaximumStreakLength {};
        uint32_t mGoldRewardAmount = 0;
        std::string mStreakFormat {};
    };

    class YORDLE_EXPORT TFTStreakData : public bin_class { 
    public:
        explicit TFTStreakData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2506805399 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::TFTStreak>> xc3f540ed {};
        std::set<std::shared_ptr<yordle::data::meta::TFTStreak>> mLossStreaks {};
    };

    class YORDLE_EXPORT TFTTraitContributionData : public bin_class { 
    public:
        explicit TFTTraitContributionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3758614261 || bin_class::is_type(type);
        }

        uint32_t TraitData = 0;
        int32_t Amount = 0;
        bool xa91037f5 = false;
    };

    class YORDLE_EXPORT TFTTraitSetData : public bin_class { 
    public:
        explicit TFTTraitSetData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3241198053 || bin_class::is_type(type);
        }

        uint32_t mMinUnits = 0;
        std::optional<uint32_t> mMaxUnits {};
        uint8_t mTeamToBuff = 0;
        uint8_t mTargetStrategy = 0;
        std::optional<uint32_t> xa8c51db0 {};
        uint8_t mStyle = 0;
        std::string mBuffName {};
        std::string mActivatedBuffName {};
        std::set<std::shared_ptr<yordle::data::meta::TftEffectAmount>> effectAmounts {};
    };

    class YORDLE_EXPORT TftTraitData : public bin_class { 
    public:
        explicit TftTraitData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1871118919 || bin_class::is_type(type);
        }

        std::string mName {};
        std::string mDisplayNameTra {};
        std::string mUnitSectionTra {};
        std::string mDescriptionNameTra {};
        std::string mDisplayNameIcon {};
        std::string mIconPath {};
        std::set<std::shared_ptr<yordle::data::meta::TFTTraitSetData>> mTraitSets {};
    };

    class YORDLE_EXPORT TftTraitList : public bin_class { 
    public:
        explicit TftTraitList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1539106983 || bin_class::is_type(type);
        }

        std::set<uint32_t> mTraits {};
        uint32_t VfxResourceResolver = 0;
    };

    class YORDLE_EXPORT TFTUnitUpgradeData : public bin_class { 
    public:
        explicit TFTUnitUpgradeData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1963259073 || bin_class::is_type(type);
        }

        std::string name {};
        uint8_t xd6debdbe = 0;
    };

    class YORDLE_EXPORT TFTHudAnnouncementData : public bin_class { 
    public:
        explicit TFTHudAnnouncementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 305388529 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mSceneTransitionIn {};
        std::shared_ptr<yordle::data::meta::bin_class> mSceneTransitionOut {};
    };

    class YORDLE_EXPORT TFTHudCombatRecapData : public bin_class { 
    public:
        explicit TFTHudCombatRecapData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1573027425 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mPanelTransition {};
        float x4544719b = 0.0;
    };

    class YORDLE_EXPORT TFTHudNotificationsData : public bin_class { 
    public:
        explicit TFTHudNotificationsData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2068371646 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mSceneTransitionIn {};
        std::shared_ptr<yordle::data::meta::bin_class> mSceneTransitionOut {};
    };

    class YORDLE_EXPORT xda3c6dc6 : public bin_class { 
    public:
        explicit xda3c6dc6(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3661393350 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mSceneTransitionIn {};
        std::shared_ptr<yordle::data::meta::bin_class> mSceneTransitionOut {};
    };

    class YORDLE_EXPORT TFTHudScoreboardData : public bin_class { 
    public:
        explicit TFTHudScoreboardData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1850343160 || bin_class::is_type(type);
        }

        float x840f5062 = 0.0;
        float x254c8137 = 0.0;
        float xf504817a = 0.0;
    };

    class YORDLE_EXPORT TFTHudStageData : public bin_class { 
    public:
        explicit TFTHudStageData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1839038444 || bin_class::is_type(type);
        }

        float xa11246b8 = 0.0;
    };

    class YORDLE_EXPORT TFTHudUnitShopData : public bin_class { 
    public:
        explicit TFTHudUnitShopData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 924097896 || bin_class::is_type(type);
        }

        float x88606883 = 0.0;
        float xc38c6ba9 = 0.0;
    };

    class YORDLE_EXPORT TFTHudMobileDownscaleData : public bin_class { 
    public:
        explicit TFTHudMobileDownscaleData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3672021242 || bin_class::is_type(type);
        }

        float xd4d2ea52 = 0.0;
        float mDownscale = 0.0;
    };

    class YORDLE_EXPORT TFTHudTunables : public bin_class { 
    public:
        explicit TFTHudTunables(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1340671070 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::TFTHudAnnouncementData> mAnnouncementData {};
        std::shared_ptr<yordle::data::meta::TFTHudCombatRecapData> mCombatRecapData {};
        std::shared_ptr<yordle::data::meta::TFTHudNotificationsData> mNotificationsData {};
        std::shared_ptr<yordle::data::meta::xda3c6dc6> mZoomTransitionData {};
        std::shared_ptr<yordle::data::meta::TFTHudScoreboardData> mScoreboardData {};
        std::shared_ptr<yordle::data::meta::TFTHudStageData> mStageData {};
        std::shared_ptr<yordle::data::meta::bin_class> x249fe588 {};
        std::shared_ptr<yordle::data::meta::TFTHudMobileDownscaleData> mMobileDownscaleData {};
        std::shared_ptr<yordle::data::meta::TFTHudUnitShopData> mUnitShopData {};
    };

    class YORDLE_EXPORT x2610e5a7 : public bin_class { 
    public:
        explicit x2610e5a7(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 638641575 || bin_class::is_type(type);
        }

        uint32_t xfa144e3e = 0;
        uint32_t ItemIcon = 0;
        uint32_t xbdcceafd = 0;
        uint32_t x7af87ddd = 0;
        uint32_t x791b47a2 = 0;
        uint32_t x30145a7e = 0;
    };

    class YORDLE_EXPORT x2781ed6b : public bin_class { 
    public:
        explicit x2781ed6b(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 662826347 || bin_class::is_type(type);
        }

        std::string TitleKey {};
        std::string BodyKey {};
    };

    class YORDLE_EXPORT ObjectTags : public bin_class { 
    public:
        explicit ObjectTags(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 622921539 || bin_class::is_type(type);
        }

        std::string mTagList {};
    };

    class YORDLE_EXPORT NumberFormattingBehavior : public bin_class { 
    public:
        explicit NumberFormattingBehavior(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 410617757 || bin_class::is_type(type);
        }

        uint32_t x6a015824 = 0;
        bool x9892a348 = false;
        bool x35feae85 = false;
    };

    class YORDLE_EXPORT NumberFormattingData : public bin_class { 
    public:
        explicit NumberFormattingData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2581062515 || bin_class::is_type(type);
        }

        std::string x5b862d47 {};
        std::string xd183213b {};
        std::string xb995fb1f {};
        std::string x40f5bd16 {};
        std::string xedd8ea83 {};
        std::string x31169dff {};
        std::string xe4f5bdce {};
        std::string x12de6ec {};
        std::string x70177bf1 {};
        std::string xb0c63265 {};
        std::string x89a709fb {};
        std::string xf3ee8811 {};
        std::string xef853971 {};
        std::string xfd7c73b7 {};
        std::string xdd2fcd42 {};
        std::string xc3310cda {};
        std::map<uint32_t, uint32_t> x7a4d89bb {};
    };

    class YORDLE_EXPORT AnnouncementDefinitionData : public bin_class { 
    public:
        explicit AnnouncementDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 502828211 || bin_class::is_type(type);
        }

        uint16_t priority = 0;
        bool CanBeMadeObsolete = false;
        bool MakeLowerPriorityEventsObsolete = false;
        uint32_t Style = 0;
        std::string TextKey {};
        std::string ChatMessageKey {};
        std::string SoundKey {};
        std::string SpectatorSoundKey {};
        uint32_t CommonElements = 0;
        uint32_t AlliedElements = 0;
        uint32_t EnemyElements = 0;
    };

    class YORDLE_EXPORT AnnouncementDefinition : public bin_class { 
    public:
        explicit AnnouncementDefinition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 94368299 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::AnnouncementDefinitionData> DefaultData {};
        std::map<std::string, std::shared_ptr<yordle::data::meta::AnnouncementDefinitionData>> MutatorOverrides {};
    };

    class YORDLE_EXPORT x78387eb5 : public AnnouncementDefinition { 
    public:
        explicit x78387eb5(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2016968373 || AnnouncementDefinition::is_type(type);
        }

    };

    class YORDLE_EXPORT AnnouncementStyleBasic : public bin_class { 
    public:
        explicit AnnouncementStyleBasic(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3731372071 || bin_class::is_type(type);
        }

        uint32_t TextField = 0;
        float MinAnnouncementDuration = 0.0;
        std::shared_ptr<yordle::data::meta::bin_class> x3f43172e {};
        std::shared_ptr<yordle::data::meta::bin_class> xcc99a2db {};
    };

    class YORDLE_EXPORT x48c9ff38 : public AnnouncementStyleBasic { 
    public:
        explicit x48c9ff38(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1221197624 || AnnouncementStyleBasic::is_type(type);
        }

        uint32_t SourceIcon = 0;
    };

    class YORDLE_EXPORT xaa95a271 : public AnnouncementStyleBasic { 
    public:
        explicit xaa95a271(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2861933169 || AnnouncementStyleBasic::is_type(type);
        }

        uint32_t LeftIcon = 0;
        uint32_t RightIcon = 0;
    };

    class YORDLE_EXPORT AnnouncementIcon : public bin_class { 
    public:
        explicit AnnouncementIcon(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 728839351 || bin_class::is_type(type);
        }

        uint32_t x108e8710 = 0;
        uint32_t xc2e2a2df = 0;
        uint32_t x3e37c63b = 0;
        uint32_t AlliedElementGroup = 0;
        uint32_t EnemyElementGroup = 0;
        uint32_t xdd749512 = 0;
        uint32_t xde7496a5 = 0;
        uint32_t xdb7491ec = 0;
        uint32_t xdc74937f = 0;
    };

    class YORDLE_EXPORT AnnouncementMap : public bin_class { 
    public:
        explicit AnnouncementMap(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 224929220 || bin_class::is_type(type);
        }

        uint32_t ParentList = 0;
        std::string x81082e4b {};
        uint32_t x79175e85 = 0;
        uint32_t xcf8c591b = 0;
        std::map<std::string, uint32_t> Announcements {};
    };

    class YORDLE_EXPORT CursorData : public bin_class { 
    public:
        explicit CursorData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 187557783 || bin_class::is_type(type);
        }

        std::array<float, 2> mHotSpot {};
        std::string mTextureName {};
        std::string mColorblindTextureName {};
        std::string xd240ce4f {};
        std::string xf6536c51 {};
    };

    class YORDLE_EXPORT CursorDataTeamContext : public bin_class { 
    public:
        explicit CursorDataTeamContext(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4014870449 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::CursorData>> mData {};
    };

    class YORDLE_EXPORT CursorDataCaptureCooldownContext : public bin_class { 
    public:
        explicit CursorDataCaptureCooldownContext(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3454621813 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::CursorData>> mData {};
    };

    class YORDLE_EXPORT CursorConfig : public bin_class { 
    public:
        explicit CursorConfig(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3994575677 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::CursorData>> mSingleContextCursors {};
        std::set<std::shared_ptr<yordle::data::meta::CursorDataTeamContext>> mTeamContextCursors {};
        std::shared_ptr<yordle::data::meta::CursorDataCaptureCooldownContext> mHoverNotUseableCursor {};
    };

    class YORDLE_EXPORT HealthbarImageInfo : public bin_class { 
    public:
        explicit HealthbarImageInfo(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1743182461 || bin_class::is_type(type);
        }

        std::string mTextureName {};
        std::array<float, 2> mOffset {};
        std::array<float, 4> mTextureUvs {};
    };

    class YORDLE_EXPORT UnitStatusData : public bin_class { 
    public:
        explicit UnitStatusData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1273755329 || bin_class::is_type(type);
        }

        uint32_t locType = 0;
        uint32_t attackableUnitStatusType = 0;
        std::string statusName {};
        std::optional<std::array<uint8_t, 4>> textColor {};
        std::shared_ptr<yordle::data::meta::HealthbarImageInfo> imageInfo {};
    };

    class YORDLE_EXPORT UnitStatusPriorityList : public bin_class { 
    public:
        explicit UnitStatusPriorityList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3886968817 || bin_class::is_type(type);
        }

        float mMinimumDisplayTime = 0.0;
        std::set<std::shared_ptr<yordle::data::meta::UnitStatusData>> mPrioritizedUnitStatusData {};
    };

    class YORDLE_EXPORT FloatTextIconData : public bin_class { 
    public:
        explicit FloatTextIconData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 383291203 || bin_class::is_type(type);
        }

        std::string mIconFileName {};
        std::array<uint8_t, 4> mColor {};
        std::array<float, 2> mDisplaySize {};
        std::array<float, 2> mOffset {};
        uint32_t mAlignment = 0;
    };

    class YORDLE_EXPORT FloatTextDisplayOverrides : public bin_class { 
    public:
        explicit FloatTextDisplayOverrides(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 267762117 || bin_class::is_type(type);
        }

        std::optional<int32_t> priority {};
        std::optional<int32_t> maxInstances {};
        std::optional<bool> isAnimated {};
        std::optional<bool> disableHorizontalReverse {};
        std::optional<bool> disableVerticalReverse {};
        std::optional<bool> momentumFromHit {};
        std::optional<bool> followSource {};
        std::optional<bool> ignoreCombineRules {};
        std::optional<bool> ignoreQueue {};
        std::optional<bool> alternateRightLeft {};
        std::optional<bool> combinableCounterDisplay {};
        std::optional<int32_t> combinableCounterCategory {};
        std::optional<bool> overwritePreviousNumber {};
        std::optional<float> extendTimeOnNewDamage {};
        std::optional<float> maxLifeTime {};
        std::optional<int32_t> colorOffsetR {};
        std::optional<int32_t> colorOffsetG {};
        std::optional<int32_t> colorOffsetB {};
        std::optional<float> scale {};
        std::optional<float> decay {};
        std::optional<float> decayDelay {};
        std::optional<float> shrinkTime {};
        std::optional<float> shrinkScale {};
        std::optional<float> hangTime {};
        std::optional<float> randomOffsetMinX {};
        std::optional<float> randomOffsetMaxX {};
        std::optional<float> randomOffsetMinY {};
        std::optional<float> randomOffsetMaxY {};
        std::optional<float> startOffsetX {};
        std::optional<float> startOffsetY {};
        std::optional<float> relativeOffsetMin {};
        std::optional<float> relativeOffsetMax {};
        std::optional<float> minXVelocity {};
        std::optional<float> maxXVelocity {};
        std::optional<float> minYVelocity {};
        std::optional<float> maxYVelocity {};
        std::optional<float> continualForceX {};
        std::optional<float> continualForceY {};
        std::optional<float> growthXScalar {};
        std::optional<float> growthYScalar {};
    };

    class YORDLE_EXPORT FloatingTextTunables : public bin_class { 
    public:
        explicit FloatingTextTunables(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 395898060 || bin_class::is_type(type);
        }

        uint32_t mMaxFloatingTextItems = 0;
        float mIntervalInPix = 0.0;
        float mScrollSpeed = 0.0;
        float mAnimatedTextQueueDelay = 0.0;
        float mYResolutionBaseline = 0.0;
        float mMinimumDynamicScale = 0.0;
        float mMaximumDynamicScale = 0.0;
        float xccf713a7 = 0.0;
        float xf56f095c = 0.0;
        float mMinionComparisonMultiplier = 0.0;
        float mLocalPlayerHealthComparison = 0.0;
        std::set<float> mComparisonByLevel {};
    };

    class YORDLE_EXPORT FloatingTextDamageDisplayTypeList : public bin_class { 
    public:
        explicit FloatingTextDamageDisplayTypeList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3119478897 || bin_class::is_type(type);
        }

        uint32_t Default = 0;
        uint32_t Impact = 0;
        uint32_t Zone = 0;
        uint32_t Ult = 0;
        uint32_t DotNoCombine = 0;
        uint32_t Dot = 0;
        uint32_t DotSlow = 0;
        uint32_t Multistrike = 0;
        uint32_t MultistrikeFast = 0;
        uint32_t MultistrikeSlow = 0;
        uint32_t PlayerMinion = 0;
        uint32_t BarrackMinion = 0;
        uint32_t Mini = 0;
        uint32_t SelfTrueDamageCounter = 0;
        uint32_t SelfPhysicalDamageCounter = 0;
        uint32_t SelfMagicalDamageCounter = 0;
    };

    class YORDLE_EXPORT FloatTextFormattingData : public bin_class { 
    public:
        explicit FloatTextFormattingData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 585161597 || bin_class::is_type(type);
        }

        uint32_t mTypeName = 0;
        int32_t colorOffsetR = 0;
        int32_t colorOffsetG = 0;
        int32_t colorOffsetB = 0;
        uint32_t mFontDescription = 0;
        bool ignoreCombineRules = false;
        std::string combinableNumberFormat {};
        std::string combinableNegativeNumberFormat {};
        int32_t priority = 0;
        float height = 0.0;
        float decay = 0.0;
        float decayDelay = 0.0;
        bool disabled = false;
        bool isAnimated = false;
        bool momentumFromHit = false;
        bool followSource = false;
        bool disableHorizontalReverse = false;
        bool disableVerticalReverse = false;
        bool combinableCounterDisplay = false;
        int32_t combinableCounterCategory = 0;
        bool overwritePreviousNumber = false;
        float minXVelocity = 0.0;
        float maxXVelocity = 0.0;
        float minYVelocity = 0.0;
        float maxYVelocity = 0.0;
        float startOffsetX = 0.0;
        float startOffsetY = 0.0;
        float hangTime = 0.0;
        float randomStartOffsetMinX = 0.0;
        float randomStartOffsetMaxX = 0.0;
        float randomStartOffsetMinY = 0.0;
        float randomStartOffsetMaxY = 0.0;
        float growthYScalar = 0.0;
        float growthXScalar = 0.0;
        float relativeOffsetMin = 0.0;
        float relativeOffsetMax = 0.0;
        float continualForceX = 0.0;
        float continualForceY = 0.0;
        float continualForceXBase = 0.0;
        float continualForceYBase = 0.0;
        float shrinkTime = 0.0;
        float scale = 0.0;
        float extendTimeOnNewDamage = 0.0;
        float maxLifeTime = 0.0;
        bool ignoreQueue = false;
        bool alternateRightLeft = false;
        int32_t maxInstances = 0;
        float shrinkScale = 0.0;
        bool refreshExisting = false;
        bool attachToHealthBar = false;
        bool offsetByBoundingBox = false;
        uint8_t horizontalAlignment = 0;
        uint8_t verticalAlignment = 0;
        std::set<std::shared_ptr<yordle::data::meta::FloatTextIconData>> icons {};
    };

    class YORDLE_EXPORT FloatingTextTypeList : public bin_class { 
    public:
        explicit FloatingTextTypeList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 46628140 || bin_class::is_type(type);
        }

        uint32_t Invulnerable = 0;
        uint32_t Special = 0;
        uint32_t Heal = 0;
        uint32_t ManaHeal = 0;
        uint32_t ManaDamage = 0;
        uint32_t Dodge = 0;
        uint32_t PhysicalDamageCritical = 0;
        uint32_t MagicalDamageCritical = 0;
        uint32_t TrueDamageCritical = 0;
        uint32_t Experience = 0;
        uint32_t Gold = 0;
        uint32_t level = 0;
        uint32_t Disable = 0;
        uint32_t QuestReceived = 0;
        uint32_t QuestComplete = 0;
        uint32_t Score = 0;
        uint32_t PhysicalDamage = 0;
        uint32_t MagicalDamage = 0;
        uint32_t TrueDamage = 0;
        uint32_t EnemyPhysicalDamage = 0;
        uint32_t EnemyMagicalDamage = 0;
        uint32_t EnemyTrueDamage = 0;
        uint32_t EnemyPhysicalDamageCritical = 0;
        uint32_t EnemyMagicalDamageCritical = 0;
        uint32_t EnemyTrueDamageCritical = 0;
        uint32_t Countdown = 0;
        uint32_t OMW = 0;
        uint32_t Absorbed = 0;
        uint32_t Debug = 0;
        uint32_t PracticeToolTotal = 0;
        uint32_t PracticeToolLastHit = 0;
        uint32_t PracticeToolDPS = 0;
        uint32_t ScoreDarkStar = 0;
        uint32_t ScoreProject0 = 0;
        uint32_t ScoreProject1 = 0;
        uint32_t ShieldBonusDamage = 0;
        uint32_t TFTUnitLabel = 0;
    };

    class YORDLE_EXPORT FloatingTextGlobalConfig : public bin_class { 
    public:
        explicit FloatingTextGlobalConfig(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2165648641 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::FloatingTextTunables> mTunables {};
        std::shared_ptr<yordle::data::meta::FloatingTextDamageDisplayTypeList> mDamageDisplayTypes {};
        std::shared_ptr<yordle::data::meta::FloatingTextTypeList> mFloatingTextTypes {};
    };

    class YORDLE_EXPORT FloatingTextOverride : public bin_class { 
    public:
        explicit FloatingTextOverride(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1059987028 || bin_class::is_type(type);
        }

        std::map<uint32_t, bool> OverriddenFloatingTextTypes {};
    };

    class YORDLE_EXPORT HudColorData : public bin_class { 
    public:
        explicit HudColorData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3892017401 || bin_class::is_type(type);
        }

        std::array<uint8_t, 4> mSelfColor {};
        std::array<uint8_t, 4> mFriendlyColor {};
        std::array<uint8_t, 4> mEnemyColor {};
        std::array<uint8_t, 4> mNeutralColor {};
        std::array<uint8_t, 4> mOrderColor {};
        std::array<uint8_t, 4> mChaosColor {};
        std::array<uint8_t, 4> mJunglePlantColor {};
        std::array<uint8_t, 4> mFriendlyLaneMinionBarColor {};
        std::array<uint8_t, 4> mEnemyLaneMinionBarColor {};
        std::array<uint8_t, 4> mDeathFriendlyTeamColor {};
        std::array<uint8_t, 4> mDeathEnemyTeamColor {};
        std::array<uint8_t, 4> mDeathOrderColor {};
        std::array<uint8_t, 4> mDeathChaosColor {};
        std::array<uint8_t, 4> mInputChatColor {};
        std::array<uint8_t, 4> mShadowChatColor {};
        std::array<uint8_t, 4> mFriendlyChatColor {};
        std::array<uint8_t, 4> mAllChatColor {};
        std::array<uint8_t, 4> mEnemyChatColor {};
        std::array<uint8_t, 4> mNeutralChatColor {};
        std::array<uint8_t, 4> mPingChatColor {};
        std::array<uint8_t, 4> mTeamChatColor {};
        std::array<uint8_t, 4> mNetworkChatColor {};
        std::array<uint8_t, 4> mOrderChatColor {};
        std::array<uint8_t, 4> mChaosChatColor {};
        std::array<uint8_t, 4> mGoldChatColor {};
        std::array<uint8_t, 4> mTimestampChatColor {};
        std::array<uint8_t, 4> mWhisperColor {};
        std::array<uint8_t, 4> mPartyChatColor {};
        std::array<uint8_t, 4> mPlatformChatColor {};
        std::array<uint8_t, 4> mFeedbackChatColor {};
        std::array<uint8_t, 4> mItemCalloutBodyColor {};
        std::array<uint8_t, 4> mItemCalloutItemColor {};
        std::array<uint8_t, 4> mMarkedIndicatorColor {};
        std::array<uint8_t, 4> mSelectedIndicatorColor {};
        std::array<uint8_t, 4> mHighlightedIndicatorColor {};
        std::array<uint8_t, 4> mItemHotKeyEnabledColor {};
        std::array<uint8_t, 4> mItemHotKeyDisabledColor {};
        std::array<uint8_t, 4> mSpellHotKeyEnabledColor {};
        std::array<uint8_t, 4> mSpellHotKeyDisabledColor {};
        std::array<uint8_t, 4> mStatNormalColor {};
        std::array<uint8_t, 4> mStatBoostedColor {};
        std::array<uint8_t, 4> mLevelUpColor {};
        std::array<uint8_t, 4> mEvolutionColor {};
        std::array<uint8_t, 4> mSummonerNameDeadColor {};
        std::array<uint8_t, 4> mSummonerNameDefaultColor {};
        std::array<uint8_t, 4> mSummonerNameSelfColor {};
        std::array<uint8_t, 4> mClubTagFriendlyChatColor {};
        std::array<uint8_t, 4> mClubTagEnemyChatColor {};
        std::array<uint8_t, 4> mClubTagNeutralChatColor {};
        std::array<uint8_t, 4> mClubTagOrderChatColor {};
        std::array<uint8_t, 4> mClubTagChaosChatColor {};
        std::array<uint8_t, 4> mVoiceChatDefaultTextColor {};
        std::array<uint8_t, 4> mVoiceChatHoverTextColor {};
        std::array<uint8_t, 4> mVoiceChatHaloTextureColor {};
        std::array<uint8_t, 4> x3ca4e54 {};
        std::array<uint8_t, 4> xdfd9f7a0 {};
        std::array<uint8_t, 4> xd614aa57 {};
        std::array<uint8_t, 4> VoteEmptyColor {};
        std::array<uint8_t, 4> x51c13ad7 {};
        std::array<uint8_t, 4> VoteNocolor {};
        std::array<uint8_t, 4> xc14d71dc {};
        std::array<uint8_t, 4> xcd9cb6c5 {};
        std::array<uint8_t, 4> x3f68efb8 {};
        std::array<uint8_t, 4> x9487808b {};
        std::array<uint8_t, 4> xfc46842 {};
        std::array<uint8_t, 4> x3b64dfe3 {};
        std::array<uint8_t, 4> x672ccd56 {};
        std::set<std::array<uint8_t, 4>> x9316f661 {};
        std::array<uint8_t, 4> x30c22182 {};
        std::array<uint8_t, 4> xee9a2886 {};
        std::array<uint8_t, 4> xc09ccdd8 {};
        std::array<uint8_t, 4> x24eb55a3 {};
        std::array<uint8_t, 4> x2f02af61 {};
        std::array<uint8_t, 4> xca1d9872 {};
    };

    class YORDLE_EXPORT HudFeedbackDamageData : public bin_class { 
    public:
        explicit HudFeedbackDamageData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3939670256 || bin_class::is_type(type);
        }

        float mPercentageDamageForFlash = 0.0;
        float mOverTimeForFlashSeconds = 0.0;
        float mMaxPercentageForMostReadHealth = 0.0;
        float mFlashDuration = 0.0;
        float mStartFlashAlpha = 0.0;
        float mLowHealthFlashThresholdPercentage = 0.0;
        float mLowHealthFlashDuration = 0.0;
        float mLowHealthFlashOpacityStrength = 0.0;
    };

    class YORDLE_EXPORT TeamScoreMeterUITunables : public bin_class { 
    public:
        explicit TeamScoreMeterUITunables(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4180972365 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mSceneTransition {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> mTeamScoreMeterProperties {};
        uint32_t mTeamScoreMeterMaxRoundsPerTeam = 0;
        bool mAllowDynamicVisibility = false;
        bool mCountdownTimer = false;
        uint8_t xdff2794f = 0;
    };

    class YORDLE_EXPORT HudTeamScoreMeterProperties : public bin_class { 
    public:
        explicit HudTeamScoreMeterProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3303051661 || bin_class::is_type(type);
        }

        uint8_t mTeamScoreMeterType = 0;
        bool mShowScoreText = false;
        std::string x86864fbc {};
        std::string x6044a790 {};
    };

    class YORDLE_EXPORT EncounterUITunables : public bin_class { 
    public:
        explicit EncounterUITunables(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 60771964 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mSceneTransition {};
        float mProgressBarEaseRate = 0.0;
        std::string mProgressMeterSuffix {};
        std::string mTimerMeterSuffix {};
        float mUnitBarFadeSpeed = 0.0;
        bool x3fc8ecec = false;
        std::string mProgressMeterHoverText {};
        std::string mProgressMeterPingText {};
        std::string mPipsHoverText {};
    };

    class YORDLE_EXPORT QuestUITunables : public bin_class { 
    public:
        explicit QuestUITunables(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3365626407 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mSceneTransition {};
    };

    class YORDLE_EXPORT DragonUITunables : public bin_class { 
    public:
        explicit DragonUITunables(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3440211024 || bin_class::is_type(type);
        }

        uint8_t mSlots = 0;
        std::set<std::string> mDragonBaseNames {};
    };

    class YORDLE_EXPORT HudGameModeScoreData : public bin_class { 
    public:
        explicit HudGameModeScoreData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3557256043 || bin_class::is_type(type);
        }

        std::set<uint8_t> mTeamScoreElementTypes {};
        std::set<uint8_t> mIndividualScoreElementTypes {};
        std::string mModeKeyName {};
        std::string mTeamGameScorePingMessage {};
        std::shared_ptr<yordle::data::meta::TeamScoreMeterUITunables> mTeamScoreMeterUi {};
        std::shared_ptr<yordle::data::meta::EncounterUITunables> mEncounterUi {};
        std::shared_ptr<yordle::data::meta::bin_class> mTeamFightUi {};
        std::shared_ptr<yordle::data::meta::QuestUITunables> mQuestUi {};
        std::shared_ptr<yordle::data::meta::DragonUITunables> mDragonUi {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> mOptionalBins {};
    };

    class YORDLE_EXPORT MinimapIconTextureData : public bin_class { 
    public:
        explicit MinimapIconTextureData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3732824828 || bin_class::is_type(type);
        }

        std::string mBase {};
        std::optional<std::string> mColorblind {};
    };

    class YORDLE_EXPORT MinimapIconColorData : public bin_class { 
    public:
        explicit MinimapIconColorData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 59888480 || bin_class::is_type(type);
        }

        std::array<uint8_t, 4> mBase {};
        std::optional<std::array<uint8_t, 4>> mColorblind {};
    };

    class YORDLE_EXPORT MinimapIcon : public bin_class { 
    public:
        explicit MinimapIcon(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 525225061 || bin_class::is_type(type);
        }

        bool mRelativeTeams = false;
        std::array<float, 2> mSize {};
        float mMinScale = 0.0;
        float mMaxScale = 0.0;
        std::shared_ptr<yordle::data::meta::MinimapIconTextureData> mBaseTexture {};
        std::map<uint8_t, std::shared_ptr<yordle::data::meta::MinimapIconTextureData>> mTeamTextures {};
        std::shared_ptr<yordle::data::meta::MinimapIconColorData> mBaseColor {};
        std::map<uint8_t, std::shared_ptr<yordle::data::meta::MinimapIconColorData>> mTeamColors {};
    };

    class YORDLE_EXPORT MinimapData : public bin_class { 
    public:
        explicit MinimapData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 523452044 || bin_class::is_type(type);
        }

        std::map<uint8_t, std::shared_ptr<yordle::data::meta::MinimapIcon>> mIcons {};
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::MinimapIcon>> mCustomIcons {};
    };

    class YORDLE_EXPORT HudOptionalBinData : public bin_class { 
    public:
        explicit HudOptionalBinData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3920544379 || bin_class::is_type(type);
        }

        std::string mName {};
        uint32_t mPriority = 0;
    };

    class YORDLE_EXPORT HudTunables : public bin_class { 
    public:
        explicit HudTunables(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2058949250 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mScaleSettings {};
        std::shared_ptr<yordle::data::meta::bin_class> mLevelUpTransitionData {};
        std::shared_ptr<yordle::data::meta::bin_class> mGameScoreboardTransitionData {};
        std::shared_ptr<yordle::data::meta::bin_class> mReplayScoreboardTransitionData {};
        std::shared_ptr<yordle::data::meta::bin_class> mReplayGameStatsTransitionData {};
        std::shared_ptr<yordle::data::meta::bin_class> x9cec9ff0 {};
        std::shared_ptr<yordle::data::meta::bin_class> x4e7d3049 {};
        std::shared_ptr<yordle::data::meta::bin_class> mElementalSelectionAnimationData {};
        std::shared_ptr<yordle::data::meta::bin_class> mEmotePopupData {};
        std::shared_ptr<yordle::data::meta::bin_class> mGearSelectionData {};
        std::shared_ptr<yordle::data::meta::bin_class> mRadailWheelData {};
        std::shared_ptr<yordle::data::meta::bin_class> mReplayData {};
        std::shared_ptr<yordle::data::meta::bin_class> mCheatMenuData {};
        std::shared_ptr<yordle::data::meta::bin_class> mPingData {};
        std::shared_ptr<yordle::data::meta::bin_class> mVoiceChatData {};
        std::shared_ptr<yordle::data::meta::bin_class> mInputBoxData {};
        std::shared_ptr<yordle::data::meta::bin_class> mHealthBarData {};
        std::shared_ptr<yordle::data::meta::bin_class> mHudSpellSlotResetFeedbackData {};
        std::shared_ptr<yordle::data::meta::bin_class> mLoadingScreenData {};
        std::shared_ptr<yordle::data::meta::bin_class> mStatPanelStatStoneData {};
        std::shared_ptr<yordle::data::meta::bin_class> mStatStoneData {};
        std::shared_ptr<yordle::data::meta::bin_class> mStatStoneDeathRecapData {};
        std::shared_ptr<yordle::data::meta::bin_class> StatStoneMilestoneData {};
        std::shared_ptr<yordle::data::meta::bin_class> mEndOfGameData {};
        std::shared_ptr<yordle::data::meta::bin_class> x86402adf {};
        std::shared_ptr<yordle::data::meta::bin_class> x48c75042 {};
        std::shared_ptr<yordle::data::meta::bin_class> DamageDisplayData {};
        std::shared_ptr<yordle::data::meta::bin_class> FightRecapUiData {};
    };

    class YORDLE_EXPORT HudScaleSettingsData : public bin_class { 
    public:
        explicit HudScaleSettingsData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2979455577 || bin_class::is_type(type);
        }

        float maximumGlobalScale = 0.0;
        float minimumGlobalScale = 0.0;
        float maximumMinimapScale = 0.0;
        float minimumMinimapScale = 0.0;
        float x6b8896b6 = 0.0;
        float xb565cf40 = 0.0;
        float maximumPracticeToolScale = 0.0;
        float minimumPracticeToolScale = 0.0;
        float maximumChatScale = 0.0;
        float minimumChatScale = 0.0;
    };

    class YORDLE_EXPORT HudLevelUpData : public bin_class { 
    public:
        explicit HudLevelUpData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2124320233 || bin_class::is_type(type);
        }

        uint8_t minAlpha = 0;
        uint8_t maxAlpha = 0;
        float maxOffset = 0.0;
        float animTime = 0.0;
        float delay = 0.0;
        float overshoot = 0.0;
        float inertia = 0.0;
        float playerBuffsOffset = 0.0;
        float idleSheenInterval = 0.0;
    };

    class YORDLE_EXPORT HudBannerData : public bin_class { 
    public:
        explicit HudBannerData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2731869740 || bin_class::is_type(type);
        }

        float transitionTime = 0.0;
        uint8_t TransitionMinAlpha = 0;
        uint8_t TransitionMaxAlpha = 0;
        std::array<float, 2> transitionOffset {};
        std::array<float, 2> pulseOffset {};
        float pulseTime = 0.0;
        float pulseDuration = 0.0;
        float pulseInterval = 0.0;
    };

    class YORDLE_EXPORT HudAbilityPromptData : public bin_class { 
    public:
        explicit HudAbilityPromptData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4291825122 || bin_class::is_type(type);
        }

        std::array<uint8_t, 4> PulseStartColor {};
        std::array<uint8_t, 4> PulseEndColor {};
        std::array<float, 2> pulseOffset {};
        float pulseTime = 0.0;
        float pulseInterval = 0.0;
    };

    class YORDLE_EXPORT HudMenuTransitionData : public bin_class { 
    public:
        explicit HudMenuTransitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3273533950 || bin_class::is_type(type);
        }

        float transitionTime = 0.0;
        uint8_t minAlpha = 0;
        uint8_t maxAlpha = 0;
        uint8_t EasingType = 0;
    };

    class YORDLE_EXPORT HudElementalSectionUIData : public bin_class { 
    public:
        explicit HudElementalSectionUIData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3553075624 || bin_class::is_type(type);
        }

        std::array<uint8_t, 4> airColoration {};
        std::array<uint8_t, 4> fireColoration {};
        std::array<uint8_t, 4> earthColoration {};
        std::array<uint8_t, 4> waterColoration {};
        std::array<uint8_t, 4> darkColoration {};
        std::array<uint8_t, 4> fairyColoration {};
        std::array<uint8_t, 4> iceColoration {};
        std::array<uint8_t, 4> lightColoration {};
        std::array<uint8_t, 4> magmaColoration {};
        std::array<uint8_t, 4> stormColoration {};
        float meterFilledButtonFadeInDelay = 0.0;
        float firstSelectionAnimationDelay = 0.0;
        float secondSelectionAnimationDelay = 0.0;
        float glowingRingCycleTime = 0.0;
    };

    class YORDLE_EXPORT HudEmotePopupData : public bin_class { 
    public:
        explicit HudEmotePopupData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 440468936 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> mEmotePopupTransitionIntro {};
        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> mEmotePopupTransitionOutro {};
        std::string mUiSound {};
        float mEmotePopupDisplayTime = 0.0;
        float x728d935f = 0.0;
        float x7cd0d83 = 0.0;
        float x75d54c28 = 0.0;
        float xf680b7d9 = 0.0;
        float x6bd76883 = 0.0;
        bool mEmoteFloatEnabled = false;
    };

    class YORDLE_EXPORT HudGearSelectionUIData : public bin_class { 
    public:
        explicit HudGearSelectionUIData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1288133231 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> mGearSelectionTransitionIntro {};
        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> mGearSelectionTransitionOutro {};
        float selectionButtonDelayTime = 0.0;
        bool timerEnabled = false;
        float timerCountdownDuration = 0.0;
        float timerCountdownWarningStart = 0.0;
    };

    class YORDLE_EXPORT HudRadialWheelData : public bin_class { 
    public:
        explicit HudRadialWheelData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1493463692 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> mRadialWheelUITransitionData {};
        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> mRadialWheelButtonTransitionIntro {};
        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> mRadialWheelButtonTransitionOutro {};
        float activateWheelDelayTime = 0.0;
    };

    class YORDLE_EXPORT HudTeamFightOffScreenDifferentiationData : public bin_class { 
    public:
        explicit HudTeamFightOffScreenDifferentiationData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4224366477 || bin_class::is_type(type);
        }

        float x40e3864f = 0.0;
        float x3f035ddd = 0.0;
        uint8_t x23086737 = 0;
    };

    class YORDLE_EXPORT HudTeamFightData : public bin_class { 
    public:
        explicit HudTeamFightData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3784622423 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> mSceneTransition {};
        uint32_t mStyleFlags = 0;
        std::shared_ptr<yordle::data::meta::HudTeamFightOffScreenDifferentiationData> xa7620c86 {};
    };

    class YORDLE_EXPORT HudReplayData : public bin_class { 
    public:
        explicit HudReplayData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2809029825 || bin_class::is_type(type);
        }

        float messageVisibleTime = 0.0;
        std::shared_ptr<yordle::data::meta::HudTeamFightData> TeamFightData {};
    };

    class YORDLE_EXPORT HudCheatMenuData : public bin_class { 
    public:
        explicit HudCheatMenuData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2036195162 || bin_class::is_type(type);
        }

        float tooltipDelay = 0.0;
        float groupDividerGapSize = 0.0;
        uint8_t groupDividerIndex = 0;
    };

    class YORDLE_EXPORT HudPingData : public bin_class { 
    public:
        explicit HudPingData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3598370238 || bin_class::is_type(type);
        }

        float distanceToNotTrollPingCorpses = 0.0;
        float timeToNotTrollPingCorpses = 0.0;
    };

    class YORDLE_EXPORT HudVoiceChatData : public bin_class { 
    public:
        explicit HudVoiceChatData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 929479566 || bin_class::is_type(type);
        }

        float highlightTimeoutSeconds = 0.0;
    };

    class YORDLE_EXPORT HudInputBoxData : public bin_class { 
    public:
        explicit HudInputBoxData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4284799695 || bin_class::is_type(type);
        }

        uint8_t inputTextLengthMax = 0;
        float caretAlphaMax = 0.0;
        float caretBlinkTime = 0.0;
        float markedOffsetY = 0.0;
        float markedLineSizePx = 0.0;
        float selectedOffsetY = 0.0;
        float selectedLineSizePx = 0.0;
        float xbeabf2d8 = 0.0;
    };

    class YORDLE_EXPORT HudHealthBarBurstData : public bin_class { 
    public:
        explicit HudHealthBarBurstData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 234651109 || bin_class::is_type(type);
        }

        float burstTimeWindow = 0.0;
        float burstTriggerPercent = 0.0;
        float flashTriggerPercent = 0.0;
        float flashDuration = 0.0;
        float shakeDuration = 0.0;
        std::array<float, 2> shakeBox {};
        std::array<float, 2> shakeReferenceResolution {};
        float shakeTriggerPercent = 0.0;
        float shakeFrequency = 0.0;
        float fadeSpeed = 0.0;
        float fadeAcceleration = 0.0;
        float fadeHoldTime = 0.0;
    };

    class YORDLE_EXPORT HudHealthBarFadeData : public bin_class { 
    public:
        explicit HudHealthBarFadeData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1035555423 || bin_class::is_type(type);
        }

        float fadeSpeed = 0.0;
        float fadeAcceleration = 0.0;
        float fadeHoldTime = 0.0;
    };

    class YORDLE_EXPORT HudHealthBarDefenseModifierData : public bin_class { 
    public:
        explicit HudHealthBarDefenseModifierData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 749793326 || bin_class::is_type(type);
        }

        float defenseUpPercent = 0.0;
        float defenseDownL1Percent = 0.0;
        float defenseDownL2Percent = 0.0;
        float defenseDownL3Percent = 0.0;
    };

    class YORDLE_EXPORT HudHealthBarBurstHealData : public bin_class { 
    public:
        explicit HudHealthBarBurstHealData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4246198531 || bin_class::is_type(type);
        }

        float healTimeWindow = 0.0;
        float healTriggerPercent = 0.0;
        float healFadeDuration = 0.0;
    };

    class YORDLE_EXPORT HudHealthBarDefenseIconData : public bin_class { 
    public:
        explicit HudHealthBarDefenseIconData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 937928230 || bin_class::is_type(type);
        }

        float enlargeTime = 0.0;
        float enlargeSize = 0.0;
        float settleTime = 0.0;
    };

    class YORDLE_EXPORT MicroTicksPerTickData : public bin_class { 
    public:
        explicit MicroTicksPerTickData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 105644319 || bin_class::is_type(type);
        }

        float minHealth = 0.0;
        uint32_t microTicksBetween = 0;
    };

    class YORDLE_EXPORT HudHealthBarProgressiveTickData : public bin_class { 
    public:
        explicit HudHealthBarProgressiveTickData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 503820853 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::MicroTicksPerTickData>> microTickPerTickData {};
        float healthPerTick = 0.0;
    };

    class YORDLE_EXPORT HudHealthBarData : public bin_class { 
    public:
        explicit HudHealthBarData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 85573057 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::HudHealthBarBurstData> burstData {};
        std::shared_ptr<yordle::data::meta::HudHealthBarBurstData> towerBurstData {};
        std::shared_ptr<yordle::data::meta::HudHealthBarBurstHealData> burstHealData {};
        std::shared_ptr<yordle::data::meta::HudHealthBarProgressiveTickData> championProgressiveTickData {};
        std::shared_ptr<yordle::data::meta::HudHealthBarFadeData> fadeData {};
        std::shared_ptr<yordle::data::meta::HudHealthBarDefenseModifierData> defenseModifierData {};
        std::shared_ptr<yordle::data::meta::HudHealthBarDefenseIconData> defenseIconData {};
        float untargetableAlpha = 0.0;
        float resurrectingAlpha = 0.0;
    };

    class YORDLE_EXPORT HudSpellSlotResetFeedbackData : public bin_class { 
    public:
        explicit HudSpellSlotResetFeedbackData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1323252584 || bin_class::is_type(type);
        }

        float spellResetFlashFadeDuration = 0.0;
        float spellResetFlashScaleDownDuration = 0.0;
        float spellResetScaleMultiplier = 0.0;
    };

    class YORDLE_EXPORT HudLoadingScreenProgressBarData : public bin_class { 
    public:
        explicit HudLoadingScreenProgressBarData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 464608054 || bin_class::is_type(type);
        }

        float xe4a8e1a9 = 0.0;
        float xd69543e7 = 0.0;
        float x9f3d3433 = 0.0;
        float xb550de8d = 0.0;
    };

    class YORDLE_EXPORT HudLoadingScreenData : public bin_class { 
    public:
        explicit HudLoadingScreenData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4205759190 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::HudLoadingScreenProgressBarData> mProgressBarData {};
        bool x9d17e9e3 = false;
        float mLoadingSpinnerSpeed = 0.0;
        uint8_t mLoadingSpinnerFrames = 0;
        uint8_t mLoadingSpinnerRows = 0;
    };

    class YORDLE_EXPORT HudStatPanelStatStoneData : public bin_class { 
    public:
        explicit HudStatPanelStatStoneData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2341739189 || bin_class::is_type(type);
        }

        float xca84776a = 0.0;
        float xf675a6b7 = 0.0;
        float mAnimationDelayTime = 0.0;
        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> x77d83159 {};
        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> x4ae65dfa {};
        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> mSlideTransitionIn {};
        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> mSlideTransitionOut {};
    };

    class YORDLE_EXPORT HudStatStoneData : public bin_class { 
    public:
        explicit HudStatStoneData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2137884073 || bin_class::is_type(type);
        }

        std::string x2dd6b42e {};
        std::string x3c8fa9e9 {};
    };

    class YORDLE_EXPORT HudStatStoneDeathRecapData : public bin_class { 
    public:
        explicit HudStatStoneDeathRecapData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1887734700 || bin_class::is_type(type);
        }

        float MinDisplayTime = 0.0;
        float MaxDisplayTime = 0.0;
        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> DetailsTransitionData {};
        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> DeathRecapTransitionIn {};
        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> DeathRecapTransitionOut {};
    };

    class YORDLE_EXPORT HudStatStoneMilestoneData : public bin_class { 
    public:
        explicit HudStatStoneMilestoneData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4122721905 || bin_class::is_type(type);
        }

        std::string UiSound {};
        std::string xedf950c1 {};
        std::string x4f7fe3a3 {};
        std::string xbb713ae8 {};
        float MilestoneDisplayTime = 0.0;
        float xdd1c30ab = 0.0;
        float MilestoneSelfIntroTime = 0.0;
        float MilestoneOtherIntroTime = 0.0;
        float PersonalBestIntroTime = 0.0;
        float x39fecf93 = 0.0;
        uint32_t xdb4c4cf = 0;
        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> xa6d1b459 {};
        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> MilestoneTransitionIn {};
        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> MilestoneTransitionOut {};
        bool x4ea59d14 = false;
    };

    class YORDLE_EXPORT HudEndOfGameData : public bin_class { 
    public:
        explicit HudEndOfGameData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3009378484 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> mVictoryTransitionIn {};
        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> mDefeatTransitionIn {};
    };

    class YORDLE_EXPORT HudMessageDisplayData : public bin_class { 
    public:
        explicit HudMessageDisplayData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1269294773 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> TransitionIn {};
        float MessageDuration = 0.0;
        uint32_t messageCount = 0;
    };

    class YORDLE_EXPORT HudDamageDisplayData : public bin_class { 
    public:
        explicit HudDamageDisplayData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1645499771 || bin_class::is_type(type);
        }

        float xdfcea7db = 0.0;
    };

    class YORDLE_EXPORT HudFightRecapUIData : public bin_class { 
    public:
        explicit HudFightRecapUIData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3305259773 || bin_class::is_type(type);
        }

        std::string mBasicAttackIconTextureName {};
        std::string mUnknownDamageIconTextureName {};
        std::string mItemDamageIconTextureName {};
        std::string mRuneDamageIconTextureName {};
    };

    class YORDLE_EXPORT MinimapPingEffectDefinition : public bin_class { 
    public:
        explicit MinimapPingEffectDefinition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1803253536 || bin_class::is_type(type);
        }

        uint32_t alphaStart = 0;
        float alphaFadeSpeed = 0.0;
        float scaleStart = 0.0;
        float scaleSpeed = 0.0;
        float startDelay = 0.0;
        float life = 0.0;
        float onDeathFadeSpeed = 0.0;
        uint32_t repeatCount = 0;
        bool blendWithAlpha = false;
    };

    class YORDLE_EXPORT TextureAndColorData : public bin_class { 
    public:
        explicit TextureAndColorData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4009176784 || bin_class::is_type(type);
        }

        std::string textureFile {};
        std::array<uint8_t, 4> color {};
        std::string colorblindTextureFile {};
        std::optional<std::array<uint8_t, 4>> colorblindColor {};
    };

    class YORDLE_EXPORT MinimapPingEffectAndTextureData : public bin_class { 
    public:
        explicit MinimapPingEffectAndTextureData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2136503545 || bin_class::is_type(type);
        }

        bool mEnabled = false;
        std::shared_ptr<yordle::data::meta::MinimapPingEffectDefinition> mEffect {};
        std::shared_ptr<yordle::data::meta::TextureAndColorData> mDefault {};
        std::shared_ptr<yordle::data::meta::TextureAndColorData> mOrder {};
        std::shared_ptr<yordle::data::meta::TextureAndColorData> mChaos {};
    };

    class YORDLE_EXPORT MinimapPingTypeContainer : public bin_class { 
    public:
        explicit MinimapPingTypeContainer(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3823129339 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::MinimapPingEffectAndTextureData>> pingEffectList {};
    };

    class YORDLE_EXPORT MinimapPingData : public bin_class { 
    public:
        explicit MinimapPingData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2062125700 || bin_class::is_type(type);
        }

        std::map<uint8_t, float> mOMWPingRangeCutoffs {};
        std::set<std::shared_ptr<yordle::data::meta::MinimapPingTypeContainer>> mPings {};
    };

    class YORDLE_EXPORT ISecondaryResourceDisplayData : public bin_class { 
    public:
        explicit ISecondaryResourceDisplayData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1239842284 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT SecondaryResourceDisplayFractional : public ISecondaryResourceDisplayData { 
    public:
        explicit SecondaryResourceDisplayFractional(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2725259578 || ISecondaryResourceDisplayData::is_type(type);
        }

    };

    class YORDLE_EXPORT LoadingScreenRankedProperties : public bin_class { 
    public:
        explicit LoadingScreenRankedProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1700895677 || bin_class::is_type(type);
        }

        std::string mDescriptor {};
        uint8_t mDivision = 0;
    };

    class YORDLE_EXPORT LoadingScreenRankedData : public bin_class { 
    public:
        explicit LoadingScreenRankedData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2115654752 || bin_class::is_type(type);
        }

        std::map<std::string, std::shared_ptr<yordle::data::meta::LoadingScreenRankedProperties>> mRankedData {};
    };

    class YORDLE_EXPORT QualitySetting : public bin_class { 
    public:
        explicit QualitySetting(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1198542322 || bin_class::is_type(type);
        }

        std::string mName {};
        float x33eb38d = 0.0;
        uint32_t mFrameCap = 0;
        uint32_t mEnvironmentQuality = 0;
        uint32_t xa8d99737 = 0;
        uint32_t mEffectsQuality = 0;
        uint32_t mShadowQuality = 0;
        bool mFxAa = false;
    };

    class YORDLE_EXPORT IOptionItem : public bin_class { 
    public:
        explicit IOptionItem(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2037513198 || bin_class::is_type(type);
        }

        bool LiveUpdate = false;
        uint8_t ShowOnPlatform = 0;
        std::shared_ptr<yordle::data::meta::bin_class> Filter {};
    };

    class YORDLE_EXPORT IOptionTemplate : public bin_class { 
    public:
        explicit IOptionTemplate(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3154887987 || bin_class::is_type(type);
        }

        uint32_t boundsElement = 0;
    };

    class YORDLE_EXPORT OptionItemBorder : public IOptionItem { 
    public:
        explicit OptionItemBorder(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4083351021 || IOptionItem::is_type(type);
        }

        uint32_t _template = 0;
        std::set<std::shared_ptr<yordle::data::meta::IOptionItem>> items {};
    };

    class YORDLE_EXPORT OptionItemCheckbox : public IOptionItem { 
    public:
        explicit OptionItemCheckbox(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2624893466 || IOptionItem::is_type(type);
        }

        uint16_t option = 0;
        bool Negate = false;
        uint32_t _template = 0;
        std::string LabelTraKey {};
        std::string TooltipTraKey {};
    };

    class YORDLE_EXPORT OptionItemColumns : public IOptionItem { 
    public:
        explicit OptionItemColumns(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3265939366 || IOptionItem::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::IOptionItem>> ItemsEither {};
        std::set<std::shared_ptr<yordle::data::meta::IOptionItem>> itemsLeft {};
        std::set<std::shared_ptr<yordle::data::meta::IOptionItem>> itemsRight {};
    };

    class YORDLE_EXPORT OptionItemDropdownItem : public bin_class { 
    public:
        explicit OptionItemDropdownItem(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1128087393 || bin_class::is_type(type);
        }

        std::string TraKey {};
        int32_t value = 0;
    };

    class YORDLE_EXPORT OptionItemDropdown : public IOptionItem { 
    public:
        explicit OptionItemDropdown(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2993708970 || IOptionItem::is_type(type);
        }

        uint16_t option = 0;
        uint32_t _template = 0;
        std::string LabelTraKey {};
        std::string TooltipTraKey {};
        std::set<std::shared_ptr<yordle::data::meta::OptionItemDropdownItem>> items {};
    };

    class YORDLE_EXPORT IOptionItemFilter : public bin_class { 
    public:
        explicit IOptionItemFilter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3415079880 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT xa6743a7 : public IOptionItemFilter { 
    public:
        explicit xa6743a7(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 174539687 || IOptionItemFilter::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::IOptionItemFilter>> Filters {};
    };

    class YORDLE_EXPORT xcd391c99 : public IOptionItemFilter { 
    public:
        explicit xcd391c99(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3443072153 || IOptionItemFilter::is_type(type);
        }

        bool ShowInLolGame = false;
        bool ShowInLolReplay = false;
        bool ShowInTftGame = false;
        bool ShowInTftReplay = false;
    };

    class YORDLE_EXPORT x3e59e2ca : public IOptionItemFilter { 
    public:
        explicit x3e59e2ca(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1046078154 || IOptionItemFilter::is_type(type);
        }

        bool x7b98ffdd = false;
        bool x812748a2 = false;
        bool x37985b59 = false;
    };

    class YORDLE_EXPORT xd90e7018 : public IOptionItemFilter { 
    public:
        explicit xd90e7018(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3641602072 || IOptionItemFilter::is_type(type);
        }

        uint32_t Map = 0;
    };

    class YORDLE_EXPORT xee4d1304 : public IOptionItemFilter { 
    public:
        explicit xee4d1304(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3998028548 || IOptionItemFilter::is_type(type);
        }

        std::string Mutator {};
    };

    class YORDLE_EXPORT xf8026218 : public IOptionItemFilter { 
    public:
        explicit xf8026218(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4160905752 || IOptionItemFilter::is_type(type);
        }

    };

    class YORDLE_EXPORT xa4941383 : public IOptionItemFilter { 
    public:
        explicit xa4941383(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2761167747 || IOptionItemFilter::is_type(type);
        }

    };

    class YORDLE_EXPORT xc58386 : public IOptionItemFilter { 
    public:
        explicit xc58386(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 12944262 || IOptionItemFilter::is_type(type);
        }

        bool xc77c4866 = false;
    };

    class YORDLE_EXPORT xa6a54243 : public IOptionItemFilter { 
    public:
        explicit xa6a54243(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2795848259 || IOptionItemFilter::is_type(type);
        }

    };

    class YORDLE_EXPORT OptionItemGroup : public IOptionItem { 
    public:
        explicit OptionItemGroup(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3617299650 || IOptionItem::is_type(type);
        }

        uint32_t _template = 0;
        std::string LabelTraKey {};
        bool ExpandedByDefault = false;
        std::set<std::shared_ptr<yordle::data::meta::IOptionItem>> items {};
    };

    class YORDLE_EXPORT OptionItemHotkeys : public IOptionItem { 
    public:
        explicit OptionItemHotkeys(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2450342190 || IOptionItem::is_type(type);
        }

        uint32_t _template = 0;
    };

    class YORDLE_EXPORT OptionItemLabel : public IOptionItem { 
    public:
        explicit OptionItemLabel(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1981427363 || IOptionItem::is_type(type);
        }

        uint32_t _template = 0;
        std::string Label1TraKey {};
        std::string Label2TraKey {};
    };

    class YORDLE_EXPORT OptionItemResolutionDropdown : public OptionItemDropdown { 
    public:
        explicit OptionItemResolutionDropdown(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1259449812 || OptionItemDropdown::is_type(type);
        }

    };

    class YORDLE_EXPORT x55212361 : public bin_class { 
    public:
        explicit x55212361(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1428235105 || bin_class::is_type(type);
        }

        std::string Column0LabelTraKey {};
        std::string Column1LabelTraKey {};
    };

    class YORDLE_EXPORT x518d5fc0 : public bin_class { 
    public:
        explicit x518d5fc0(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1368219584 || bin_class::is_type(type);
        }

        std::string LabelTraKey {};
        std::string EventName {};
    };

    class YORDLE_EXPORT OptionItemSecondaryHotkeys1Column : public IOptionItem { 
    public:
        explicit OptionItemSecondaryHotkeys1Column(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3144650323 || IOptionItem::is_type(type);
        }

        uint32_t _template = 0;
        std::shared_ptr<yordle::data::meta::x55212361> Header {};
        std::set<std::shared_ptr<yordle::data::meta::x518d5fc0>> Rows {};
    };

    class YORDLE_EXPORT xea321356 : public bin_class { 
    public:
        explicit xea321356(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3929150294 || bin_class::is_type(type);
        }

        std::string Column0LabelTraKey {};
        std::string Column1LabelTraKey {};
        std::string Column2LabelTraKey {};
    };

    class YORDLE_EXPORT x430dd10d : public bin_class { 
    public:
        explicit x430dd10d(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1124978957 || bin_class::is_type(type);
        }

        std::string LabelTraKey {};
        std::string EventName {};
        std::shared_ptr<yordle::data::meta::IOptionItemFilter> Filter {};
    };

    class YORDLE_EXPORT OptionItemSecondaryHotkeys2Column : public IOptionItem { 
    public:
        explicit OptionItemSecondaryHotkeys2Column(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1788849882 || IOptionItem::is_type(type);
        }

        uint32_t _template = 0;
        std::shared_ptr<yordle::data::meta::xea321356> Header {};
        std::set<std::shared_ptr<yordle::data::meta::x430dd10d>> Rows {};
    };

    class YORDLE_EXPORT OptionItemSlider : public IOptionItem { 
    public:
        explicit OptionItemSlider(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1991153274 || IOptionItem::is_type(type);
        }

        uint32_t _template = 0;
        std::string LabelTraKey {};
        std::string TooltipTraKey {};
    };

    class YORDLE_EXPORT OptionItemSliderFloat : public OptionItemSlider { 
    public:
        explicit OptionItemSliderFloat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2846603080 || OptionItemSlider::is_type(type);
        }

        uint16_t option = 0;
        bool UpdateOnDrag = false;
        float scale = 0.0;
    };

    class YORDLE_EXPORT OptionItemSliderGraphicsQuality : public OptionItemSlider { 
    public:
        explicit OptionItemSliderGraphicsQuality(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1524323892 || OptionItemSlider::is_type(type);
        }

    };

    class YORDLE_EXPORT OptionItemSliderInt : public OptionItemSlider { 
    public:
        explicit OptionItemSliderInt(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 641011299 || OptionItemSlider::is_type(type);
        }

        uint16_t option = 0;
        uint32_t optionScale = 0;
    };

    class YORDLE_EXPORT OptionItemSliderVolume : public OptionItemSliderFloat { 
    public:
        explicit OptionItemSliderVolume(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3682643564 || OptionItemSliderFloat::is_type(type);
        }

        uint32_t MuteButtonTemplate = 0;
        uint16_t MuteOption = 0;
    };

    class YORDLE_EXPORT xf5324e2a : public OptionItemDropdown { 
    public:
        explicit xf5324e2a(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4113714730 || OptionItemDropdown::is_type(type);
        }

    };

    class YORDLE_EXPORT OptionsTab : public bin_class { 
    public:
        explicit OptionsTab(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2946448300 || bin_class::is_type(type);
        }

        std::string TabNameTraKey {};
        uint8_t ShowOn = 0;
        bool x9255c052 = false;
        std::shared_ptr<yordle::data::meta::IOptionItemFilter> Filter {};
        std::set<std::shared_ptr<yordle::data::meta::IOptionItem>> items {};
    };

    class YORDLE_EXPORT OptionTemplateBorder : public IOptionTemplate { 
    public:
        explicit OptionTemplateBorder(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3405043372 || IOptionTemplate::is_type(type);
        }

        uint32_t border = 0;
    };

    class YORDLE_EXPORT OptionTemplateCheckbox : public IOptionTemplate { 
    public:
        explicit OptionTemplateCheckbox(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2855504619 || IOptionTemplate::is_type(type);
        }

        uint32_t buttonDefinition = 0;
        uint32_t labelElement = 0;
    };

    class YORDLE_EXPORT OptionTemplateDropdown : public IOptionTemplate { 
    public:
        explicit OptionTemplateDropdown(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2120591967 || IOptionTemplate::is_type(type);
        }

        uint32_t labelElement = 0;
        uint32_t ComboBoxDefinition = 0;
    };

    class YORDLE_EXPORT OptionTemplateGroup : public IOptionTemplate { 
    public:
        explicit OptionTemplateGroup(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1734681201 || IOptionTemplate::is_type(type);
        }

        uint32_t ExpandButtonDefinition = 0;
        uint32_t labelElement = 0;
        uint32_t xe76606d7 = 0;
        float x999669b3 = 0.0;
    };

    class YORDLE_EXPORT OptionTemplateHotkeysLabel : public bin_class { 
    public:
        explicit OptionTemplateHotkeysLabel(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1432209297 || bin_class::is_type(type);
        }

        uint32_t Label = 0;
    };

    class YORDLE_EXPORT OptionTemplateHotkeysKey : public bin_class { 
    public:
        explicit OptionTemplateHotkeysKey(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3163647920 || bin_class::is_type(type);
        }

        std::string EventName {};
        std::string EventNameTraKey {};
        uint32_t position = 0;
    };

    class YORDLE_EXPORT OptionTemplateHotkeys : public IOptionTemplate { 
    public:
        explicit OptionTemplateHotkeys(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 704287001 || IOptionTemplate::is_type(type);
        }

        uint32_t HotkeyButtonDefinition = 0;
        uint32_t HotkeyButtonTextSmall = 0;
        uint32_t hotkeyModifierText = 0;
        uint32_t HotkeyQuickCastButtonDefinition = 0;
        uint32_t CastAllButtonDefinition = 0;
        uint32_t x2f11f1cb = 0;
        uint32_t xa8e4f979 = 0;
        std::set<std::shared_ptr<yordle::data::meta::OptionTemplateHotkeysLabel>> Labels {};
        std::set<std::shared_ptr<yordle::data::meta::OptionTemplateHotkeysKey>> keys {};
    };

    class YORDLE_EXPORT OptionTemplateLabel : public IOptionTemplate { 
    public:
        explicit OptionTemplateLabel(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 313035124 || IOptionTemplate::is_type(type);
        }

        uint32_t Label1 = 0;
        uint32_t Label2 = 0;
    };

    class YORDLE_EXPORT OptionTemplateMuteButton : public IOptionTemplate { 
    public:
        explicit OptionTemplateMuteButton(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4250471695 || IOptionTemplate::is_type(type);
        }

        uint32_t buttonDefinition = 0;
    };

    class YORDLE_EXPORT xceb70e5a : public bin_class { 
    public:
        explicit xceb70e5a(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3468103258 || bin_class::is_type(type);
        }

        uint32_t backgroundElement = 0;
        uint32_t TextElement = 0;
    };

    class YORDLE_EXPORT x354988a8 : public bin_class { 
    public:
        explicit x354988a8(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 894011560 || bin_class::is_type(type);
        }

        uint32_t buttonDefinition = 0;
    };

    class YORDLE_EXPORT OptionTemplateSecondaryHotkeys1Column : public IOptionTemplate { 
    public:
        explicit OptionTemplateSecondaryHotkeys1Column(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3369934580 || IOptionTemplate::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::xceb70e5a> x5b59b589 {};
        std::shared_ptr<yordle::data::meta::xceb70e5a> x5a59b3f6 {};
        std::shared_ptr<yordle::data::meta::xceb70e5a> xfd31cbcb {};
        std::shared_ptr<yordle::data::meta::x354988a8> x545758a8 {};
    };

    class YORDLE_EXPORT OptionTemplateSecondaryHotkeys2Column : public IOptionTemplate { 
    public:
        explicit OptionTemplateSecondaryHotkeys2Column(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 258305809 || IOptionTemplate::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::xceb70e5a> x5b59b589 {};
        std::shared_ptr<yordle::data::meta::xceb70e5a> x5a59b3f6 {};
        std::shared_ptr<yordle::data::meta::xceb70e5a> x5959b263 {};
        std::shared_ptr<yordle::data::meta::xceb70e5a> xfd31cbcb {};
        std::shared_ptr<yordle::data::meta::x354988a8> x545758a8 {};
        std::shared_ptr<yordle::data::meta::x354988a8> x57575d61 {};
    };

    class YORDLE_EXPORT OptionTemplateSlider : public IOptionTemplate { 
    public:
        explicit OptionTemplateSlider(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 517015619 || IOptionTemplate::is_type(type);
        }

        uint32_t labelElement = 0;
        uint32_t valueElement = 0;
        uint32_t x6a05258c = 0;
    };

    class YORDLE_EXPORT NamedIconData : public bin_class { 
    public:
        explicit NamedIconData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2945891227 || bin_class::is_type(type);
        }

        std::string name {};
        uint32_t Icon = 0;
    };

    class YORDLE_EXPORT ModeSelectButtonData : public bin_class { 
    public:
        explicit ModeSelectButtonData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3056512770 || bin_class::is_type(type);
        }

        int64_t queueId = 0;
        uint32_t buttonDefinition = 0;
    };

    class YORDLE_EXPORT ILoadoutFeatureDataBehavior : public bin_class { 
    public:
        explicit ILoadoutFeatureDataBehavior(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2293774348 || bin_class::is_type(type);
        }

        std::string DisplayNameTraKey {};
        uint32_t LoadoutType = 0;
        uint32_t x4e2c59d6 = 0;
        uint32_t IllustrationIcon = 0;
        uint32_t Region = 0;
        uint32_t buttonDefinition = 0;
    };

    class YORDLE_EXPORT QueueDisplayData : public bin_class { 
    public:
        explicit QueueDisplayData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1532902214 || bin_class::is_type(type);
        }

        int64_t queueId = 0;
        uint32_t xce96bffc = 0;
        uint32_t xf221c7d2 = 0;
        uint32_t x21eaf8b = 0;
        uint32_t IllustrationIconElement = 0;
        std::string DisplayNameTraKey {};
    };

    class YORDLE_EXPORT xfbd72d16 : public bin_class { 
    public:
        explicit xfbd72d16(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4225182998 || bin_class::is_type(type);
        }

        uint32_t x4d31ed46 = 0;
    };

    class YORDLE_EXPORT StoreCategoryButtonDefinition : public bin_class { 
    public:
        explicit StoreCategoryButtonDefinition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4069990911 || bin_class::is_type(type);
        }

        uint32_t category = 0;
        uint32_t buttonDefinition = 0;
    };

    class YORDLE_EXPORT ILoadoutInfoPanel : public bin_class { 
    public:
        explicit ILoadoutInfoPanel(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2136477118 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> ViewPaneDefinition {};
    };

    class YORDLE_EXPORT NotificationSettings : public bin_class { 
    public:
        explicit NotificationSettings(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2610640435 || bin_class::is_type(type);
        }

        std::string defaultSound {};
        std::map<uint8_t, std::string> x89667868 {};
    };

    class YORDLE_EXPORT QuestDefinition : public bin_class { 
    public:
        explicit QuestDefinition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2873675736 || bin_class::is_type(type);
        }

        std::string categoryTitleText {};
        uint32_t maxViewableQuests = 0;
        std::string recievedSoundPath {};
        std::string completedSoundPath {};
        std::string failedSoundPath {};
    };

    class YORDLE_EXPORT x46533086 : public bin_class { 
    public:
        explicit x46533086(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1179857030 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::QuestDefinition> primaryQuest {};
        std::shared_ptr<yordle::data::meta::QuestDefinition> secondaryQuest {};
        std::shared_ptr<yordle::data::meta::QuestDefinition> objectiveQuest {};
        std::shared_ptr<yordle::data::meta::QuestDefinition> x56647830 {};
        std::shared_ptr<yordle::data::meta::QuestDefinition> x6cee1705 {};
        std::shared_ptr<yordle::data::meta::QuestDefinition> scoreDisplayQuest {};
    };

    class YORDLE_EXPORT GeneralSettingsGroup : public bin_class { 
    public:
        explicit GeneralSettingsGroup(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4110481513 || bin_class::is_type(type);
        }

        uint32_t PromoteAccountButton = 0;
        uint32_t SignOutButton = 0;
        uint32_t restorePurchaseButton = 0;
    };

    class YORDLE_EXPORT SurrenderTypeData : public bin_class { 
    public:
        explicit SurrenderTypeData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 740737797 || bin_class::is_type(type);
        }

        float VoteTimeout = 0.0;
        float windowLength = 0.0;
        float startTime = 0.0;
        float percentageRequired = 0.0;
        float x3f72f07a = 0.0;
    };

    class YORDLE_EXPORT SurrenderData : public bin_class { 
    public:
        explicit SurrenderData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2687760845 || bin_class::is_type(type);
        }

        float x43f7599b = 0.0;
        float xe98993c = 0.0;
        float xcc805103 = 0.0;
        float x3afeacf3 = 0.0;
        std::map<uint8_t, std::shared_ptr<yordle::data::meta::SurrenderTypeData>> mTypeData {};
    };

    class YORDLE_EXPORT LoadScreenTip : public bin_class { 
    public:
        explicit LoadScreenTip(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1116466002 || bin_class::is_type(type);
        }

        uint16_t mId = 0;
        std::string mHeaderLocalizationKey {};
        std::optional<uint32_t> mMinimumSummonerLevel {};
        std::optional<uint32_t> mMaximumSummonerLevel {};
        std::string mLocalizationKey {};
    };

    class YORDLE_EXPORT LoadScreenTipSet : public bin_class { 
    public:
        explicit LoadScreenTipSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4146450274 || bin_class::is_type(type);
        }

        uint32_t mName = 0;
        std::set<uint32_t> mTips {};
    };

    class YORDLE_EXPORT LoadScreenTipConfiguration : public bin_class { 
    public:
        explicit LoadScreenTipConfiguration(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3188575920 || bin_class::is_type(type);
        }

        bool mShowInCustomGames = false;
        bool mShowPBITipsOnLoadingScreen = false;
        float mPBITipDurationOnLoadingScreen = 0.0;
        float mDurationInGame = 0.0;
    };

    class YORDLE_EXPORT x9e5aed77 : public bin_class { 
    public:
        explicit x9e5aed77(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2656759159 || bin_class::is_type(type);
        }

        int32_t x571a97a3 = 0;
        int32_t x88a45101 = 0;
        int32_t x1a8b3cc8 = 0;
        int32_t xbb9129ab = 0;
        int32_t xe2e4f9c2 = 0;
        int32_t x47bdbbe9 = 0;
    };

    class YORDLE_EXPORT ViewController : public bin_class { 
    public:
        explicit ViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3981513104 || bin_class::is_type(type);
        }

        uint32_t xb79c86ae = 0;
    };

    class YORDLE_EXPORT VoiceChatViewController : public ViewController { 
    public:
        explicit VoiceChatViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 917336570 || ViewController::is_type(type);
        }

        uint32_t PanelSceneHandle = 0;
        uint32_t Backdrop = 0;
        uint32_t errorText = 0;
        uint32_t x8c45eb46 = 0;
        uint32_t x788862bd = 0;
        std::shared_ptr<yordle::data::meta::bin_class> SelfSlot {};
        uint32_t PlayerGrid = 0;
        std::shared_ptr<yordle::data::meta::bin_class> PlayerSlotData {};
    };

    class YORDLE_EXPORT x86504cef : public bin_class { 
    public:
        explicit x86504cef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2253409519 || bin_class::is_type(type);
        }

        uint32_t Group = 0;
        uint32_t Portrait = 0;
        uint32_t Halo = 0;
        uint32_t NameText = 0;
        uint32_t VolumeText = 0;
        uint32_t VolumeSliderBar = 0;
        uint32_t MuteButton = 0;
    };

    class YORDLE_EXPORT VoiceChatViewSelfSlot : public bin_class { 
    public:
        explicit VoiceChatViewSelfSlot(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2730017800 || bin_class::is_type(type);
        }

        uint32_t Portrait = 0;
        uint32_t Halo = 0;
        uint32_t NameText = 0;
        uint32_t MicVolumeText = 0;
        uint32_t MicVolumeSliderBar = 0;
        uint32_t MuteButton = 0;
        uint32_t ConnectionButton = 0;
    };

    class YORDLE_EXPORT NeutralTimerSourceIconData : public bin_class { 
    public:
        explicit NeutralTimerSourceIconData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 230608261 || bin_class::is_type(type);
        }

        std::string mTooltipName {};
        std::string mIconName {};
    };

    class YORDLE_EXPORT NeutralTimerData : public bin_class { 
    public:
        explicit NeutralTimerData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 964506025 || bin_class::is_type(type);
        }

        std::string mTimerKeyName {};
        std::string mTooltip {};
        std::string mTooltipCampName {};
        std::string mTooltipRespawn {};
        std::string mTooltipChatNameOrder {};
        std::string mTooltipChatNameChaos {};
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::NeutralTimerSourceIconData>> mSourceIcons {};
    };

    class YORDLE_EXPORT NeutralTimers : public bin_class { 
    public:
        explicit NeutralTimers(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1283176254 || bin_class::is_type(type);
        }

        std::string mSceneName {};
        std::string xee974cae {};
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::NeutralTimerData>> mTimers {};
    };

    class YORDLE_EXPORT CommonUiTunables : public bin_class { 
    public:
        explicit CommonUiTunables(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2733481098 || bin_class::is_type(type);
        }

        float x472b866d = 0.0;
        uint8_t xb3f4a621 = 0;
    };

    class YORDLE_EXPORT ViewPaneDefinition : public bin_class { 
    public:
        explicit ViewPaneDefinition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2330109623 || bin_class::is_type(type);
        }

        uint32_t x6a05258c = 0;
        uint32_t dragRegionElement = 0;
        uint32_t scrollRegionElement = 0;
        uint32_t scissorRegionElement = 0;
        uint32_t scrollingScene = 0;
        uint8_t scrollDirection = 0;
        uint32_t objectPath = 0;
    };

    class YORDLE_EXPORT UIButtonState : public bin_class { 
    public:
        explicit UIButtonState(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2794431892 || bin_class::is_type(type);
        }

        std::set<uint32_t> displayElements {};
        uint32_t TextElement = 0;
    };

    class YORDLE_EXPORT UIButtonDefinition : public bin_class { 
    public:
        explicit UIButtonDefinition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1818785118 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::UIButtonState> defaultStateElements {};
        std::shared_ptr<yordle::data::meta::UIButtonState> InactiveStateElements {};
        std::shared_ptr<yordle::data::meta::UIButtonState> hoverStateElements {};
        std::shared_ptr<yordle::data::meta::UIButtonState> xad0f8882 {};
        std::shared_ptr<yordle::data::meta::UIButtonState> selectedStateElements {};
        std::shared_ptr<yordle::data::meta::UIButtonState> SelectedHoverStateElements {};
        std::shared_ptr<yordle::data::meta::UIButtonState> SelectedClickedStateElements {};
        uint32_t hitRegionElement = 0;
        uint32_t ClickReleaseParticleElement = 0;
        std::shared_ptr<yordle::data::meta::bin_class> soundEvents {};
        std::string ActiveTooltipTraKey {};
        std::string InactiveTooltipTraKey {};
        uint32_t objectPath = 0;
    };

    class YORDLE_EXPORT UIButtonAdditionalState : public bin_class { 
    public:
        explicit UIButtonAdditionalState(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1814739591 || bin_class::is_type(type);
        }

        std::set<uint32_t> displayElements {};
    };

    class YORDLE_EXPORT UIButtonAdditionalElements : public bin_class { 
    public:
        explicit UIButtonAdditionalElements(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2087717867 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::UIButtonAdditionalState> defaultStateElements {};
        std::shared_ptr<yordle::data::meta::UIButtonAdditionalState> InactiveStateElements {};
        std::shared_ptr<yordle::data::meta::UIButtonAdditionalState> hoverStateElements {};
        std::shared_ptr<yordle::data::meta::UIButtonAdditionalState> xad0f8882 {};
        std::shared_ptr<yordle::data::meta::UIButtonAdditionalState> selectedStateElements {};
        std::shared_ptr<yordle::data::meta::UIButtonAdditionalState> SelectedHoverStateElements {};
        std::shared_ptr<yordle::data::meta::UIButtonAdditionalState> SelectedClickedStateElements {};
    };

    class YORDLE_EXPORT x209b0277 : public bin_class { 
    public:
        explicit x209b0277(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 547029623 || bin_class::is_type(type);
        }

        std::string RolloverEvent {};
        std::string x210ea29e {};
        std::string MouseDownEvent {};
        std::string x452034c {};
        std::string MouseUpEvent {};
        std::string xb49ca145 {};
    };

    class YORDLE_EXPORT xe262e6be : public bin_class { 
    public:
        explicit xe262e6be(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3798132414 || bin_class::is_type(type);
        }

        std::string OnSelectionEvent {};
    };

    class YORDLE_EXPORT UiComboBoxDefinition : public bin_class { 
    public:
        explicit UiComboBoxDefinition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3941835837 || bin_class::is_type(type);
        }

        uint32_t buttonDefinition = 0;
        uint32_t xb2a3be3c = 0;
        uint32_t x3487222 = 0;
        uint32_t x9c4781a2 = 0;
        uint32_t x21c9d879 = 0;
        uint32_t x337b72d4 = 0;
        uint8_t xeb2b67e = 0;
        std::shared_ptr<yordle::data::meta::xe262e6be> soundEvents {};
        uint32_t objectPath = 0;
    };

    class YORDLE_EXPORT x2da50c9f : public bin_class { 
    public:
        explicit x2da50c9f(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 765791391 || bin_class::is_type(type);
        }

        std::string xd8073196 {};
        std::string x8f1a336d {};
        std::string x73dbef7a {};
    };

    class YORDLE_EXPORT xf2cfc48c : public bin_class { 
    public:
        explicit xf2cfc48c(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4073702540 || bin_class::is_type(type);
        }

        uint32_t BarBackdrop = 0;
        uint32_t BarFill = 0;
        uint32_t sliderIcon = 0;
    };

    class YORDLE_EXPORT x9d8138a6 : public bin_class { 
    public:
        explicit x9d8138a6(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2642491558 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::xf2cfc48c> DefaultState {};
        std::shared_ptr<yordle::data::meta::xf2cfc48c> SliderClickedState {};
        std::shared_ptr<yordle::data::meta::xf2cfc48c> x5b9cbd0 {};
        std::shared_ptr<yordle::data::meta::xf2cfc48c> xb4f0cbde {};
        uint32_t BarHitRegion = 0;
        uint32_t SliderHitRegion = 0;
        uint8_t direction = 0;
        std::shared_ptr<yordle::data::meta::x2da50c9f> soundEvents {};
        uint32_t objectPath = 0;
    };

    class YORDLE_EXPORT xd149dd3f : public bin_class { 
    public:
        explicit xd149dd3f(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3511278911 || bin_class::is_type(type);
        }

        int32_t FromSlotId = 0;
        int32_t ToSlotId = 0;
    };

    class YORDLE_EXPORT xb35ad9d8 : public bin_class { 
    public:
        explicit xb35ad9d8(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3009075672 || bin_class::is_type(type);
        }

        std::set<uint32_t> items {};
        uint32_t ItemsPerRow = 0;
        bool xd8bea346 = false;
        int32_t defaultIndex = 0;
        std::shared_ptr<yordle::data::meta::xd149dd3f> SwapData {};
    };

    class YORDLE_EXPORT xd20000f6 : public bin_class { 
    public:
        explicit xd20000f6(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3523215606 || bin_class::is_type(type);
        }

        uint32_t SceneData = 0;
        uint32_t PinButton = 0;
        std::shared_ptr<yordle::data::meta::xb35ad9d8> x434952b4 {};
    };

    class YORDLE_EXPORT xef05ba42 : public bin_class { 
    public:
        explicit xef05ba42(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4010129986 || bin_class::is_type(type);
        }

        uint32_t ItemIcon = 0;
        uint32_t FrameIcon = 0;
        uint32_t MythicFrameIcon = 0;
        uint32_t HoverFrameIcon = 0;
        uint32_t x5b96b3bd = 0;
        uint32_t HoverIcon = 0;
        uint32_t SelectedIcon = 0;
        uint32_t UnpurchaseableOverlay = 0;
        uint32_t PurchasedOverlay = 0;
        uint32_t LockedIcon = 0;
        uint32_t LockedHoverIcon = 0;
        uint32_t RecentlyChangedIcon = 0;
        uint32_t PopularIcon = 0;
        uint32_t CostText = 0;
        uint32_t CostTextUnpurchaseable = 0;
        uint32_t CostTextSelected = 0;
        uint32_t NameText = 0;
        uint32_t HitRegion = 0;
        uint32_t OffsetRegion = 0;
        uint32_t SelectedVfx = 0;
        uint32_t x987dd59e = 0;
        uint32_t MythicPurchaseableVfx = 0;
        uint32_t MythicPurchasedVfx = 0;
    };

    class YORDLE_EXPORT x9205b275 : public xef05ba42 { 
    public:
        explicit x9205b275(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2449846901 || xef05ba42::is_type(type);
        }

        uint32_t CardDefault = 0;
        uint32_t CardHoverMythic = 0;
        uint32_t CardHoverNonMythic = 0;
        uint32_t CardSelectedMythic = 0;
        uint32_t CardSelectedNonMythic = 0;
        uint32_t BriefText = 0;
        uint32_t BriefTextBackdrop = 0;
        uint32_t AdviceIconDefault = 0;
        uint32_t x9c2a9d4 = 0;
        uint32_t xc68c22cf = 0;
        uint32_t AdviceLabel = 0;
        uint32_t AdviceCharIcon0 = 0;
        uint32_t AdviceCharIcon1 = 0;
        uint32_t CardHoverMythicVfx = 0;
        uint32_t CardHoverNonMythicVfx = 0;
        uint32_t CardRefreshMythicVfx = 0;
        uint32_t CardRefreshNonMythicVfx = 0;
        uint32_t CardSelectedMythicVfx = 0;
        uint32_t CardSelectedNonMythicVfx = 0;
        uint32_t AdviceEmptyIconDefault = 0;
        uint32_t x59fbbd19 = 0;
        uint32_t x9566584e = 0;
        uint32_t AdviceEmptyText = 0;
        uint32_t AdviceEmptyTextHover = 0;
        uint32_t AdviceCharBorder0 = 0;
        uint32_t AdviceCharBorderHover0 = 0;
        uint32_t AdviceCharBorder1 = 0;
        uint32_t AdviceCharBorderHover1 = 0;
        uint32_t PlusIcon = 0;
        uint32_t BundleItemIcon = 0;
        uint32_t BundleStackText = 0;
        uint32_t BundleItemFrameIcon = 0;
        uint32_t BundleItemFrameHoverIcon = 0;
    };

    class YORDLE_EXPORT x38691790 : public bin_class { 
    public:
        explicit x38691790(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 946411408 || bin_class::is_type(type);
        }

        std::set<uint8_t> x837fcf93 {};
        std::string groupName {};
    };

    class YORDLE_EXPORT StatFilterDefinition : public bin_class { 
    public:
        explicit StatFilterDefinition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1403141140 || bin_class::is_type(type);
        }

        uint32_t buttonDefinition = 0;
        std::set<uint32_t> MatchingCategories {};
    };

    class YORDLE_EXPORT x77595aa9 : public bin_class { 
    public:
        explicit x77595aa9(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2002344617 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::StatFilterDefinition> PhysicalDamage {};
        std::shared_ptr<yordle::data::meta::StatFilterDefinition> CriticalStrike {};
        std::shared_ptr<yordle::data::meta::StatFilterDefinition> attackSpeed {};
        std::shared_ptr<yordle::data::meta::StatFilterDefinition> OnHit {};
        std::shared_ptr<yordle::data::meta::StatFilterDefinition> ArmorPenetration {};
        std::shared_ptr<yordle::data::meta::StatFilterDefinition> abilityPower {};
        std::shared_ptr<yordle::data::meta::StatFilterDefinition> mana {};
        std::shared_ptr<yordle::data::meta::StatFilterDefinition> MagicPenetration {};
        std::shared_ptr<yordle::data::meta::StatFilterDefinition> Health {};
        std::shared_ptr<yordle::data::meta::StatFilterDefinition> Armor {};
        std::shared_ptr<yordle::data::meta::StatFilterDefinition> MagicResist {};
        std::shared_ptr<yordle::data::meta::StatFilterDefinition> abilityHaste {};
        std::shared_ptr<yordle::data::meta::StatFilterDefinition> MoveSpeed {};
        std::shared_ptr<yordle::data::meta::StatFilterDefinition> xd628825f {};
        std::shared_ptr<yordle::data::meta::StatFilterDefinition> DisableStatFilters {};
    };

    class YORDLE_EXPORT HudItemShopData : public bin_class { 
    public:
        explicit HudItemShopData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2696268697 || bin_class::is_type(type);
        }

        uint32_t TabButtonDefinition = 0;
        uint32_t CloseButtonDefinition = 0;
        uint32_t PurchaseButtonDefinition = 0;
        uint32_t SellButtonDefinition = 0;
        uint32_t UndoButtonDefinition = 0;
        uint32_t x616b3a84 = 0;
        uint32_t x1ee195a0 = 0;
        uint32_t xdcf2bbe3 = 0;
        uint32_t xaa05f252 = 0;
        uint32_t x6d532c7a = 0;
        uint32_t x655c70a4 = 0;
        uint32_t xf1b77de6 = 0;
        uint32_t xd2202861 = 0;
        uint32_t x6ff1fabe = 0;
        uint32_t xa1f85097 = 0;
        uint32_t x77595aa9 = 0;
        std::shared_ptr<yordle::data::meta::ViewPaneDefinition> x71d17542 {};
        std::shared_ptr<yordle::data::meta::ViewPaneDefinition> xce14c25 {};
        std::shared_ptr<yordle::data::meta::ViewPaneDefinition> xb3e9d346 {};
        std::shared_ptr<yordle::data::meta::ViewPaneDefinition> SearchViewPaneDefinition {};
        uint32_t AllItemsHeaderRegion = 0;
        uint32_t AllItemsItemRegion = 0;
        uint32_t ItemSetsHeaderRegion = 0;
        uint32_t ItemSetsItemRegion = 0;
        uint32_t AllItemsHeaderText = 0;
        uint32_t xf481f566 = 0;
        uint32_t x4823f71d = 0;
        std::set<std::shared_ptr<yordle::data::meta::x38691790>> x79a37750 {};
        std::shared_ptr<yordle::data::meta::xd20000f6> BootsPanelDefinition {};
        std::shared_ptr<yordle::data::meta::xd20000f6> ConsumablesPanelDefinition {};
        std::shared_ptr<yordle::data::meta::xd20000f6> InventoryPanelDefinition {};
        std::set<uint32_t> xe00be811 {};
        float xf8310aa = 0.0;
        uint32_t BuildsIntoIconDefinition = 0;
        uint32_t BuildTreeIconDefinition = 0;
        uint32_t QuickBuyIconDefinition = 0;
        uint32_t InventoryIconDefinition = 0;
        uint32_t AllItemsIconDefinition = 0;
        uint32_t ItemSetsIconDefinition = 0;
        uint32_t SearchIconDefinition = 0;
        uint32_t x494a4b42 = 0;
        uint32_t CommonlyBuiltIconDefinition = 0;
        uint32_t x5ab9b659 = 0;
        uint32_t xf8e1342c = 0;
        uint32_t x69988db6 = 0;
        uint32_t ItemDetailsScene = 0;
        uint32_t xaa352f81 = 0;
        std::string xd6f8b1fa {};
    };

    class YORDLE_EXPORT IHudLoadingScreenWidget : public bin_class { 
    public:
        explicit IHudLoadingScreenWidget(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1936278667 || bin_class::is_type(type);
        }

        std::string mSceneName {};
    };

    class YORDLE_EXPORT HudLoadingScreenCarouselData : public bin_class { 
    public:
        explicit HudLoadingScreenCarouselData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 470840304 || bin_class::is_type(type);
        }

        std::string image {};
        uint8_t mTipType = 0;
    };

    class YORDLE_EXPORT HudLoadingScreenWidgetCarousel : public IHudLoadingScreenWidget { 
    public:
        explicit HudLoadingScreenWidgetCarousel(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2709250460 || IHudLoadingScreenWidget::is_type(type);
        }

        uint8_t x7b1f4fc8 = 0;
        uint32_t mCarouselData = 0;
    };

    class YORDLE_EXPORT HudLoadingScreenWidgetClash : public IHudLoadingScreenWidget { 
    public:
        explicit HudLoadingScreenWidgetClash(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1107815263 || IHudLoadingScreenWidget::is_type(type);
        }

    };

    class YORDLE_EXPORT HudLoadingScreenWidgetPing : public IHudLoadingScreenWidget { 
    public:
        explicit HudLoadingScreenWidgetPing(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3421140098 || IHudLoadingScreenWidget::is_type(type);
        }

        uint32_t mDebugPing = 0;
        uint32_t mPingThresholdGreen = 0;
        uint32_t mPingThresholdYellow = 0;
        uint32_t mPingThresholdOrange = 0;
        uint32_t mPingThresholdRed = 0;
    };

    class YORDLE_EXPORT HudLoadingScreenWidgetPlayers : public IHudLoadingScreenWidget { 
    public:
        explicit HudLoadingScreenWidgetPlayers(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3666540112 || IHudLoadingScreenWidget::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mCardConfig {};
    };

    class YORDLE_EXPORT HudLoadingScreenWidgetProgressBar : public IHudLoadingScreenWidget { 
    public:
        explicit HudLoadingScreenWidgetProgressBar(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 428271402 || IHudLoadingScreenWidget::is_type(type);
        }

    };

    class YORDLE_EXPORT HudLoadingScreenWidgetTutorial : public IHudLoadingScreenWidget { 
    public:
        explicit HudLoadingScreenWidgetTutorial(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4123015996 || IHudLoadingScreenWidget::is_type(type);
        }

    };

    class YORDLE_EXPORT PlayerCardWidgetConfig : public bin_class { 
    public:
        explicit PlayerCardWidgetConfig(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1376467180 || bin_class::is_type(type);
        }

        bool mTeamBased = false;
        uint8_t mCardType = 0;
        uint32_t x7b9b52c3 = 0;
    };

    class YORDLE_EXPORT x97599ad3 : public bin_class { 
    public:
        explicit x97599ad3(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2539231955 || bin_class::is_type(type);
        }

        uint32_t x634c549e = 0;
        uint32_t x299164e2 = 0;
    };

    class YORDLE_EXPORT HudReplaySliderIconData : public bin_class { 
    public:
        explicit HudReplaySliderIconData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3703833425 || bin_class::is_type(type);
        }

        uint32_t mType = 0;
        uint8_t mTooltipStyle = 0;
        std::string mElementName {};
        float mElementSpacer = 0.0;
        float mElementAlphaDefault = 0.0;
        float mElementAlphaSelected = 0.0;
        float mElementAlphaUnselected = 0.0;
        std::set<std::string> mTooltipIconNames {};
    };

    class YORDLE_EXPORT HudReplaySliderData : public bin_class { 
    public:
        explicit HudReplaySliderData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 220532968 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::HudReplaySliderIconData>> mIconDataPriorityList {};
        float mTooltipEventWindow = 0.0;
    };

    class YORDLE_EXPORT WadFileDescriptor : public bin_class { 
    public:
        explicit WadFileDescriptor(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2741896024 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT BaseRigPoseModifierData : public bin_class { 
    public:
        explicit BaseRigPoseModifierData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3000850570 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT ConformToPathRigPoseModifierData : public BaseRigPoseModifierData { 
    public:
        explicit ConformToPathRigPoseModifierData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3456866963 || BaseRigPoseModifierData::is_type(type);
        }

        uint32_t mStartingJointName = 0;
        uint32_t mEndingJointName = 0;
        uint32_t mDefaultMaskName = 0;
        float mMaxBoneAngle = 0.0;
        float mDampingValue = 0.0;
        float mVelMultiplier = 0.0;
        float mFrequency = 0.0;
    };

    class YORDLE_EXPORT JointSnapRigPoseModifilerData : public BaseRigPoseModifierData { 
    public:
        explicit JointSnapRigPoseModifilerData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3010810975 || BaseRigPoseModifierData::is_type(type);
        }

    };

    class YORDLE_EXPORT LockRootOrientationRigPoseModifierData : public BaseRigPoseModifierData { 
    public:
        explicit LockRootOrientationRigPoseModifierData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 847419898 || BaseRigPoseModifierData::is_type(type);
        }

    };

    class YORDLE_EXPORT SyncedAnimationRigPoseModifierData : public BaseRigPoseModifierData { 
    public:
        explicit SyncedAnimationRigPoseModifierData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1085106335 || BaseRigPoseModifierData::is_type(type);
        }

    };

    class YORDLE_EXPORT VertexAnimationRigPoseModifierData : public BaseRigPoseModifierData { 
    public:
        explicit VertexAnimationRigPoseModifierData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3410773763 || BaseRigPoseModifierData::is_type(type);
        }

        float mMaxSpeed = 0.0;
        float mStiffness = 0.0;
        float mMass = 0.0;
        float mDamping = 0.0;
    };

    class YORDLE_EXPORT AnimationGraphData : public bin_class { 
    public:
        explicit AnimationGraphData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4126869447 || bin_class::is_type(type);
        }

        bool mUseCascadeBlend = false;
        float mCascadeBlendValue = 0.0;
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::bin_class>> mClipDataMap {};
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::bin_class>> mMaskDataMap {};
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::bin_class>> mTrackDataMap {};
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::bin_class>> mSyncGroupDataMap {};
        std::map<uint64_t, std::shared_ptr<yordle::data::meta::bin_class>> mBlendDataTable {};
    };

    class YORDLE_EXPORT AnimationResourceData : public bin_class { 
    public:
        explicit AnimationResourceData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2588617117 || bin_class::is_type(type);
        }

        std::string mAnimationFilePath {};
    };

    class YORDLE_EXPORT MaskData : public bin_class { 
    public:
        explicit MaskData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 725360953 || bin_class::is_type(type);
        }

        uint32_t mId = 0;
        std::set<float> mWeightList {};
    };

    class YORDLE_EXPORT Joint : public bin_class { 
    public:
        explicit Joint(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2930641015 || bin_class::is_type(type);
        }

        uint16_t mIndex = 0;
        std::string mName {};
        uint32_t mNameHash = 0;
        uint16_t mFlags = 0;
        float mRadius = 0.0;
        int16_t mParentIndex = 0;
    };

    class YORDLE_EXPORT RigResource : public bin_class { 
    public:
        explicit RigResource(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1426469241 || bin_class::is_type(type);
        }

        std::string mName {};
        std::string mAssetName {};
        uint16_t mFlags = 0;
        std::set<std::shared_ptr<yordle::data::meta::Joint>> mJointList {};
        std::set<uint16_t> mShaderJointList {};
    };

    class YORDLE_EXPORT SyncGroupData : public bin_class { 
    public:
        explicit SyncGroupData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1718266157 || bin_class::is_type(type);
        }

        uint32_t mType = 0;
    };

    class YORDLE_EXPORT TrackData : public bin_class { 
    public:
        explicit TrackData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2552904996 || bin_class::is_type(type);
        }

        uint32_t mPriority = 0;
        float mBlendWeight = 0.0;
        uint32_t mBlendMode = 0;
    };

    class YORDLE_EXPORT UpdaterData : public bin_class { 
    public:
        explicit UpdaterData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3953106978 || bin_class::is_type(type);
        }

        uint32_t mInputType = 0;
        uint32_t mOutputType = 0;
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> mValueProcessorDataList {};
    };

    class YORDLE_EXPORT UpdaterResourceData : public bin_class { 
    public:
        explicit UpdaterResourceData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1426466346 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::UpdaterData>> mUpdaterDataList {};
    };

    class YORDLE_EXPORT ConditionFloatPairData : public bin_class { 
    public:
        explicit ConditionFloatPairData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1675919456 || bin_class::is_type(type);
        }

        uint32_t mClipName = 0;
        float mValue = 0.0;
        float mHoldAnimationToHigher = 0.0;
        float mHoldAnimationToLower = 0.0;
    };

    class YORDLE_EXPORT ParametricPairData : public bin_class { 
    public:
        explicit ParametricPairData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3371956895 || bin_class::is_type(type);
        }

        uint32_t mClipName = 0;
        float mValue = 0.0;
    };

    class YORDLE_EXPORT SelectorPairData : public bin_class { 
    public:
        explicit SelectorPairData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1837663416 || bin_class::is_type(type);
        }

        uint32_t mClipName = 0;
        float mProbability = 0.0;
    };

    class YORDLE_EXPORT BaseBlendData : public bin_class { 
    public:
        explicit BaseBlendData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3172694155 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT BaseEventData : public bin_class { 
    public:
        explicit BaseEventData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2039250216 || bin_class::is_type(type);
        }

        uint32_t mName = 0;
        float mStartFrame = 0.0;
        float mEndFrame = 0.0;
        bool mIsSelfOnly = false;
        bool mFireIfAnimationEndsEarly = false;
    };

    class YORDLE_EXPORT ClipBaseData : public bin_class { 
    public:
        explicit ClipBaseData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3917866950 || bin_class::is_type(type);
        }

        uint32_t mFlags = 0;
        std::set<uint32_t> mAnimationInterruptionGroupNames {};
    };

    class YORDLE_EXPORT ConformToPathEventData : public BaseEventData { 
    public:
        explicit ConformToPathEventData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2184673821 || BaseEventData::is_type(type);
        }

        uint32_t mMaskDataName = 0;
        float mBlendInTime = 0.0;
        float mBlendOutTime = 0.0;
    };

    class YORDLE_EXPORT EnableLookAtEventData : public BaseEventData { 
    public:
        explicit EnableLookAtEventData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 126228632 || BaseEventData::is_type(type);
        }

        bool mEnableLookAt = false;
        bool mLockCurrentValues = false;
    };

    class YORDLE_EXPORT FaceCameraEventData : public BaseEventData { 
    public:
        explicit FaceCameraEventData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1991855177 || BaseEventData::is_type(type);
        }

        float xb9cfc1ab = 0.0;
        float BlendInTime = 0.0;
        float BlendOutTime = 0.0;
    };

    class YORDLE_EXPORT FadeEventData : public BaseEventData { 
    public:
        explicit FadeEventData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1280605585 || BaseEventData::is_type(type);
        }

        float mTimeToFade = 0.0;
        float mTargetAlpha = 0.0;
    };

    class YORDLE_EXPORT IdleParticlesVisibilityEventData : public BaseEventData { 
    public:
        explicit IdleParticlesVisibilityEventData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2009563166 || BaseEventData::is_type(type);
        }

        bool mShow = false;
    };

    class YORDLE_EXPORT JointSnapEventData : public BaseEventData { 
    public:
        explicit JointSnapEventData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3049371309 || BaseEventData::is_type(type);
        }

        uint32_t mJointNameToOverride = 0;
        uint32_t mJointNameToSnapTo = 0;
    };

    class YORDLE_EXPORT LockRootOrientationEventData : public BaseEventData { 
    public:
        explicit LockRootOrientationEventData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3239264152 || BaseEventData::is_type(type);
        }

    };

    class YORDLE_EXPORT ParticleEventDataPair : public bin_class { 
    public:
        explicit ParticleEventDataPair(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1574343673 || bin_class::is_type(type);
        }

        uint32_t mBoneName = 0;
        uint32_t mTargetBoneName = 0;
    };

    class YORDLE_EXPORT ParticleEventData : public BaseEventData { 
    public:
        explicit ParticleEventData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 88265757 || BaseEventData::is_type(type);
        }

        uint32_t mEffectKey = 0;
        uint32_t mEnemyEffectKey = 0;
        std::string mEffectName {};
        std::set<std::shared_ptr<yordle::data::meta::ParticleEventDataPair>> mParticleEventDataPairList {};
        bool mIsLoop = false;
        bool mIsKillEvent = false;
        bool mIsDetachable = false;
        bool mScalePlaySpeedWithAnimation = false;
        bool xa3826203 = false;
    };

    class YORDLE_EXPORT SoundEventData : public BaseEventData { 
    public:
        explicit SoundEventData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2622906420 || BaseEventData::is_type(type);
        }

        std::string mSoundName {};
        bool mIsLoop = false;
        bool mIsKillEvent = false;
        bool x67227d6 = false;
    };

    class YORDLE_EXPORT StopAnimationEventData : public BaseEventData { 
    public:
        explicit StopAnimationEventData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4107335487 || BaseEventData::is_type(type);
        }

        uint32_t mStopAnimationName = 0;
    };

    class YORDLE_EXPORT SubmeshVisibilityEventData : public BaseEventData { 
    public:
        explicit SubmeshVisibilityEventData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3170201200 || BaseEventData::is_type(type);
        }

        std::set<uint32_t> mShowSubmeshList {};
        std::set<uint32_t> mHideSubmeshList {};
    };

    class YORDLE_EXPORT SyncedAnimationEventData : public BaseEventData { 
    public:
        explicit SyncedAnimationEventData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2141811217 || BaseEventData::is_type(type);
        }

        float mLerpTime = 0.0;
    };

    class YORDLE_EXPORT TimeBlendData : public BaseBlendData { 
    public:
        explicit TimeBlendData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1031735279 || BaseBlendData::is_type(type);
        }

        float mTime = 0.0;
    };

    class YORDLE_EXPORT TransitionClipBlendData : public BaseBlendData { 
    public:
        explicit TransitionClipBlendData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 371240319 || BaseBlendData::is_type(type);
        }

        uint32_t mClipName = 0;
    };

    class YORDLE_EXPORT ValueProcessorData : public bin_class { 
    public:
        explicit ValueProcessorData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3487022 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT EngineFeatureToggles : public bin_class { 
    public:
        explicit EngineFeatureToggles(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2790085136 || bin_class::is_type(type);
        }

        bool x5fe6e49 = false;
        bool xcdbbc6e1 = false;
    };

    class YORDLE_EXPORT MapComponent : public bin_class { 
    public:
        explicit MapComponent(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 72326764 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT MapContainer : public bin_class { 
    public:
        explicit MapContainer(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3723018516 || bin_class::is_type(type);
        }

        std::string mapPath {};
        std::set<std::shared_ptr<yordle::data::meta::MapComponent>> components {};
        std::array<float, 2> boundsMin {};
        std::array<float, 2> boundsMax {};
        float lowestWalkableHeight = 0.0;
        float xf010defb = 0.0;
        std::map<uint32_t, uint32_t> chunks {};
    };

    class YORDLE_EXPORT MapContainsOtherMaps : public MapComponent { 
    public:
        explicit MapContainsOtherMaps(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1681734441 || MapComponent::is_type(type);
        }

        uint32_t MapContainerLocations = 0;
    };

    class YORDLE_EXPORT LaneData : public bin_class { 
    public:
        explicit LaneData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 243000503 || bin_class::is_type(type);
        }

        std::set<std::string> mNavigationPoints {};
        std::set<std::string> mContainedRegions {};
    };

    class YORDLE_EXPORT MapLaneComponent : public MapComponent { 
    public:
        explicit MapLaneComponent(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2774165054 || MapComponent::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::LaneData>> mLanes {};
    };

    class YORDLE_EXPORT MapPathSegment : public bin_class { 
    public:
        explicit MapPathSegment(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2603925163 || bin_class::is_type(type);
        }

        std::array<float, 3> EndPosition {};
    };

    class YORDLE_EXPORT MapPathLineSegment : public MapPathSegment { 
    public:
        explicit MapPathLineSegment(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2574492633 || MapPathSegment::is_type(type);
        }

    };

    class YORDLE_EXPORT MapPathCurveSegment : public MapPathSegment { 
    public:
        explicit MapPathCurveSegment(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1861095566 || MapPathSegment::is_type(type);
        }

        std::array<float, 3> ControlPoint1 {};
        std::array<float, 3> ControlPoint2 {};
    };

    class YORDLE_EXPORT MapNavGrid : public MapComponent { 
    public:
        explicit MapNavGrid(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 477805166 || MapComponent::is_type(type);
        }

        std::string NavGridPath {};
    };

    class YORDLE_EXPORT MapPlaceable : public bin_class { 
    public:
        explicit MapPlaceable(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1502315240 || bin_class::is_type(type);
        }

        std::array<float, 16> transform {};
        std::string name {};
        uint8_t mVisibilityFlags = 0;
    };

    class YORDLE_EXPORT GenericMapPlaceable : public MapPlaceable { 
    public:
        explicit GenericMapPlaceable(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2347595275 || MapPlaceable::is_type(type);
        }

    };

    class YORDLE_EXPORT MapPlaceableContainer : public bin_class { 
    public:
        explicit MapPlaceableContainer(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2992376383 || bin_class::is_type(type);
        }

        std::map<uint32_t, std::shared_ptr<yordle::data::meta::MapPlaceable>> items {};
    };

    class YORDLE_EXPORT MapPrefabInstance : public MapPlaceable { 
    public:
        explicit MapPrefabInstance(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1173599148 || MapPlaceable::is_type(type);
        }

        uint32_t prefabDefinition = 0;
    };

    class YORDLE_EXPORT MapThemeMusic : public MapComponent { 
    public:
        explicit MapThemeMusic(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3750744125 || MapComponent::is_type(type);
        }

        std::string LocalThemeMusic {};
        std::string ThemeMusicTransitionEvent {};
    };

    class YORDLE_EXPORT RegionsThatAllowContent : public bin_class { 
    public:
        explicit RegionsThatAllowContent(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2486262273 || bin_class::is_type(type);
        }

        std::set<uint32_t> mRegionList {};
    };

    class YORDLE_EXPORT RegionSettings : public bin_class { 
    public:
        explicit RegionSettings(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 585068320 || bin_class::is_type(type);
        }

        std::map<uint32_t, std::shared_ptr<yordle::data::meta::RegionsThatAllowContent>> mContentTypeAllowedSettings {};
    };

    class YORDLE_EXPORT FontLocaleType : public bin_class { 
    public:
        explicit FontLocaleType(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2600090346 || bin_class::is_type(type);
        }

        std::string localeName {};
        std::string mFontFilePath {};
        std::string FontFilePathBold {};
        std::string FontFilePathItalics {};
    };

    class YORDLE_EXPORT FontResolution : public bin_class { 
    public:
        explicit FontResolution(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3120352850 || bin_class::is_type(type);
        }

        uint32_t screenHeight = 0;
        uint32_t fontSize = 0;
        uint32_t outlineSize = 0;
        int32_t shadowDepthX = 0;
        int32_t shadowDepthY = 0;
    };

    class YORDLE_EXPORT FontLocaleResolutions : public bin_class { 
    public:
        explicit FontLocaleResolutions(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3919875225 || bin_class::is_type(type);
        }

        std::string localeName {};
        std::set<std::shared_ptr<yordle::data::meta::FontResolution>> resolutions {};
    };

    class YORDLE_EXPORT FontType : public bin_class { 
    public:
        explicit FontType(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 766729624 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::FontLocaleType>> localeTypes {};
    };

    class YORDLE_EXPORT FontResolutionData : public bin_class { 
    public:
        explicit FontResolutionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 231582978 || bin_class::is_type(type);
        }

        bool autoScale = false;
        std::set<std::shared_ptr<yordle::data::meta::FontLocaleResolutions>> localeResolutions {};
    };

    class YORDLE_EXPORT GameFontDescription : public bin_class { 
    public:
        explicit GameFontDescription(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3812866480 || bin_class::is_type(type);
        }

        std::string name {};
        uint32_t typeData = 0;
        uint32_t resolutionData = 0;
        std::array<uint8_t, 4> color {};
        std::array<uint8_t, 4> outlineColor {};
        std::array<uint8_t, 4> shadowColor {};
        std::array<uint8_t, 4> glowColor {};
        std::array<uint8_t, 4> x3cc9ac15 {};
        std::optional<std::array<uint8_t, 4>> colorblindColor {};
        std::optional<std::array<uint8_t, 4>> colorblindOutlineColor {};
        std::optional<std::array<uint8_t, 4>> colorblindShadowColor {};
        std::optional<std::array<uint8_t, 4>> colorblindGlowColor {};
        std::optional<std::array<uint8_t, 4>> xc2008b7b {};
        std::string fillTextureName {};
    };

    class YORDLE_EXPORT CSSStyle : public bin_class { 
    public:
        explicit CSSStyle(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1461391717 || bin_class::is_type(type);
        }

        std::optional<std::array<uint8_t, 4>> color {};
        std::optional<bool> bold {};
        std::optional<bool> italics {};
        std::optional<bool> underline {};
    };

    class YORDLE_EXPORT CSSIcon : public bin_class { 
    public:
        explicit CSSIcon(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3991255873 || bin_class::is_type(type);
        }

        std::array<float, 2> xy {};
        std::array<float, 2> wh {};
        float x81e208ef = 0.0;
    };

    class YORDLE_EXPORT CSSSheet : public bin_class { 
    public:
        explicit CSSSheet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3173404643 || bin_class::is_type(type);
        }

        std::map<std::string, std::shared_ptr<yordle::data::meta::CSSStyle>> styles {};
        std::string iconTexture {};
        std::map<std::string, std::shared_ptr<yordle::data::meta::CSSIcon>> icons {};
    };

    class YORDLE_EXPORT TooltipFormat : public bin_class { 
    public:
        explicit TooltipFormat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2994559891 || bin_class::is_type(type);
        }

        std::string mObjectName {};
        std::map<std::string, std::string> mInputLocKeysWithDefaults {};
        std::set<std::string> mListNames {};
        std::map<std::string, std::string> mListTypeChoices {};
        std::map<uint32_t, std::string> mListStyles {};
        bool mUsesListValues = false;
        std::string mListValueSeparator {};
        std::string mListGridPrefix {};
        std::string mListGridPostfix {};
        std::string mListGridSeparator {};
        std::map<std::string, std::string> mOutputStrings {};
    };

    class YORDLE_EXPORT TooltipInstanceListElement : public bin_class { 
    public:
        explicit TooltipInstanceListElement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2585474309 || bin_class::is_type(type);
        }

        std::string type {};
        int32_t typeIndex = 0;
        float multiplier = 0.0;
        std::string nameOverride {};
        uint32_t Style = 0;
    };

    class YORDLE_EXPORT TooltipInstanceList : public bin_class { 
    public:
        explicit TooltipInstanceList(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4214485747 || bin_class::is_type(type);
        }

        uint32_t levelCount = 0;
        std::set<std::shared_ptr<yordle::data::meta::TooltipInstanceListElement>> elements {};
    };

    class YORDLE_EXPORT TooltipInstance : public bin_class { 
    public:
        explicit TooltipInstance(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2250161003 || bin_class::is_type(type);
        }

        std::string mObjectName {};
        uint32_t mFormat = 0;
        std::map<std::string, std::string> mLocKeys {};
        std::map<std::string, std::shared_ptr<yordle::data::meta::TooltipInstanceList>> mLists {};
    };

    class YORDLE_EXPORT ValueFloat : public bin_class { 
    public:
        explicit ValueFloat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 70254680 || bin_class::is_type(type);
        }

        float constantValue = 0.0;
        std::shared_ptr<yordle::data::meta::bin_class> dynamics {};
    };

    class YORDLE_EXPORT IntegratedValueFloat : public ValueFloat { 
    public:
        explicit IntegratedValueFloat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3515916773 || ValueFloat::is_type(type);
        }

    };

    class YORDLE_EXPORT ValueVector2 : public bin_class { 
    public:
        explicit ValueVector2(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1776038985 || bin_class::is_type(type);
        }

        std::array<float, 2> constantValue {};
        std::shared_ptr<yordle::data::meta::bin_class> dynamics {};
    };

    class YORDLE_EXPORT IntegratedValueVector2 : public ValueVector2 { 
    public:
        explicit IntegratedValueVector2(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1808563568 || ValueVector2::is_type(type);
        }

    };

    class YORDLE_EXPORT ValueVector3 : public bin_class { 
    public:
        explicit ValueVector3(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1759261366 || bin_class::is_type(type);
        }

        std::array<float, 3> constantValue {};
        std::shared_ptr<yordle::data::meta::bin_class> dynamics {};
    };

    class YORDLE_EXPORT IntegratedValueVector3 : public ValueVector3 { 
    public:
        explicit IntegratedValueVector3(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1825341187 || ValueVector3::is_type(type);
        }

    };

    class YORDLE_EXPORT ValueColor : public bin_class { 
    public:
        explicit ValueColor(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 122655197 || bin_class::is_type(type);
        }

        std::array<float, 4> constantValue {};
        std::shared_ptr<yordle::data::meta::bin_class> dynamics {};
    };

    class YORDLE_EXPORT VfxAnimatedFloatVariableData : public bin_class { 
    public:
        explicit VfxAnimatedFloatVariableData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4261825672 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::bin_class>> probabilityTables {};
        std::set<float> times {};
        std::set<float> values {};
    };

    class YORDLE_EXPORT VfxAnimatedVector2fVariableData : public bin_class { 
    public:
        explicit VfxAnimatedVector2fVariableData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 772710981 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::bin_class>> probabilityTables {};
        std::set<float> times {};
        std::set<std::array<float, 2>> values {};
    };

    class YORDLE_EXPORT VfxAnimatedVector3fVariableData : public bin_class { 
    public:
        explicit VfxAnimatedVector3fVariableData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2899841408 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::bin_class>> probabilityTables {};
        std::set<float> times {};
        std::set<std::array<float, 3>> values {};
    };

    class YORDLE_EXPORT VfxAnimatedColorVariableData : public bin_class { 
    public:
        explicit VfxAnimatedColorVariableData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1128908277 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::bin_class>> probabilityTables {};
        std::set<float> times {};
        std::set<std::array<float, 4>> values {};
    };

    class YORDLE_EXPORT VfxSoftParticleDefinitionData : public bin_class { 
    public:
        explicit VfxSoftParticleDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 497696688 || bin_class::is_type(type);
        }

        float beginIn = 0.0;
        float beginOut = 0.0;
        float deltaIn = 0.0;
        float deltaOut = 0.0;
    };

    class YORDLE_EXPORT FlexValueVector3 : public bin_class { 
    public:
        explicit FlexValueVector3(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1113621825 || bin_class::is_type(type);
        }

        uint32_t mFlexID = 0;
        std::shared_ptr<yordle::data::meta::ValueVector3> mValue {};
    };

    class YORDLE_EXPORT FlexValueVector2 : public bin_class { 
    public:
        explicit FlexValueVector2(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1096844206 || bin_class::is_type(type);
        }

        uint32_t mFlexID = 0;
        std::shared_ptr<yordle::data::meta::ValueVector2> mValue {};
    };

    class YORDLE_EXPORT FlexValueFloat : public bin_class { 
    public:
        explicit FlexValueFloat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1370198255 || bin_class::is_type(type);
        }

        uint32_t mFlexID = 0;
        std::shared_ptr<yordle::data::meta::ValueFloat> mValue {};
    };

    class YORDLE_EXPORT FlexTypeFloat : public bin_class { 
    public:
        explicit FlexTypeFloat(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 796686208 || bin_class::is_type(type);
        }

        uint32_t mFlexID = 0;
        float mValue = 0.0;
    };

    class YORDLE_EXPORT VfxFieldAccelerationDefinitionData : public bin_class { 
    public:
        explicit VfxFieldAccelerationDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 177533908 || bin_class::is_type(type);
        }

        bool isLocalSpace = false;
        std::shared_ptr<yordle::data::meta::ValueVector3> acceleration {};
    };

    class YORDLE_EXPORT VfxFieldAttractionDefinitionData : public bin_class { 
    public:
        explicit VfxFieldAttractionDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 443947005 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ValueVector3> position {};
        std::shared_ptr<yordle::data::meta::ValueFloat> radius {};
        std::shared_ptr<yordle::data::meta::ValueFloat> acceleration {};
    };

    class YORDLE_EXPORT VfxFieldCollectionDefinitionData : public bin_class { 
    public:
        explicit VfxFieldCollectionDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3149931448 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::VfxFieldAccelerationDefinitionData>> fieldAccelerationDefinitions {};
        std::set<std::shared_ptr<yordle::data::meta::VfxFieldAttractionDefinitionData>> fieldAttractionDefinitions {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> fieldDragDefinitions {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> fieldNoiseDefinitions {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> fieldOrbitalDefinitions {};
    };

    class YORDLE_EXPORT VfxFieldDragDefinitionData : public bin_class { 
    public:
        explicit VfxFieldDragDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3880844002 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ValueVector3> position {};
        std::shared_ptr<yordle::data::meta::ValueFloat> radius {};
        std::shared_ptr<yordle::data::meta::ValueFloat> strength {};
    };

    class YORDLE_EXPORT VfxFieldNoiseDefinitionData : public bin_class { 
    public:
        explicit VfxFieldNoiseDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1666037840 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ValueVector3> position {};
        std::shared_ptr<yordle::data::meta::ValueFloat> radius {};
        std::shared_ptr<yordle::data::meta::ValueFloat> frequency {};
        std::shared_ptr<yordle::data::meta::ValueFloat> velocityDelta {};
        std::array<float, 3> axisFraction {};
    };

    class YORDLE_EXPORT VfxFieldOrbitalDefinitionData : public bin_class { 
    public:
        explicit VfxFieldOrbitalDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3061509743 || bin_class::is_type(type);
        }

        bool isLocalSpace = false;
        std::shared_ptr<yordle::data::meta::ValueVector3> direction {};
    };

    class YORDLE_EXPORT IVfxMaterialDriver : public bin_class { 
    public:
        explicit IVfxMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 37724083 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT VfxMaterialOverrideDefinitionData : public bin_class { 
    public:
        explicit VfxMaterialOverrideDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3652726407 || bin_class::is_type(type);
        }

        int32_t priority = 0;
        std::optional<std::string> subMeshName {};
        uint32_t overrideBlendMode = 0;
        std::string baseTexture {};
        std::string glossTexture {};
        std::string transitionTexture {};
        float transitionSample = 0.0;
        uint32_t transitionSource = 0;
        uint32_t material = 0;
    };

    class YORDLE_EXPORT VfxProbabilityTableData : public bin_class { 
    public:
        explicit VfxProbabilityTableData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1403439486 || bin_class::is_type(type);
        }

        std::set<float> keyTimes {};
        std::set<float> keyValues {};
        float singleValue = 0.0;
    };

    class YORDLE_EXPORT VfxMigrationResources : public bin_class { 
    public:
        explicit VfxMigrationResources(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2184800742 || bin_class::is_type(type);
        }

        std::map<uint32_t, uint32_t> resourceMap {};
    };

    class YORDLE_EXPORT VfxAssetRemap : public bin_class { 
    public:
        explicit VfxAssetRemap(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4129808802 || bin_class::is_type(type);
        }

        uint32_t type = 0;
        uint32_t oldAsset = 0;
        std::string newAsset {};
    };

    class YORDLE_EXPORT VfxColorOverLifeMaterialDriver : public IVfxMaterialDriver { 
    public:
        explicit VfxColorOverLifeMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 737679281 || IVfxMaterialDriver::is_type(type);
        }

        uint8_t frequency = 0;
        std::shared_ptr<yordle::data::meta::VfxAnimatedColorVariableData> colors {};
    };

    class YORDLE_EXPORT VfxShape : public bin_class { 
    public:
        explicit VfxShape(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2010092456 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ValueVector3> birthTranslation {};
        std::shared_ptr<yordle::data::meta::ValueVector3> emitOffset {};
        std::set<std::shared_ptr<yordle::data::meta::ValueFloat>> emitRotationAngles {};
        std::set<std::array<float, 3>> emitRotationAxes {};
    };

    class YORDLE_EXPORT VfxEmitterDefinitionData : public bin_class { 
    public:
        explicit VfxEmitterDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 164488258 || bin_class::is_type(type);
        }

        std::string soundOnCreateName {};
        std::string soundPersistentName {};
        std::string voiceOverOnCreateName {};
        std::string voiceOverPersistentName {};
        float timeBeforeFirstEmission = 0.0;
        float xcef2ba70 = 0.0;
        std::shared_ptr<yordle::data::meta::ValueFloat> rate {};
        bool x538effa4 = false;
        std::shared_ptr<yordle::data::meta::ValueFloat> particleLifetime {};
        uint8_t particleLingerType = 0;
        std::optional<float> particleLinger {};
        std::optional<float> lifetime {};
        bool isSingleParticle = false;
        std::optional<float> emitterLinger {};
        std::set<std::string> excludedAttachmentTypes {};
        std::optional<float> period {};
        std::optional<float> timeActiveDuringPeriod {};
        std::shared_ptr<yordle::data::meta::ValueVector2> rateByVelocityFunction {};
        std::optional<float> MaximumRateByVelocity {};
        std::array<float, 3> offsetLifetimeScaling {};
        uint8_t offsetLifeScalingSymmetryMode = 0;
        bool doesLifetimeScale = false;
        std::shared_ptr<yordle::data::meta::FlexValueFloat> flexRate {};
        std::shared_ptr<yordle::data::meta::FlexValueFloat> flexParticleLifetime {};
        bool doesParticleLifetimeScale = false;
        std::shared_ptr<yordle::data::meta::bin_class> emissionSurfaceDefinition {};
        std::shared_ptr<yordle::data::meta::bin_class> childParticleSetDefinition {};
        std::shared_ptr<yordle::data::meta::VfxFieldCollectionDefinitionData> fieldCollectionDefinition {};
        std::string emitterName {};
        bool disabled = false;
        uint8_t importance = 0;
        uint8_t colorblindVisibility = 0;
        std::set<std::string> keywordsRequired {};
        std::set<std::string> keywordsExcluded {};
        std::set<std::string> keywordsIncluded {};
        uint8_t spectatorPolicy = 0;
        uint8_t censorPolicy = 0;
        std::array<float, 3> translationOverride {};
        std::array<float, 3> rotationOverride {};
        std::shared_ptr<yordle::data::meta::ValueVector3> birthOrbitalVelocity {};
        std::shared_ptr<yordle::data::meta::ValueVector3> birthVelocity {};
        std::shared_ptr<yordle::data::meta::ValueVector3> birthDrag {};
        std::shared_ptr<yordle::data::meta::ValueVector3> birthAcceleration {};
        std::shared_ptr<yordle::data::meta::ValueVector3> velocity {};
        std::shared_ptr<yordle::data::meta::ValueVector3> drag {};
        std::shared_ptr<yordle::data::meta::ValueVector3> acceleration {};
        bool UseLingerVelocity = false;
        std::shared_ptr<yordle::data::meta::ValueVector3> lingerVelocity {};
        bool UseLingerDrag = false;
        std::shared_ptr<yordle::data::meta::ValueVector3> lingerDrag {};
        bool UseLingerAcceleration = false;
        std::shared_ptr<yordle::data::meta::ValueVector3> lingerAcceleration {};
        std::shared_ptr<yordle::data::meta::FlexValueVector3> flexBirthVelocity {};
        std::shared_ptr<yordle::data::meta::IntegratedValueVector3> worldAcceleration {};
        std::shared_ptr<yordle::data::meta::VfxShape> shape {};
        std::shared_ptr<yordle::data::meta::ValueFloat> bindWeight {};
        float scaleEmitOffsetByBoundObjectSize = 0.0;
        float emissionMeshScale = 0.0;
        std::string emissionMeshName {};
        float scaleEmitOffsetByBoundObjectHeight = 0.0;
        float scaleEmitOffsetByBoundObjectRadius = 0.0;
        std::shared_ptr<yordle::data::meta::FlexValueVector3> flexOffset {};
        std::shared_ptr<yordle::data::meta::FlexValueVector3> flexBirthTranslation {};
        uint32_t material = 0;
        std::map<std::string, std::shared_ptr<yordle::data::meta::IVfxMaterialDriver>> materialDrivers {};
        uint8_t renderPhaseOverride = 0;
        std::shared_ptr<yordle::data::meta::bin_class> primitive {};
        std::string falloffTexture {};
        std::string particleColorTexture {};
        uint8_t blendMode = 0;
        std::shared_ptr<yordle::data::meta::ValueColor> birthColor {};
        std::shared_ptr<yordle::data::meta::ValueColor> color {};
        bool useLingerColor = false;
        std::shared_ptr<yordle::data::meta::ValueColor> lingerColor {};
        int16_t pass = 0;
        uint8_t meshRenderFlags = 0;
        uint8_t colorLookUpTypeX = 0;
        uint8_t colorLookUpTypeY = 0;
        std::array<float, 2> colorLookUpScales {};
        uint8_t alphaRef = 0;
        std::array<float, 2> colorLookUpOffsets {};
        std::shared_ptr<yordle::data::meta::VfxSoftParticleDefinitionData> softParticleParams {};
        uint8_t colorRenderFlags = 0;
        std::array<float, 4> censorModulateValue {};
        float sliceTechniqueRange = 0.0;
        std::array<float, 4> modulationFactor {};
        std::shared_ptr<yordle::data::meta::bin_class> alphaErosionDefinition {};
        std::shared_ptr<yordle::data::meta::bin_class> reflectionDefinition {};
        std::shared_ptr<yordle::data::meta::bin_class> distortionDefinition {};
        bool isTexturePixelated = false;
        float uvParallaxScale = 0.0;
        std::array<float, 2> depthBiasFactors {};
        bool disableBackfaceCull = false;
        uint8_t miscRenderFlags = 0;
        uint8_t stencilMode = 0;
        uint8_t stencilRef = 0;
        bool uvScrollAlphaMult = false;
        bool particleIsLocalOrientation = false;
        bool isDirectionOriented = false;
        bool isUniformScale = false;
        bool hasPostRotateOrientation = false;
        bool isRandomStartFrame = false;
        bool isRandomStartFrameMult = false;
        bool doesCastShadow = false;
        bool isRotationEnabled = false;
        bool uvScrollClamp = false;
        bool uvScrollClampMult = false;
        bool isFollowingTerrain = false;
        bool isGroundLayer = false;
        bool useEmissionMeshNormalForBirth = false;
        bool useNavmeshMask = false;
        bool x676949a1 = false;
        bool xbd9b83c7 = false;
        std::shared_ptr<yordle::data::meta::ValueVector3> birthRotation0 {};
        std::shared_ptr<yordle::data::meta::ValueVector3> birthRotationalVelocity0 {};
        bool UseLingerRotation = false;
        std::shared_ptr<yordle::data::meta::ValueVector3> LingerRotation0 {};
        bool isLocalOrientation = false;
        float directionVelocityScale = 0.0;
        float directionVelocityMinScale = 0.0;
        std::array<float, 3> postRotateOrientationAxis {};
        std::shared_ptr<yordle::data::meta::ValueVector3> birthRotationalAcceleration {};
        std::shared_ptr<yordle::data::meta::FlexValueVector3> flexBirthRotationalVelocity0 {};
        std::shared_ptr<yordle::data::meta::IntegratedValueVector3> rotation0 {};
        std::shared_ptr<yordle::data::meta::ValueVector3> birthScale0 {};
        std::shared_ptr<yordle::data::meta::ValueVector3> scale0 {};
        bool UseLingerScale = false;
        std::shared_ptr<yordle::data::meta::ValueVector3> LingerScale0 {};
        float scaleBirthScaleByBoundObjectSize = 0.0;
        float scaleBirthScaleByBoundObjectRadius = 0.0;
        std::shared_ptr<yordle::data::meta::FlexTypeFloat> flexScaleBirthScale {};
        std::shared_ptr<yordle::data::meta::FlexTypeFloat> flexScaleEmitOffset {};
        std::shared_ptr<yordle::data::meta::FlexTypeFloat> FlexInstanceScale {};
        float scaleBirthScaleByBoundObjectHeight = 0.0;
        std::string texture {};
        float frameRate = 0.0;
        std::shared_ptr<yordle::data::meta::ValueFloat> birthFrameRate {};
        uint16_t numFrames = 0;
        uint16_t startFrame = 0;
        uint8_t uvMode = 0;
        std::shared_ptr<yordle::data::meta::bin_class> paletteDefinition {};
        std::set<std::shared_ptr<yordle::data::meta::VfxMaterialOverrideDefinitionData>> materialOverrideDefinitions {};
        std::shared_ptr<yordle::data::meta::ValueVector2> birthUvScrollRate {};
        std::shared_ptr<yordle::data::meta::FlexValueVector2> flexBirthUVScrollRate {};
        std::shared_ptr<yordle::data::meta::ValueVector2> birthUVOffset {};
        uint8_t texAddressModeBase = 0;
        std::array<float, 2> texDiv {};
        std::shared_ptr<yordle::data::meta::IntegratedValueVector2> particleUVScrollRate {};
        std::array<float, 2> emitterUvScrollRate {};
        std::shared_ptr<yordle::data::meta::FlexValueVector2> flexBirthUVOffset {};
        std::shared_ptr<yordle::data::meta::ValueVector2> uvScale {};
        std::shared_ptr<yordle::data::meta::ValueFloat> uvRotation {};
        std::shared_ptr<yordle::data::meta::ValueFloat> birthUvRotateRate {};
        std::shared_ptr<yordle::data::meta::IntegratedValueFloat> particleUVRotateRate {};
        std::array<float, 2> uvTransformCenter {};
        std::string textureMult {};
        std::shared_ptr<yordle::data::meta::ValueVector2> birthUvScrollRateMult {};
        std::shared_ptr<yordle::data::meta::ValueVector2> birthUVOffsetMult {};
        uint8_t texAddressModeMult = 0;
        std::array<float, 2> texDivMult {};
        std::shared_ptr<yordle::data::meta::ValueVector2> uvScaleMult {};
        std::shared_ptr<yordle::data::meta::ValueFloat> birthUvRotateRateMult {};
        std::shared_ptr<yordle::data::meta::IntegratedValueFloat> particleUVRotateRateMult {};
        std::array<float, 2> uvTransformCenterMult {};
        std::shared_ptr<yordle::data::meta::IntegratedValueVector2> particleUVScrollRateMult {};
        std::array<float, 2> emitterUvScrollRateMult {};
        std::shared_ptr<yordle::data::meta::FlexValueVector2> flexBirthUVScrollRateMult {};
        std::array<float, 3> scaleOverride {};
        std::shared_ptr<yordle::data::meta::ValueFloat> birthScale1 {};
        std::shared_ptr<yordle::data::meta::ValueFloat> scale1 {};
        std::shared_ptr<yordle::data::meta::ValueFloat> birthRotation1 {};
        std::array<float, 2> particleBind {};
        std::shared_ptr<yordle::data::meta::ValueFloat> birthRotationalVelocity1 {};
        uint8_t orientation = 0;
        std::shared_ptr<yordle::data::meta::ValueFloat> rotation1 {};
        std::array<float, 2> scaleBias {};
        std::array<float, 2> uvScrollRate1 {};
        bool hasFixedOrbit = false;
        uint8_t fixedOrbitType = 0;
        bool scaleUpFromOrigin = false;
        bool lockedToEmitter = false;
        std::shared_ptr<yordle::data::meta::FlexValueFloat> flexBirthRotationalVelocity1 {};
    };

    class YORDLE_EXPORT VfxChildIdentifier : public bin_class { 
    public:
        explicit VfxChildIdentifier(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2526736020 || bin_class::is_type(type);
        }

        uint32_t effectKey = 0;
        uint32_t effect = 0;
        std::string effectName {};
    };

    class YORDLE_EXPORT VfxChildParticleSetDefinitionData : public bin_class { 
    public:
        explicit VfxChildParticleSetDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3038774362 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::VfxChildIdentifier>> childrenIdentifiers {};
        std::set<std::string> boneToSpawnAt {};
        std::shared_ptr<yordle::data::meta::ValueFloat> childrenProbability {};
        bool childEmitOnDeath = false;
    };

    class YORDLE_EXPORT VfxAlphaErosionDefinitionData : public bin_class { 
    public:
        explicit VfxAlphaErosionDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1585720219 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ValueFloat> erosionDriveCurve {};
        uint32_t erosionDriveSource = 0;
        bool UseLingerErosionDriveCurve = false;
        std::shared_ptr<yordle::data::meta::ValueFloat> LingerErosionDriveCurve {};
        float erosionFeatherIn = 0.0;
        float erosionFeatherOut = 0.0;
        float erosionSliceWidth = 0.0;
        std::string erosionMapName {};
        std::shared_ptr<yordle::data::meta::ValueColor> erosionMapChannelMixer {};
        uint8_t erosionMapAddressMode = 0;
    };

    class YORDLE_EXPORT VfxPaletteDefinitionData : public bin_class { 
    public:
        explicit VfxPaletteDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2829943575 || bin_class::is_type(type);
        }

        std::string paletteTexture {};
        uint8_t PaletteTextureAddressMode = 0;
        std::shared_ptr<yordle::data::meta::ValueColor> palleteSrcMixColor {};
        std::shared_ptr<yordle::data::meta::ValueVector3> paletteSelector {};
        std::shared_ptr<yordle::data::meta::ValueFloat> x34d8fac6 {};
        std::shared_ptr<yordle::data::meta::ValueFloat> x44fd44cb {};
        int32_t paletteCount = 0;
    };

    class YORDLE_EXPORT VfxReflectionDefinitionData : public bin_class { 
    public:
        explicit VfxReflectionDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1091758723 || bin_class::is_type(type);
        }

        std::string reflectionMapTexture {};
        float reflectionOpacityDirect = 0.0;
        float reflectionOpacityGlancing = 0.0;
        float reflectionFresnel = 0.0;
        std::array<float, 4> reflectionFresnelColor {};
        float fresnel = 0.0;
        std::array<float, 4> fresnelColor {};
    };

    class YORDLE_EXPORT VfxDistortionDefinitionData : public bin_class { 
    public:
        explicit VfxDistortionDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1238702953 || bin_class::is_type(type);
        }

        float distortion = 0.0;
        uint8_t distortionMode = 0;
        std::string normalMapTexture {};
    };

    class YORDLE_EXPORT VfxProjectionDefinitionData : public bin_class { 
    public:
        explicit VfxProjectionDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 259276035 || bin_class::is_type(type);
        }

        float mYRange = 0.0;
        float mFading = 0.0;
    };

    class YORDLE_EXPORT VfxTrailDefinitionData : public bin_class { 
    public:
        explicit VfxTrailDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 12755856 || bin_class::is_type(type);
        }

        uint8_t mMode = 0;
        float mCutoff = 0.0;
        std::shared_ptr<yordle::data::meta::ValueVector3> mBirthTilingSize {};
        uint8_t mSmoothingMode = 0;
        int32_t mMaxAddedPerFrame = 0;
    };

    class YORDLE_EXPORT VfxBeamDefinitionData : public bin_class { 
    public:
        explicit VfxBeamDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 532209417 || bin_class::is_type(type);
        }

        int32_t mSegments = 0;
        std::shared_ptr<yordle::data::meta::ValueVector3> mBirthTilingSize {};
        bool mIsColorBindedWithDistance = false;
        std::shared_ptr<yordle::data::meta::ValueColor> mAnimatedColorWithDistance {};
        std::array<float, 3> mLocalSpaceSourceOffset {};
        std::array<float, 3> mLocalSpaceTargetOffset {};
        uint8_t mTrailMode = 0;
        uint8_t mMode = 0;
    };

    class YORDLE_EXPORT VfxEmissionSurfaceData : public bin_class { 
    public:
        explicit VfxEmissionSurfaceData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3217219891 || bin_class::is_type(type);
        }

        std::string meshName {};
        std::string skeletonName {};
        std::string animationName {};
        float meshScale = 0.0;
        uint16_t maxJointWeights = 0;
        bool useAvatarPose = false;
        bool useSurfaceNormalForBirthPhysics = false;
    };

    class YORDLE_EXPORT VfxMeshDefinitionData : public bin_class { 
    public:
        explicit VfxMeshDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1787328523 || bin_class::is_type(type);
        }

        std::string mSimpleMeshName {};
        std::string mMeshName {};
        std::string mMeshSkeletonName {};
        std::string mAnimationName {};
        std::set<std::string> mAnimationVariants {};
        std::set<uint32_t> mSubmeshesToDraw {};
        std::set<uint32_t> mSubmeshesToDrawAlways {};
        bool mLockMeshToAttachment = false;
    };

    class YORDLE_EXPORT VfxPrimitiveBase : public bin_class { 
    public:
        explicit VfxPrimitiveBase(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3801322209 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT VfxPrimitiveCameraQuad : public VfxPrimitiveBase { 
    public:
        explicit VfxPrimitiveCameraQuad(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2531114100 || VfxPrimitiveBase::is_type(type);
        }

    };

    class YORDLE_EXPORT VfxPrimitiveArbitraryQuad : public VfxPrimitiveBase { 
    public:
        explicit VfxPrimitiveArbitraryQuad(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1273725437 || VfxPrimitiveBase::is_type(type);
        }

    };

    class YORDLE_EXPORT VfxPrimitiveRay : public VfxPrimitiveBase { 
    public:
        explicit VfxPrimitiveRay(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2706101456 || VfxPrimitiveBase::is_type(type);
        }

    };

    class YORDLE_EXPORT VfxPrimitiveProjectionBase : public VfxPrimitiveBase { 
    public:
        explicit VfxPrimitiveProjectionBase(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3832843140 || VfxPrimitiveBase::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::VfxProjectionDefinitionData> mProjection {};
    };

    class YORDLE_EXPORT VfxPrimitivePlanarProjection : public VfxPrimitiveProjectionBase { 
    public:
        explicit VfxPrimitivePlanarProjection(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3918814637 || VfxPrimitiveProjectionBase::is_type(type);
        }

    };

    class YORDLE_EXPORT VfxPrimitiveTrailBase : public VfxPrimitiveBase { 
    public:
        explicit VfxPrimitiveTrailBase(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 562397581 || VfxPrimitiveBase::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::VfxTrailDefinitionData> mTrail {};
    };

    class YORDLE_EXPORT VfxPrimitiveCameraTrail : public VfxPrimitiveTrailBase { 
    public:
        explicit VfxPrimitiveCameraTrail(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 678973881 || VfxPrimitiveTrailBase::is_type(type);
        }

    };

    class YORDLE_EXPORT VfxPrimitiveArbitraryTrail : public VfxPrimitiveTrailBase { 
    public:
        explicit VfxPrimitiveArbitraryTrail(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1459970650 || VfxPrimitiveTrailBase::is_type(type);
        }

    };

    class YORDLE_EXPORT VfxPrimitiveBeamBase : public VfxPrimitiveBase { 
    public:
        explicit VfxPrimitiveBeamBase(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3713591166 || VfxPrimitiveBase::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::VfxBeamDefinitionData> mBeam {};
    };

    class YORDLE_EXPORT VfxPrimitiveCameraSegmentBeam : public VfxPrimitiveBeamBase { 
    public:
        explicit VfxPrimitiveCameraSegmentBeam(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4048547755 || VfxPrimitiveBeamBase::is_type(type);
        }

    };

    class YORDLE_EXPORT VfxPrimitiveArbitrarySegmentBeam : public VfxPrimitiveBeamBase { 
    public:
        explicit VfxPrimitiveArbitrarySegmentBeam(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 668179872 || VfxPrimitiveBeamBase::is_type(type);
        }

    };

    class YORDLE_EXPORT VfxPrimitiveMeshBase : public VfxPrimitiveBase { 
    public:
        explicit VfxPrimitiveMeshBase(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4231615076 || VfxPrimitiveBase::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::VfxMeshDefinitionData> mMesh {};
        bool xfbf6793f = false;
        bool xea861daa = false;
    };

    class YORDLE_EXPORT VfxPrimitiveMesh : public VfxPrimitiveMeshBase { 
    public:
        explicit VfxPrimitiveMesh(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2241128505 || VfxPrimitiveMeshBase::is_type(type);
        }

    };

    class YORDLE_EXPORT VfxPrimitiveAttachedMesh : public VfxPrimitiveMeshBase { 
    public:
        explicit VfxPrimitiveAttachedMesh(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2762908325 || VfxPrimitiveMeshBase::is_type(type);
        }

    };

    class YORDLE_EXPORT VfxPrimitiveBeam : public VfxPrimitiveBase { 
    public:
        explicit VfxPrimitiveBeam(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1752512115 || VfxPrimitiveBase::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::VfxMeshDefinitionData> mMesh {};
        std::shared_ptr<yordle::data::meta::VfxBeamDefinitionData> mBeam {};
    };

    class YORDLE_EXPORT VfxFloatOverLifeMaterialDriver : public IVfxMaterialDriver { 
    public:
        explicit VfxFloatOverLifeMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1372839132 || IVfxMaterialDriver::is_type(type);
        }

        uint8_t frequency = 0;
        std::shared_ptr<yordle::data::meta::VfxAnimatedFloatVariableData> graph {};
    };

    class YORDLE_EXPORT VfxSineMaterialDriver : public IVfxMaterialDriver { 
    public:
        explicit VfxSineMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 719276917 || IVfxMaterialDriver::is_type(type);
        }

        float mFrequency = 0.0;
        float mScale = 0.0;
        float mBias = 0.0;
    };

    class YORDLE_EXPORT MapParticle : public MapPlaceable { 
    public:
        explicit MapParticle(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1496250051 || MapPlaceable::is_type(type);
        }

        uint32_t system = 0;
        bool eyeCandy = false;
        bool Transitional = false;
        int32_t quality = 0;
        uint32_t visibilityMode = 0;
        std::array<float, 4> colorModulate {};
        std::string groupName {};
        bool startDisabled = false;
    };

    class YORDLE_EXPORT MapParticleGroups : public bin_class { 
    public:
        explicit MapParticleGroups(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1221817611 || bin_class::is_type(type);
        }

        std::set<std::string> groups {};
    };

    class YORDLE_EXPORT DynamicMaterialParameterDef : public bin_class { 
    public:
        explicit DynamicMaterialParameterDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 121596497 || bin_class::is_type(type);
        }

        std::string name {};
        bool enabled = false;
        std::shared_ptr<yordle::data::meta::bin_class> driver {};
    };

    class YORDLE_EXPORT DynamicMaterialTextureSwapOption : public bin_class { 
    public:
        explicit DynamicMaterialTextureSwapOption(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 567330916 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> driver {};
        std::string textureName {};
    };

    class YORDLE_EXPORT DynamicMaterialTextureSwapDef : public bin_class { 
    public:
        explicit DynamicMaterialTextureSwapDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1303930364 || bin_class::is_type(type);
        }

        std::string name {};
        bool enabled = false;
        std::set<std::shared_ptr<yordle::data::meta::DynamicMaterialTextureSwapOption>> options {};
    };

    class YORDLE_EXPORT DynamicMaterialStaticSwitch : public bin_class { 
    public:
        explicit DynamicMaterialStaticSwitch(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4013554309 || bin_class::is_type(type);
        }

        std::string name {};
        bool enabled = false;
        std::shared_ptr<yordle::data::meta::bin_class> driver {};
    };

    class YORDLE_EXPORT DynamicMaterialDef : public bin_class { 
    public:
        explicit DynamicMaterialDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 762048930 || bin_class::is_type(type);
        }

        bool x5ed2db8d = false;
        std::set<std::shared_ptr<yordle::data::meta::DynamicMaterialParameterDef>> parameters {};
        std::set<std::shared_ptr<yordle::data::meta::DynamicMaterialTextureSwapDef>> textures {};
        std::shared_ptr<yordle::data::meta::DynamicMaterialStaticSwitch> staticSwitch {};
    };

    class YORDLE_EXPORT IDynamicMaterialDriver : public bin_class { 
    public:
        explicit IDynamicMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1009087838 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT IDynamicMaterialFloatDriver : public IDynamicMaterialDriver { 
    public:
        explicit IDynamicMaterialFloatDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1090223300 || IDynamicMaterialDriver::is_type(type);
        }

    };

    class YORDLE_EXPORT LerpMaterialDriver : public IDynamicMaterialFloatDriver { 
    public:
        explicit LerpMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3032802403 || IDynamicMaterialFloatDriver::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mBoolDriver {};
        float mOnValue = 0.0;
        float mOffValue = 0.0;
        float mTurnOnTimeSec = 0.0;
        float mTurnOffTimeSec = 0.0;
        bool xa452be9f = false;
    };

    class YORDLE_EXPORT MaxMaterialDriver : public IDynamicMaterialDriver { 
    public:
        explicit MaxMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 414058 || IDynamicMaterialDriver::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::IDynamicMaterialDriver>> mDrivers {};
    };

    class YORDLE_EXPORT MinMaterialDriver : public IDynamicMaterialDriver { 
    public:
        explicit MinMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 906481424 || IDynamicMaterialDriver::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::IDynamicMaterialDriver>> mDrivers {};
    };

    class YORDLE_EXPORT RemapFloatMaterialDriver : public IDynamicMaterialFloatDriver { 
    public:
        explicit RemapFloatMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2851587231 || IDynamicMaterialFloatDriver::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IDynamicMaterialFloatDriver> mDriver {};
        float mMinValue = 0.0;
        float mMaxValue = 0.0;
        float mOutputMinValue = 0.0;
        float mOutputMaxValue = 0.0;
    };

    class YORDLE_EXPORT SineMaterialDriver : public IDynamicMaterialFloatDriver { 
    public:
        explicit SineMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 824881043 || IDynamicMaterialFloatDriver::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IDynamicMaterialFloatDriver> mDriver {};
        float mFrequency = 0.0;
        float mScale = 0.0;
        float mBias = 0.0;
    };

    class YORDLE_EXPORT SpecificColorMaterialDriver : public IDynamicMaterialDriver { 
    public:
        explicit SpecificColorMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1181419247 || IDynamicMaterialDriver::is_type(type);
        }

        std::array<float, 4> mColor {};
    };

    class YORDLE_EXPORT SwitchMaterialDriverElement : public bin_class { 
    public:
        explicit SwitchMaterialDriverElement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1173409658 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mCondition {};
        std::shared_ptr<yordle::data::meta::IDynamicMaterialDriver> mValue {};
    };

    class YORDLE_EXPORT SwitchMaterialDriver : public IDynamicMaterialDriver { 
    public:
        explicit SwitchMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2878204994 || IDynamicMaterialDriver::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::SwitchMaterialDriverElement>> mElements {};
        std::shared_ptr<yordle::data::meta::IDynamicMaterialDriver> mDefaultValue {};
    };

    class YORDLE_EXPORT BlendingSwitchMaterialDriver : public SwitchMaterialDriver { 
    public:
        explicit BlendingSwitchMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1459861871 || SwitchMaterialDriver::is_type(type);
        }

        float mBlendTime = 0.0;
        std::set<float> mOverrideBlendTimes {};
    };

    class YORDLE_EXPORT TimeMaterialDriver : public IDynamicMaterialFloatDriver { 
    public:
        explicit TimeMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4084077559 || IDynamicMaterialFloatDriver::is_type(type);
        }

    };

    class YORDLE_EXPORT IdMappingEntry : public bin_class { 
    public:
        explicit IdMappingEntry(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 176045846 || bin_class::is_type(type);
        }

        uint16_t ID = 0;
        uint16_t Count = 0;
    };

    class YORDLE_EXPORT HybridMaterialDefPreset : public bin_class { 
    public:
        explicit HybridMaterialDefPreset(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1659255250 || bin_class::is_type(type);
        }

        std::map<std::string, std::string> shaderMacros {};
        bool depthEnable = false;
        bool stencilEnable = false;
        bool blendEnable = false;
        bool cullEnable = false;
        bool xaab4104c = false;
        uint8_t depthCompareFunc = 0;
        uint8_t stencilCompareFunc = 0;
        uint32_t stencilReferenceVal = 0;
        uint32_t stencilMask = 0;
        uint8_t stencilFailOp = 0;
        uint8_t stencilPassDepthFailOp = 0;
        uint8_t stencilPassDepthPassOp = 0;
        uint8_t srcColorBlendFactor = 0;
        uint8_t srcAlphaBlendFactor = 0;
        uint8_t dstColorBlendFactor = 0;
        uint8_t dstAlphaBlendFactor = 0;
        uint8_t blendEquation = 0;
        uint8_t windingToCull = 0;
        uint8_t writeMask = 0;
        float depthOffsetSlope = 0.0;
        float depthOffsetBias = 0.0;
    };

    class YORDLE_EXPORT IMaterialDef : public bin_class { 
    public:
        explicit IMaterialDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3975636772 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT ShaderLogicalParameter : public bin_class { 
    public:
        explicit ShaderLogicalParameter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 346210042 || bin_class::is_type(type);
        }

        std::string name {};
        uint32_t fields = 0;
    };

    class YORDLE_EXPORT ShaderPhysicalParameter : public bin_class { 
    public:
        explicit ShaderPhysicalParameter(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2171032536 || bin_class::is_type(type);
        }

        std::string name {};
        std::array<float, 4> data {};
        std::set<std::shared_ptr<yordle::data::meta::ShaderLogicalParameter>> logicalParameters {};
    };

    class YORDLE_EXPORT ShaderStaticSwitch : public bin_class { 
    public:
        explicit ShaderStaticSwitch(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1621267174 || bin_class::is_type(type);
        }

        std::string name {};
        bool onByDefault = false;
    };

    class YORDLE_EXPORT ShaderTexture : public bin_class { 
    public:
        explicit ShaderTexture(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 835838499 || bin_class::is_type(type);
        }

        std::string name {};
        std::string defaultTexturePath {};
    };

    class YORDLE_EXPORT IShaderDef : public bin_class { 
    public:
        explicit IShaderDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 196890972 || bin_class::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::ShaderPhysicalParameter>> parameters {};
        std::set<std::shared_ptr<yordle::data::meta::ShaderStaticSwitch>> staticSwitches {};
        std::set<std::shared_ptr<yordle::data::meta::ShaderTexture>> textures {};
        std::map<std::string, std::string> featureDefines {};
        uint32_t featureMask = 0;
        uint32_t x9bfe7d81 = 0;
    };

    class YORDLE_EXPORT MaterialParameterData : public bin_class { 
    public:
        explicit MaterialParameterData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1407148951 || bin_class::is_type(type);
        }

        uint8_t type = 0;
        std::array<float, 4> DefaultValue {};
    };

    class YORDLE_EXPORT MaterialTextureData : public bin_class { 
    public:
        explicit MaterialTextureData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3791453475 || bin_class::is_type(type);
        }

        std::string defaultTexturePath {};
        uint8_t addressU = 0;
        uint8_t addressV = 0;
        uint8_t addressW = 0;
        uint8_t filterMin = 0;
        uint8_t filterMip = 0;
        uint8_t filterMag = 0;
    };

    class YORDLE_EXPORT MaterialSwitchData : public bin_class { 
    public:
        explicit MaterialSwitchData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1327860340 || bin_class::is_type(type);
        }

        bool on = false;
    };

    class YORDLE_EXPORT MaterialParameterDataCollection : public bin_class { 
    public:
        explicit MaterialParameterDataCollection(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3921803671 || bin_class::is_type(type);
        }

        uint16_t nextID = 0;
        std::map<std::string, std::shared_ptr<yordle::data::meta::IdMappingEntry>> Entries {};
        std::string xea57bf12 {};
        std::map<uint16_t, std::shared_ptr<yordle::data::meta::MaterialParameterData>> data {};
    };

    class YORDLE_EXPORT MaterialTextureDataCollection : public bin_class { 
    public:
        explicit MaterialTextureDataCollection(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1749974331 || bin_class::is_type(type);
        }

        uint16_t nextID = 0;
        std::map<std::string, std::shared_ptr<yordle::data::meta::IdMappingEntry>> Entries {};
        std::string xea57bf12 {};
        std::map<uint16_t, std::shared_ptr<yordle::data::meta::MaterialTextureData>> data {};
    };

    class YORDLE_EXPORT MaterialSwitchDataCollection : public bin_class { 
    public:
        explicit MaterialSwitchDataCollection(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3078356408 || bin_class::is_type(type);
        }

        uint16_t nextID = 0;
        std::map<std::string, std::shared_ptr<yordle::data::meta::IdMappingEntry>> Entries {};
        std::string xea57bf12 {};
        std::map<uint16_t, std::shared_ptr<yordle::data::meta::MaterialSwitchData>> data {};
    };

    class YORDLE_EXPORT MaterialDataCollections : public bin_class { 
    public:
        explicit MaterialDataCollections(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1874373301 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::MaterialParameterDataCollection> ParameterData {};
        std::shared_ptr<yordle::data::meta::MaterialTextureDataCollection> TextureData {};
        std::shared_ptr<yordle::data::meta::MaterialSwitchDataCollection> switchData {};
    };

    class YORDLE_EXPORT MaterialInstanceParamDef : public bin_class { 
    public:
        explicit MaterialInstanceParamDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1496596895 || bin_class::is_type(type);
        }

        std::array<float, 4> value {};
    };

    class YORDLE_EXPORT MaterialInstanceSwitchDef : public bin_class { 
    public:
        explicit MaterialInstanceSwitchDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2719807978 || bin_class::is_type(type);
        }

        bool on = false;
    };

    class YORDLE_EXPORT MaterialInstanceTextureDef : public bin_class { 
    public:
        explicit MaterialInstanceTextureDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1305331905 || bin_class::is_type(type);
        }

        std::string texturePath {};
        std::map<uint32_t, std::string> uncensoredTextures {};
    };

    class YORDLE_EXPORT xf7084b4a : public bin_class { 
    public:
        explicit xf7084b4a(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4144515914 || bin_class::is_type(type);
        }

        std::string name {};
        std::map<std::string, std::string> shaderMacros {};
    };

    class YORDLE_EXPORT MaterialInstanceDynamicParam : public bin_class { 
    public:
        explicit MaterialInstanceDynamicParam(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1964830497 || bin_class::is_type(type);
        }

        bool enabled = false;
        std::shared_ptr<yordle::data::meta::IDynamicMaterialDriver> driver {};
    };

    class YORDLE_EXPORT MaterialInstanceDynamicSwitch : public bin_class { 
    public:
        explicit MaterialInstanceDynamicSwitch(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1171267580 || bin_class::is_type(type);
        }

        bool enabled = false;
        std::shared_ptr<yordle::data::meta::bin_class> driver {};
    };

    class YORDLE_EXPORT MaterialInstanceDynamicTexture : public bin_class { 
    public:
        explicit MaterialInstanceDynamicTexture(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1083476907 || bin_class::is_type(type);
        }

        bool enabled = false;
        std::set<std::shared_ptr<yordle::data::meta::DynamicMaterialTextureSwapOption>> options {};
    };

    class YORDLE_EXPORT StaticMaterialShaderParamDef : public bin_class { 
    public:
        explicit StaticMaterialShaderParamDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3729264367 || bin_class::is_type(type);
        }

        std::string name {};
        std::array<float, 4> value {};
    };

    class YORDLE_EXPORT StaticMaterialSwitchDef : public bin_class { 
    public:
        explicit StaticMaterialSwitchDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 237114017 || bin_class::is_type(type);
        }

        std::string name {};
        bool on = false;
    };

    class YORDLE_EXPORT StaticMaterialShaderSamplerDef : public bin_class { 
    public:
        explicit StaticMaterialShaderSamplerDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 151302480 || bin_class::is_type(type);
        }

        std::string samplerName {};
        std::string textureName {};
        std::map<uint32_t, std::string> uncensoredTextures {};
        uint32_t addressU = 0;
        uint32_t addressV = 0;
        uint32_t addressW = 0;
        uint32_t filterMin = 0;
        uint32_t filterMip = 0;
        uint32_t filterMag = 0;
    };

    class YORDLE_EXPORT StaticMaterialPassDef : public bin_class { 
    public:
        explicit StaticMaterialPassDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2235027650 || bin_class::is_type(type);
        }

        uint32_t shader = 0;
        std::map<std::string, std::string> shaderMacros {};
        std::set<std::shared_ptr<yordle::data::meta::StaticMaterialShaderParamDef>> paramValues {};
        bool depthEnable = false;
        bool stencilEnable = false;
        bool blendEnable = false;
        bool cullEnable = false;
        bool xaab4104c = false;
        uint32_t depthCompareFunc = 0;
        uint32_t stencilCompareFunc = 0;
        uint32_t stencilReferenceVal = 0;
        uint32_t stencilMask = 0;
        uint32_t stencilFailOp = 0;
        uint32_t stencilPassDepthFailOp = 0;
        uint32_t stencilPassDepthPassOp = 0;
        uint32_t srcColorBlendFactor = 0;
        uint32_t srcAlphaBlendFactor = 0;
        uint32_t dstColorBlendFactor = 0;
        uint32_t dstAlphaBlendFactor = 0;
        uint32_t blendEquation = 0;
        uint32_t windingToCull = 0;
        uint32_t writeMask = 0;
        float depthOffsetSlope = 0.0;
        float depthOffsetBias = 0.0;
    };

    class YORDLE_EXPORT StaticMaterialTechniqueDef : public bin_class { 
    public:
        explicit StaticMaterialTechniqueDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 101336083 || bin_class::is_type(type);
        }

        std::string name {};
        std::set<std::shared_ptr<yordle::data::meta::StaticMaterialPassDef>> passes {};
    };

    class YORDLE_EXPORT StaticMaterialChildTechniqueDef : public bin_class { 
    public:
        explicit StaticMaterialChildTechniqueDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1935363221 || bin_class::is_type(type);
        }

        std::string name {};
        std::string parentName {};
        std::map<std::string, std::string> shaderMacros {};
    };

    class YORDLE_EXPORT MapPerInstanceInfo : public bin_class { 
    public:
        explicit MapPerInstanceInfo(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 573833423 || bin_class::is_type(type);
        }

        std::string shadowMapPath {};
        std::array<float, 4> shadowMapUVScaleAndBias {};
    };

    class YORDLE_EXPORT MapBakeProperties : public MapComponent { 
    public:
        explicit MapBakeProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1783247881 || MapComponent::is_type(type);
        }

        uint32_t lightGridSize = 0;
        float x22d24a9a = 0.0;
        float lightGridCharacterFullBrightIntensity = 0.0;
        float xea4e5cc8 = 0.0;
        float x2f3b5471 = 0.0;
        std::string lightGridFileName {};
    };

    class YORDLE_EXPORT MapCloudsLayer : public bin_class { 
    public:
        explicit MapCloudsLayer(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 769601740 || bin_class::is_type(type);
        }

        float scale = 0.0;
        float speed = 0.0;
        std::array<float, 2> direction {};
    };

    class YORDLE_EXPORT MapGraphicsFeature : public MapComponent { 
    public:
        explicit MapGraphicsFeature(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 66354938 || MapComponent::is_type(type);
        }

    };

    class YORDLE_EXPORT MapLightingV2 : public MapGraphicsFeature { 
    public:
        explicit MapLightingV2(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3701691417 || MapGraphicsFeature::is_type(type);
        }

        float xee91017d = 0.0;
        float xc916a9fc = 0.0;
    };

    class YORDLE_EXPORT MapLightingVolume : public MapPlaceable { 
    public:
        explicit MapLightingVolume(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2319232567 || MapPlaceable::is_type(type);
        }

        std::array<float, 4> sunColor {};
        std::array<float, 3> sunDirection {};
        std::optional<std::array<float, 3>> xa04bd9bf {};
        float xd8851203 = 0.0;
        float xba02f116 = 0.0;
        std::array<float, 4> skyLightColor {};
        std::array<float, 4> horizonColor {};
        std::array<float, 4> groundColor {};
        float skyLightScale = 0.0;
        float lightMapColorScale = 0.0;
        bool fogEnabled = false;
        std::array<float, 4> fogColor {};
        std::array<float, 4> fogAlternateColor {};
        std::array<float, 2> fogStartAndEnd {};
        float fogEmissiveRemap = 0.0;
        float fogLowQualityModeEmissiveRemap = 0.0;
    };

    class YORDLE_EXPORT MapPointLight : public MapPlaceable { 
    public:
        explicit MapPointLight(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 36597367 || MapPlaceable::is_type(type);
        }

        uint32_t type = 0;
        float radiusScale = 0.0;
        float intensityScale = 0.0;
        std::optional<bool> overrideCastStaticShadows {};
        std::optional<bool> overrideUseSpecular {};
    };

    class YORDLE_EXPORT MapPointLightType : public bin_class { 
    public:
        explicit MapPointLightType(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 668199599 || bin_class::is_type(type);
        }

        std::array<float, 4> lightColor {};
        std::array<float, 4> falloffColor {};
        float radius = 0.0;
        bool castStaticShadows = false;
        bool specular = false;
        int32_t Impact = 0;
    };

    class YORDLE_EXPORT MapSunProperties : public MapComponent { 
    public:
        explicit MapSunProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 379203484 || MapComponent::is_type(type);
        }

        std::array<float, 4> sunColor {};
        std::array<float, 3> sunDirection {};
        std::optional<std::array<float, 3>> xa04bd9bf {};
        float xd8851203 = 0.0;
        float xba02f116 = 0.0;
        std::array<float, 4> skyLightColor {};
        std::array<float, 4> horizonColor {};
        std::array<float, 4> groundColor {};
        float skyLightScale = 0.0;
        float lightMapColorScale = 0.0;
        bool fogEnabled = false;
        std::array<float, 4> fogColor {};
        std::array<float, 4> fogAlternateColor {};
        std::array<float, 2> fogStartAndEnd {};
        float fogEmissiveRemap = 0.0;
        float fogLowQualityModeEmissiveRemap = 0.0;
        bool useBloom = false;
        float surfaceAreaToShadowMapScale = 0.0;
    };

    class YORDLE_EXPORT MapTerrainPaint : public MapGraphicsFeature { 
    public:
        explicit MapTerrainPaint(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3554680230 || MapGraphicsFeature::is_type(type);
        }

        std::string TerrainPaintTexturePath {};
    };

    class YORDLE_EXPORT SHData : public bin_class { 
    public:
        explicit SHData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1813728254 || bin_class::is_type(type);
        }

        std::set<std::array<float, 3>> bandData {};
    };

    class YORDLE_EXPORT SkinMeshDataProperties_MaterialOverride : public bin_class { 
    public:
        explicit SkinMeshDataProperties_MaterialOverride(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2340045716 || bin_class::is_type(type);
        }

        uint32_t material = 0;
        std::string texture {};
        std::string glossTexture {};
        std::string submesh {};
    };

    class YORDLE_EXPORT SkinnedMeshDataMaterialController : public bin_class { 
    public:
        explicit SkinnedMeshDataMaterialController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3460011047 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT SkinMeshDataProperties : public bin_class { 
    public:
        explicit SkinMeshDataProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1628559524 || bin_class::is_type(type);
        }

        std::string skeleton {};
        std::string simpleSkin {};
        bool xd62df07c = false;
        std::string texture {};
        std::string emissiveTexture {};
        std::string glossTexture {};
        float skinScale = 0.0;
        float selfIllumination = 0.0;
        float brushAlphaOverride = 0.0;
        std::optional<std::array<float, 3>> overrideBoundingBox {};
        uint32_t material = 0;
        float boundingCylinderRadius = 0.0;
        float boundingCylinderHeight = 0.0;
        std::optional<float> boundingSphereRadius {};
        std::array<uint8_t, 4> fresnelColor {};
        float fresnel = 0.0;
        bool usesSkinVO = false;
        bool castShadows = false;
        bool allowCharacterInking = false;
        std::string reflectionMap {};
        float reflectionOpacityDirect = 0.0;
        float reflectionOpacityGlancing = 0.0;
        float reflectionFresnel = 0.0;
        std::array<uint8_t, 4> reflectionFresnelColor {};
        std::string initialSubmeshToHide {};
        std::string initialSubmeshShadowsToHide {};
        std::string initialSubmeshMouseOversToHide {};
        std::string submeshRenderOrder {};
        bool x2543480a = false;
        std::set<std::shared_ptr<yordle::data::meta::SkinMeshDataProperties_MaterialOverride>> materialOverride {};
        std::shared_ptr<yordle::data::meta::SkinnedMeshDataMaterialController> materialController {};
        std::set<std::shared_ptr<yordle::data::meta::BaseRigPoseModifierData>> rigPoseModifierData {};
    };

    class YORDLE_EXPORT IResource : public bin_class { 
    public:
        explicit IResource(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 547453112 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT IResourceResolver : public bin_class { 
    public:
        explicit IResourceResolver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3911265650 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT FunctionDefinition : public bin_class { 
    public:
        explicit FunctionDefinition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3984358668 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> Sequence {};
        std::set<uint32_t> InputParameters {};
        std::set<uint32_t> OutputParameters {};
    };

    class YORDLE_EXPORT IScriptBlock : public bin_class { 
    public:
        explicit IScriptBlock(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1009431984 || bin_class::is_type(type);
        }

        bool IsDisabled = false;
    };

    class YORDLE_EXPORT SwitchCase : public bin_class { 
    public:
        explicit SwitchCase(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3460129365 || bin_class::is_type(type);
        }

        bool IsDisabled = false;
        std::shared_ptr<yordle::data::meta::bin_class> Condition {};
        std::shared_ptr<yordle::data::meta::bin_class> Sequence {};
    };

    class YORDLE_EXPORT SwitchScriptBlock : public IScriptBlock { 
    public:
        explicit SwitchScriptBlock(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3828703835 || IScriptBlock::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::SwitchCase>> Cases {};
    };

    class YORDLE_EXPORT IScriptCondition : public bin_class { 
    public:
        explicit IScriptCondition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3324095080 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT TableValueExistsScriptCondition : public IScriptCondition { 
    public:
        explicit TableValueExistsScriptCondition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1889908488 || IScriptCondition::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> TableValue {};
    };

    class YORDLE_EXPORT RandomChanceScriptCondition : public IScriptCondition { 
    public:
        explicit RandomChanceScriptCondition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4133732978 || IScriptCondition::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> Chance {};
    };

    class YORDLE_EXPORT AndScriptCondition : public IScriptCondition { 
    public:
        explicit AndScriptCondition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1796410142 || IScriptCondition::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::IScriptCondition>> Conditions {};
    };

    class YORDLE_EXPORT OrScriptCondition : public IScriptCondition { 
    public:
        explicit OrScriptCondition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 419340840 || IScriptCondition::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::IScriptCondition>> Conditions {};
    };

    class YORDLE_EXPORT NotScriptCondition : public IScriptCondition { 
    public:
        explicit NotScriptCondition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2824201906 || IScriptCondition::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IScriptCondition> Condition {};
    };

    class YORDLE_EXPORT ComparisonScriptCondition : public IScriptCondition { 
    public:
        explicit ComparisonScriptCondition(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 824983528 || IScriptCondition::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> Value1 {};
        uint32_t Operation = 0;
        std::shared_ptr<yordle::data::meta::bin_class> Value2 {};
    };

    class YORDLE_EXPORT RScript : public bin_class { 
    public:
        explicit RScript(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3134806650 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT ScriptTable : public bin_class { 
    public:
        explicit ScriptTable(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 619916734 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT PassThroughParamsTable : public ScriptTable { 
    public:
        explicit PassThroughParamsTable(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1411410857 || ScriptTable::is_type(type);
        }

    };

    class YORDLE_EXPORT ScriptTableSet : public bin_class { 
    public:
        explicit ScriptTableSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4139131590 || bin_class::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ScriptTable> Table {};
        uint32_t Var = 0;
    };

    class YORDLE_EXPORT IntTableSet : public ScriptTableSet { 
    public:
        explicit IntTableSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 663538050 || ScriptTableSet::is_type(type);
        }

    };

    class YORDLE_EXPORT BoolTableSet : public ScriptTableSet { 
    public:
        explicit BoolTableSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2728914349 || ScriptTableSet::is_type(type);
        }

    };

    class YORDLE_EXPORT FloatTableSet : public ScriptTableSet { 
    public:
        explicit FloatTableSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3570109893 || ScriptTableSet::is_type(type);
        }

    };

    class YORDLE_EXPORT StringTableSet : public ScriptTableSet { 
    public:
        explicit StringTableSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3580363220 || ScriptTableSet::is_type(type);
        }

    };

    class YORDLE_EXPORT VectorTableSet : public ScriptTableSet { 
    public:
        explicit VectorTableSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2465524974 || ScriptTableSet::is_type(type);
        }

    };

    class YORDLE_EXPORT FunctionTableSet : public ScriptTableSet { 
    public:
        explicit FunctionTableSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1262223041 || ScriptTableSet::is_type(type);
        }

    };

    class YORDLE_EXPORT CustomTableSet : public ScriptTableSet { 
    public:
        explicit CustomTableSet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2864404146 || ScriptTableSet::is_type(type);
        }

    };

    class YORDLE_EXPORT IScriptValueGet : public bin_class { 
    public:
        explicit IScriptValueGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4142338480 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT IStringGet : public IScriptValueGet { 
    public:
        explicit IStringGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1166962967 || IScriptValueGet::is_type(type);
        }

    };

    class YORDLE_EXPORT StringGet : public IStringGet { 
    public:
        explicit StringGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3687170724 || IStringGet::is_type(type);
        }

        std::string value {};
    };

    class YORDLE_EXPORT StringTableGet : public IStringGet { 
    public:
        explicit StringTableGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4031524872 || IStringGet::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ScriptTable> Table {};
        uint32_t Var = 0;
        std::optional<std::string> Default {};
    };

    class YORDLE_EXPORT IVectorGet : public IScriptValueGet { 
    public:
        explicit IVectorGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3682319469 || IScriptValueGet::is_type(type);
        }

    };

    class YORDLE_EXPORT VectorGet : public IVectorGet { 
    public:
        explicit VectorGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1755899118 || IVectorGet::is_type(type);
        }

        std::array<float, 3> value {};
    };

    class YORDLE_EXPORT VectorTableGet : public IVectorGet { 
    public:
        explicit VectorTableGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2648244722 || IVectorGet::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ScriptTable> Table {};
        uint32_t Var = 0;
        std::optional<std::array<float, 3>> Default {};
    };

    class YORDLE_EXPORT xd1951f45 : public bin_class { 
    public:
        explicit xd1951f45(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3516211013 || bin_class::is_type(type);
        }

        float transitionTime = 0.0;
        uint8_t EasingType = 0;
        uint8_t startAlpha = 0;
        uint8_t endAlpha = 0;
    };

    class YORDLE_EXPORT x8f1e6a22 : public xd1951f45 { 
    public:
        explicit x8f1e6a22(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2401135138 || xd1951f45::is_type(type);
        }

    };

    class YORDLE_EXPORT x6ce97639 : public xd1951f45 { 
    public:
        explicit x6ce97639(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1827239481 || xd1951f45::is_type(type);
        }

        uint8_t Edge = 0;
    };

    class YORDLE_EXPORT SceneData : public bin_class { 
    public:
        explicit SceneData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2867346523 || bin_class::is_type(type);
        }

        std::string mName {};
        bool mEnabled = false;
        uint32_t mLayer = 0;
        bool mHealthBar = false;
        bool x22413173 = false;
        uint32_t mParentScene = 0;
        std::shared_ptr<yordle::data::meta::xd1951f45> SceneTransitionIn {};
        std::shared_ptr<yordle::data::meta::xd1951f45> SceneTransitionOut {};
        bool xf80397ee = false;
    };

    class YORDLE_EXPORT AnchorBase : public bin_class { 
    public:
        explicit AnchorBase(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2131369601 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT AnchorSingle : public AnchorBase { 
    public:
        explicit AnchorSingle(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1396238320 || AnchorBase::is_type(type);
        }

        std::array<float, 2> anchor {};
    };

    class YORDLE_EXPORT AnchorDouble : public AnchorBase { 
    public:
        explicit AnchorDouble(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3742500809 || AnchorBase::is_type(type);
        }

        std::array<float, 2> anchorLeft {};
        std::array<float, 2> anchorRight {};
    };

    class YORDLE_EXPORT AtlasDataBase : public bin_class { 
    public:
        explicit AtlasDataBase(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2069111393 || bin_class::is_type(type);
        }

        std::string mTextureName {};
        uint32_t mTextureSourceResolutionWidth = 0;
        uint32_t mTextureSourceResolutionHeight = 0;
    };

    class YORDLE_EXPORT AtlasData : public AtlasDataBase { 
    public:
        explicit AtlasData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1906252436 || AtlasDataBase::is_type(type);
        }

        std::array<float, 4> mTextureUV {};
    };

    class YORDLE_EXPORT xb5d136db : public AtlasDataBase { 
    public:
        explicit xb5d136db(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3050387163 || AtlasDataBase::is_type(type);
        }

        std::array<float, 4> TextureUs {};
        std::array<float, 2> TextureVs {};
        std::array<float, 2> x1b57cc27 {};
    };

    class YORDLE_EXPORT xa3d11a85 : public AtlasDataBase { 
    public:
        explicit xa3d11a85(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2748390021 || AtlasDataBase::is_type(type);
        }

        std::array<float, 2> TextureUs {};
        std::array<float, 4> TextureVs {};
        std::array<float, 2> x15ec9181 {};
    };

    class YORDLE_EXPORT xab3d1567 : public AtlasDataBase { 
    public:
        explicit xab3d1567(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2872907111 || AtlasDataBase::is_type(type);
        }

        std::array<float, 4> TextureUs {};
        std::array<float, 4> TextureVs {};
        std::array<float, 2> x15ec9181 {};
        std::array<float, 2> x1b57cc27 {};
    };

    class YORDLE_EXPORT x231dd1a2 : public bin_class { 
    public:
        explicit x231dd1a2(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 589156770 || bin_class::is_type(type);
        }

        std::string mName {};
        uint32_t mScene = 0;
    };

    class YORDLE_EXPORT ElementSoundEvents : public bin_class { 
    public:
        explicit ElementSoundEvents(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2222311051 || bin_class::is_type(type);
        }

        std::string RolloverEvent {};
        std::string x210ea29e {};
        std::string MouseDownEvent {};
        std::string x452034c {};
        std::string MouseUpEvent {};
        std::string xb49ca145 {};
    };

    class YORDLE_EXPORT ElementGroupButtonState : public bin_class { 
    public:
        explicit ElementGroupButtonState(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3456684995 || bin_class::is_type(type);
        }

        std::set<uint32_t> displayElements {};
        uint32_t TextElement = 0;
    };

    class YORDLE_EXPORT ElementGroupData : public x231dd1a2 { 
    public:
        explicit ElementGroupData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4099288798 || x231dd1a2::is_type(type);
        }

        std::set<uint32_t> elements {};
    };

    class YORDLE_EXPORT x20d0e681 : public ElementGroupData { 
    public:
        explicit x20d0e681(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 550561409 || ElementGroupData::is_type(type);
        }

        uint32_t x76ef64de = 0;
    };

    class YORDLE_EXPORT ElementGroupGridData : public ElementGroupData { 
    public:
        explicit ElementGroupGridData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 761542854 || ElementGroupData::is_type(type);
        }

        uint32_t GridRegion = 0;
        uint32_t LayoutType = 0;
    };

    class YORDLE_EXPORT xaf7ac937 : public bin_class { 
    public:
        explicit xaf7ac937(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2944059703 || bin_class::is_type(type);
        }

        std::string xd8073196 {};
        std::string x8f1a336d {};
        std::string x73dbef7a {};
    };

    class YORDLE_EXPORT ElementGroupSliderState : public bin_class { 
    public:
        explicit ElementGroupSliderState(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2718727252 || bin_class::is_type(type);
        }

        uint32_t BarBackdrop = 0;
        uint32_t BarFill = 0;
        uint32_t sliderIcon = 0;
    };

    class YORDLE_EXPORT ElementGroupSliderData : public ElementGroupData { 
    public:
        explicit ElementGroupSliderData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 47538795 || ElementGroupData::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ElementGroupSliderState> DefaultState {};
        std::shared_ptr<yordle::data::meta::ElementGroupSliderState> SliderClickedState {};
        std::shared_ptr<yordle::data::meta::ElementGroupSliderState> x5b9cbd0 {};
        std::shared_ptr<yordle::data::meta::ElementGroupSliderState> xb4f0cbde {};
        uint32_t BarHitRegion = 0;
        uint32_t SliderHitRegion = 0;
        uint8_t direction = 0;
        std::shared_ptr<yordle::data::meta::xaf7ac937> soundEvents {};
    };

    class YORDLE_EXPORT IconElementDataExtension : public bin_class { 
    public:
        explicit IconElementDataExtension(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3681459597 || bin_class::is_type(type);
        }

    };

    class YORDLE_EXPORT IconElementGradientExtension : public IconElementDataExtension { 
    public:
        explicit IconElementGradientExtension(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3561233493 || IconElementDataExtension::is_type(type);
        }

        std::array<float, 4> mStartColor {};
        std::array<float, 4> mEndColor {};
        uint32_t mGradientDirection = 0;
        std::array<float, 4> x4dff519d {};
        std::string mAlphaTexture {};
    };

    class YORDLE_EXPORT X3DSharedConstantDef : public bin_class { 
    public:
        explicit X3DSharedConstantDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 19256412 || bin_class::is_type(type);
        }

        std::string name {};
        uint32_t type = 0;
        uint32_t Count = 0;
        int32_t _register = 0;
        bool SetManually = false;
        uint32_t PlatformMask = 0;
    };

    class YORDLE_EXPORT X3DSharedConstantBufferDef : public bin_class { 
    public:
        explicit X3DSharedConstantBufferDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2515485450 || bin_class::is_type(type);
        }

        std::string name {};
        uint32_t type = 0;
        uint32_t frequency = 0;
        std::set<std::shared_ptr<yordle::data::meta::X3DSharedConstantDef>> constants {};
        bool xa87049bc = false;
        int32_t _register = 0;
        uint32_t PlatformMask = 0;
    };

    class YORDLE_EXPORT X3DSharedData : public bin_class { 
    public:
        explicit X3DSharedData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 877304437 || bin_class::is_type(type);
        }

        std::set<uint32_t> xe595dd78 {};
        std::set<std::shared_ptr<yordle::data::meta::bin_class>> textures {};
    };

    class YORDLE_EXPORT X3DSharedTextureDef : public bin_class { 
    public:
        explicit X3DSharedTextureDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 927275163 || bin_class::is_type(type);
        }

        std::string name {};
        uint32_t type = 0;
        int32_t _register = 0;
        uint32_t PlatformMask = 0;
    };

    class YORDLE_EXPORT ContextualActionData : public IResource { 
    public:
        explicit ContextualActionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3476110372 || IResource::is_type(type);
        }

        float mCooldown = 0.0;
        float x9fd838b2 = 0.0;
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::ContextualSituation>> mSituations {};
        std::string mObjectPath {};
    };

    class YORDLE_EXPORT Champion : public WadFileDescriptor { 
    public:
        explicit Champion(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3931724966 || WadFileDescriptor::is_type(type);
        }

        std::string name {};
        std::set<uint32_t> statStoneSets {};
        std::shared_ptr<yordle::data::meta::ChampionItemRecommendations> mChampionItemRecommendations {};
        std::set<uint32_t> additionalCharacters {};
        int8_t fixedLoadScreenPosition = 0;
        uint32_t xc7d8a053 = 0;
    };

    class YORDLE_EXPORT AbilityResourceDynamicMaterialFloatDriver : public IDynamicMaterialFloatDriver { 
    public:
        explicit AbilityResourceDynamicMaterialFloatDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3549389049 || IDynamicMaterialFloatDriver::is_type(type);
        }

        uint8_t slot = 0;
    };

    class YORDLE_EXPORT AnimationFractionDynamicMaterialFloatDriver : public IDynamicMaterialFloatDriver { 
    public:
        explicit AnimationFractionDynamicMaterialFloatDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2143410291 || IDynamicMaterialFloatDriver::is_type(type);
        }

        uint32_t mAnimationName = 0;
    };

    class YORDLE_EXPORT BuffCounterDynamicMaterialFloatDriver : public IDynamicMaterialFloatDriver { 
    public:
        explicit BuffCounterDynamicMaterialFloatDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1465311360 || IDynamicMaterialFloatDriver::is_type(type);
        }

        std::string mScriptName {};
    };

    class YORDLE_EXPORT DistanceToPlayerMaterialFloatDriver : public IDynamicMaterialFloatDriver { 
    public:
        explicit DistanceToPlayerMaterialFloatDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2437143893 || IDynamicMaterialFloatDriver::is_type(type);
        }

        float minDistance = 0.0;
        float maxDistance = 0.0;
    };

    class YORDLE_EXPORT x1e6c47fe : public IDynamicMaterialFloatDriver { 
    public:
        explicit x1e6c47fe(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 510412798 || IDynamicMaterialFloatDriver::is_type(type);
        }

        std::string mKeyName {};
    };

    class YORDLE_EXPORT xe856a498 : public IDynamicMaterialFloatDriver { 
    public:
        explicit xe856a498(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3897992344 || IDynamicMaterialFloatDriver::is_type(type);
        }

        std::string mKeyName {};
    };

    class YORDLE_EXPORT HealthDynamicMaterialFloatDriver : public IDynamicMaterialFloatDriver { 
    public:
        explicit HealthDynamicMaterialFloatDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3630502631 || IDynamicMaterialFloatDriver::is_type(type);
        }

    };

    class YORDLE_EXPORT x1fbea063 : public IDynamicMaterialDriver { 
    public:
        explicit x1fbea063(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 532586595 || IDynamicMaterialDriver::is_type(type);
        }

    };

    class YORDLE_EXPORT UVScaleBiasFromAnimationDynamicMaterialDriver : public IDynamicMaterialDriver { 
    public:
        explicit UVScaleBiasFromAnimationDynamicMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3997290289 || IDynamicMaterialDriver::is_type(type);
        }

        std::string mSubMeshName {};
        uint32_t xdbad132e = 0;
    };

    class YORDLE_EXPORT VelocityDynamicMaterialFloatDriver : public IDynamicMaterialFloatDriver { 
    public:
        explicit VelocityDynamicMaterialFloatDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2561383746 || IDynamicMaterialFloatDriver::is_type(type);
        }

    };

    class YORDLE_EXPORT ParticleWadFileDescriptor : public WadFileDescriptor { 
    public:
        explicit ParticleWadFileDescriptor(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3162079434 || WadFileDescriptor::is_type(type);
        }

    };

    class YORDLE_EXPORT GdsMapObject : public GenericMapPlaceable { 
    public:
        explicit GdsMapObject(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3667811340 || GenericMapPlaceable::is_type(type);
        }

        uint8_t type = 0;
        bool ignoreCollisionOnPlacement = false;
        bool eyeCandy = false;
        std::array<float, 3> boxMin {};
        std::array<float, 3> boxMax {};
        uint32_t mapObjectSkinID = 0;
        std::set<std::shared_ptr<yordle::data::meta::GDSMapObjectExtraInfo>> extraInfo {};
    };

    class YORDLE_EXPORT Map : public WadFileDescriptor { 
    public:
        explicit Map(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3751997361 || WadFileDescriptor::is_type(type);
        }

        std::string mapStringId {};
        uint32_t BasedOnMap = 0;
        std::set<uint32_t> characterLists {};
        uint8_t x6744e6e3 = 0;
        std::shared_ptr<yordle::data::meta::MapVisibilityFlagDefinitions> x9e019715 {};
        std::shared_ptr<yordle::data::meta::MapNavigationGridOverlays> NavigationGridOverlays {};
    };

    class YORDLE_EXPORT MapBehavior : public GenericMapPlaceable { 
    public:
        explicit MapBehavior(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1013623483 || GenericMapPlaceable::is_type(type);
        }

        std::string Cue {};
        std::set<std::shared_ptr<yordle::data::meta::MapAction>> Actions {};
    };

    class YORDLE_EXPORT FxActionAnimate : public IFxAction { 
    public:
        explicit FxActionAnimate(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 132387460 || IFxAction::is_type(type);
        }

        std::string animName {};
        std::shared_ptr<yordle::data::meta::FxTarget> TargetObject {};
        bool xee7cd89a = false;
        bool Loop = false;
        bool PauseOnEnd = false;
    };

    class YORDLE_EXPORT x55d03617 : public IFxAction { 
    public:
        explicit x55d03617(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1439708695 || IFxAction::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::FxTransform> position {};
    };

    class YORDLE_EXPORT xda3ab4c4 : public IFxAction { 
    public:
        explicit xda3ab4c4(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3661280452 || IFxAction::is_type(type);
        }

        float Magnitude = 0.0;
        float xc4afd6f9 = 0.0;
        float FalloffRate = 0.0;
        std::array<float, 3> direction {};
    };

    class YORDLE_EXPORT xd082b191 : public IFxAction { 
    public:
        explicit xd082b191(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3498226065 || IFxAction::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::FxTransform> position {};
        float fov = 0.0;
        float yaw = 0.0;
        float pitch = 0.0;
        float x5a439ba5 = 0.0;
        float ZoomInTime = 0.0;
        float ZoomOutTime = 0.0;
        uint8_t ZoomInEase = 0;
        uint8_t ZoomOutEase = 0;
    };

    class YORDLE_EXPORT xa05a9472 : public IFxAction { 
    public:
        explicit xa05a9472(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2690290802 || IFxAction::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::FxTransform> position {};
        float fov = 0.0;
        float yaw = 0.0;
        float pitch = 0.0;
        float x5a439ba5 = 0.0;
        bool follow = false;
        uint8_t ZoomEase = 0;
    };

    class YORDLE_EXPORT x99cce3c : public IFxAction { 
    public:
        explicit x99cce3c(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 161271356 || IFxAction::is_type(type);
        }

        uint8_t ZoomEase = 0;
    };

    class YORDLE_EXPORT FxActionContinue : public IFxAction { 
    public:
        explicit FxActionContinue(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 554443936 || IFxAction::is_type(type);
        }

    };

    class YORDLE_EXPORT FxActionMove : public IFxAction { 
    public:
        explicit FxActionMove(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4118721504 || IFxAction::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::FxTarget> TargetObject {};
        std::shared_ptr<yordle::data::meta::FxTransform> Destination {};
        uint8_t EasingType = 0;
        float OvershootDistance = 0.0;
        bool FaceVelocity = false;
        bool xd935fe42 = false;
    };

    class YORDLE_EXPORT FxActionMoveBase : public IFxAction { 
    public:
        explicit FxActionMoveBase(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1015511333 || IFxAction::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::FxTarget> TargetObject {};
        uint8_t EasingType = 0;
        float OvershootDistance = 0.0;
        bool FaceVelocity = false;
    };

    class YORDLE_EXPORT FxActionMoveTo : public FxActionMoveBase { 
    public:
        explicit FxActionMoveTo(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 145984105 || FxActionMoveBase::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::FxTransform> Destination {};
    };

    class YORDLE_EXPORT FxActionMoveReset : public FxActionMoveBase { 
    public:
        explicit FxActionMoveReset(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1873184927 || FxActionMoveBase::is_type(type);
        }

    };

    class YORDLE_EXPORT FxActionSfx : public IFxAction { 
    public:
        explicit FxActionSfx(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3588503832 || IFxAction::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::FxTransform> position {};
        std::string EventName {};
    };

    class YORDLE_EXPORT FxActionTimeDilate : public IFxAction { 
    public:
        explicit FxActionTimeDilate(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2735193483 || IFxAction::is_type(type);
        }

        float TimeDilation = 0.0;
        float intime = 0.0;
        uint8_t InEase = 0;
        float OutTime = 0.0;
        uint8_t OutEase = 0;
    };

    class YORDLE_EXPORT FxActionVfx : public IFxAction { 
    public:
        explicit FxActionVfx(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4178543843 || IFxAction::is_type(type);
        }

        bool follow = false;
        std::shared_ptr<yordle::data::meta::FxTransform> position {};
        std::shared_ptr<yordle::data::meta::FxTransform> TargetPosition {};
        float scale = 0.0;
        uint32_t Particle = 0;
        float x39d6e480 = 0.0;
        bool FollowPath = false;
        std::shared_ptr<yordle::data::meta::FxTransform> PathTargetPosition {};
        std::shared_ptr<yordle::data::meta::ISplineInfo> SplineInfo {};
    };

    class YORDLE_EXPORT LolSpellScript : public RScript { 
    public:
        explicit LolSpellScript(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1775952673 || RScript::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ScriptGlobalProperties> globalProperties {};
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::bin_class>> sequences {};
        std::map<std::string, std::shared_ptr<yordle::data::meta::bin_class>> CustomSequences {};
        std::shared_ptr<yordle::data::meta::LoLSpellPreloadData> PreloadData {};
    };

    class YORDLE_EXPORT InstanceVarsTable : public ScriptTable { 
    public:
        explicit InstanceVarsTable(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4055000216 || ScriptTable::is_type(type);
        }

    };

    class YORDLE_EXPORT CharacterVarsTable : public ScriptTable { 
    public:
        explicit CharacterVarsTable(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1154861162 || ScriptTable::is_type(type);
        }

    };

    class YORDLE_EXPORT NextBuffVarsTable : public ScriptTable { 
    public:
        explicit NextBuffVarsTable(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 840789541 || ScriptTable::is_type(type);
        }

    };

    class YORDLE_EXPORT WorldVarsTable : public ScriptTable { 
    public:
        explicit WorldVarsTable(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1416785227 || ScriptTable::is_type(type);
        }

    };

    class YORDLE_EXPORT AvatarVarsTable : public ScriptTable { 
    public:
        explicit AvatarVarsTable(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 500954198 || ScriptTable::is_type(type);
        }

    };

    class YORDLE_EXPORT NextSpellVarsTable : public ScriptTable { 
    public:
        explicit NextSpellVarsTable(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2012327816 || ScriptTable::is_type(type);
        }

    };

    class YORDLE_EXPORT TempTable1Table : public ScriptTable { 
    public:
        explicit TempTable1Table(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1745220956 || ScriptTable::is_type(type);
        }

    };

    class YORDLE_EXPORT TempTable2Table : public ScriptTable { 
    public:
        explicit TempTable2Table(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 285936043 || ScriptTable::is_type(type);
        }

    };

    class YORDLE_EXPORT TempTable3Table : public ScriptTable { 
    public:
        explicit TempTable3Table(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1662218770 || ScriptTable::is_type(type);
        }

    };

    class YORDLE_EXPORT TFTItemMaterialController : public SkinnedMeshDataMaterialController { 
    public:
        explicit TFTItemMaterialController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2243645043 || SkinnedMeshDataMaterialController::is_type(type);
        }

    };

    class YORDLE_EXPORT x9e2b8a86 : public ViewController { 
    public:
        explicit x9e2b8a86(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2653653638 || ViewController::is_type(type);
        }

        uint32_t x41aa9616 = 0;
        uint32_t x143e4d96 = 0;
        std::string xeac10e8a {};
        std::string x8b76c33f {};
        std::string x73ce2a6 {};
        std::string x3ad4379e {};
        std::string x8ff1b151 {};
        std::string xf7ee4522 {};
        uint32_t x4babd89d = 0;
        uint32_t xf5b8026a = 0;
        uint32_t xc5c5ca0 = 0;
        std::shared_ptr<yordle::data::meta::x2610e5a7> xf2024d92 {};
        uint32_t Scene = 0;
        uint32_t x9dcf971d = 0;
        float xba1d038c = 0.0;
        uint32_t x75f9cc79 = 0;
    };

    class YORDLE_EXPORT TftGameStartViewController : public ViewController { 
    public:
        explicit TftGameStartViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 334936068 || ViewController::is_type(type);
        }

        uint32_t x81317ee6 = 0;
        uint32_t xfc59b058 = 0;
        uint32_t xf6a44ab6 = 0;
        float x56b85896 = 0.0;
        float x14713b68 = 0.0;
        float x87f66219 = 0.0;
    };

    class YORDLE_EXPORT TftUnitShopViewController : public ViewController { 
    public:
        explicit TftUnitShopViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2934583178 || ViewController::is_type(type);
        }

        uint32_t ToggleShopButton = 0;
        uint32_t LockButton = 0;
        uint32_t BuyExpButton = 0;
        uint32_t RerollButton = 0;
        uint32_t InfoButton = 0;
        uint32_t xa0ae7cfa = 0;
        float xc43a3d1f = 0.0;
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::x2781ed6b>> x2781ed6b {};
    };

    class YORDLE_EXPORT AnnouncementsViewController : public ViewController { 
    public:
        explicit AnnouncementsViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1353487870 || ViewController::is_type(type);
        }

        uint32_t x34b17566 = 0;
    };

    class YORDLE_EXPORT InvalidDeviceViewController : public ViewController { 
    public:
        explicit InvalidDeviceViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1813912031 || ViewController::is_type(type);
        }

    };

    class YORDLE_EXPORT LoginViewController : public ViewController { 
    public:
        explicit LoginViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1830754775 || ViewController::is_type(type);
        }

    };

    class YORDLE_EXPORT PatchingViewController : public ViewController { 
    public:
        explicit PatchingViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 161679594 || ViewController::is_type(type);
        }

        uint32_t BeginPatchingButtonDefinition = 0;
        uint32_t OpenTeamPlannerButtonDefinition = 0;
    };

    class YORDLE_EXPORT SummonerNameCreateViewController : public ViewController { 
    public:
        explicit SummonerNameCreateViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3950575855 || ViewController::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> x2992fe27 {};
        uint32_t SubmitButtonDefinition = 0;
    };

    class YORDLE_EXPORT TftTeamPlannerViewController : public ViewController { 
    public:
        explicit TftTeamPlannerViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3963535729 || ViewController::is_type(type);
        }

        float x6ee3bd2e = 0.0;
        std::shared_ptr<yordle::data::meta::ViewPaneDefinition> ViewPaneDefinition {};
        uint32_t ChampionButtonTemplate = 0;
        uint32_t xa88951d0 = 0;
        uint32_t ActiveTraitButtonTemplate = 0;
        uint32_t PaginateTraitButtonTemplate = 0;
        uint32_t CloseButtonTemplate = 0;
        uint32_t ClearButtonTemplate = 0;
        uint8_t ChampionsPerRow = 0;
        uint8_t TraitsPerRow = 0;
    };

    class YORDLE_EXPORT ChatViewController : public ViewController { 
    public:
        explicit ChatViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2038992222 || ViewController::is_type(type);
        }

        uint8_t defaultWordWrapMargin = 0;
        float hideAfterSeconds = 0.0;
        std::shared_ptr<yordle::data::meta::ViewPaneDefinition> ViewPaneDefinition {};
        uint32_t SceneChat = 0;
        uint32_t x8284ebb3 = 0;
        uint32_t xbc8c4eed = 0;
    };

    class YORDLE_EXPORT VfxProbabilityTableDataGrande : public ViewController { 
    public:
        explicit VfxProbabilityTableDataGrande(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2261862267 || ViewController::is_type(type);
        }

        uint32_t Scene = 0;
        uint32_t Backdrop = 0;
        float authoredWidth = 0.0;
        float SourceResolutionWidth = 0.0;
    };

    class YORDLE_EXPORT x75259ad3 : public ViewController { 
    public:
        explicit x75259ad3(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1965398739 || ViewController::is_type(type);
        }

        uint32_t CloseButtonDefinition = 0;
        uint32_t ConfirmButtonDefinition = 0;
        uint32_t CancelButtonDefinition = 0;
        uint32_t ContentScene = 0;
        std::shared_ptr<yordle::data::meta::ViewPaneDefinition> ViewPaneDefinition {};
    };

    class YORDLE_EXPORT ItemShopViewController : public ViewController { 
    public:
        explicit ItemShopViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3842081615 || ViewController::is_type(type);
        }

        float MaximumShopScale = 0.0;
        float MinimumShopScale = 0.0;
        uint32_t DragRegion = 0;
        uint32_t ResizeDragRegion = 0;
    };

    class YORDLE_EXPORT xe0e70cfc : public ViewController { 
    public:
        explicit xe0e70cfc(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3773238524 || ViewController::is_type(type);
        }

    };

    class YORDLE_EXPORT x4e4bbc2b : public ViewController { 
    public:
        explicit x4e4bbc2b(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1313586219 || ViewController::is_type(type);
        }

    };

    class YORDLE_EXPORT NavHeaderViewController : public ViewController { 
    public:
        explicit NavHeaderViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2972878046 || ViewController::is_type(type);
        }

        uint32_t backButton = 0;
        uint32_t socialButton = 0;
        uint32_t notificationsButton = 0;
        uint32_t settingsButton = 0;
        uint32_t MissionsButton = 0;
        uint32_t StarShardsButton = 0;
        uint32_t x93a118fb = 0;
        uint32_t x7b8e8695 = 0;
    };

    class YORDLE_EXPORT OptionsViewController : public ViewController { 
    public:
        explicit OptionsViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3154693744 || ViewController::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ViewPaneDefinition> ViewPaneDefinition {};
        uint32_t CloseButtonDefinition = 0;
        uint32_t TabButtonDefinition = 0;
        uint32_t Button1Definition = 0;
        uint32_t Button2Definition = 0;
        std::set<uint32_t> Tabs {};
        uint32_t x5a46f90c = 0;
        uint32_t LastItemPadding = 0;
    };

    class YORDLE_EXPORT PostGameViewController : public ViewController { 
    public:
        explicit PostGameViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3721213560 || ViewController::is_type(type);
        }

        uint32_t PlayAgainButtonDefinition = 0;
        uint32_t QuitButtonDefinition = 0;
        std::set<std::shared_ptr<yordle::data::meta::NamedIconData>> RankIconData {};
        uint32_t RankText = 0;
        uint32_t CurrentExpText = 0;
        uint32_t GainedExpText = 0;
        uint32_t LostExpText = 0;
        uint32_t PlacementTextRight = 0;
        uint32_t ProvisionalTextRight = 0;
        uint32_t BackgroundTexture = 0;
        uint32_t CurrentPlayerHighlight = 0;
        uint32_t GainedRatingText = 0;
        uint32_t LostRatingText = 0;
        uint32_t CurrentRatingText = 0;
        uint32_t x1abf4b19 = 0;
        std::set<std::shared_ptr<yordle::data::meta::NamedIconData>> RatedIconData {};
        uint32_t x8ecd9248 = 0;
    };

    class YORDLE_EXPORT CelebrationViewController : public ViewController { 
    public:
        explicit CelebrationViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2069136914 || ViewController::is_type(type);
        }

        float x615c3c29 = 0.0;
        std::string x4fe75004 {};
        std::map<std::string, std::string> xc4ecb642 {};
    };

    class YORDLE_EXPORT HomeViewController : public ViewController { 
    public:
        explicit HomeViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2222497939 || ViewController::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::ModeSelectButtonData>> ModeSelectCustomButtonData {};
        uint32_t ModeSelectDefaultButtonData = 0;
        uint32_t PlayGameButtonDefinition = 0;
        uint32_t BattlepassButtonDefinition = 0;
        uint32_t StoreButtonDefinition = 0;
        uint32_t TeamPlannerButtonDefinition = 0;
        uint32_t SpecialOfferButtonDefinition = 0;
        std::shared_ptr<yordle::data::meta::xfbd72d16> SpecialOfferController {};
        std::string ThemeMusicStateGroup {};
        std::string ThemeMusicState {};
        float xdc1d621e = 0.0;
        uint8_t x86a69e37 = 0;
    };

    class YORDLE_EXPORT LoadoutSelectViewController : public ViewController { 
    public:
        explicit LoadoutSelectViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2838012998 || ViewController::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::ILoadoutFeatureDataBehavior>> LoadoutsButtonData {};
    };

    class YORDLE_EXPORT LoadoutViewController : public ViewController { 
    public:
        explicit LoadoutViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 11657974 || ViewController::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> CompanionInfoPanel {};
        std::shared_ptr<yordle::data::meta::bin_class> ArenaInfoPanel {};
        std::shared_ptr<yordle::data::meta::bin_class> EmoteInfoPanel {};
        std::shared_ptr<yordle::data::meta::bin_class> DamageSkinInfoPanel {};
        uint32_t equipButton = 0;
        uint32_t gridItemButton = 0;
        uint32_t closeButton = 0;
        uint32_t upgradeButton = 0;
        uint32_t x91672418 = 0;
        uint32_t xd1abeb9d = 0;
        std::string SoundOnActivate {};
        std::string SoundOnDeActivate {};
    };

    class YORDLE_EXPORT LobbyViewController : public ViewController { 
    public:
        explicit LobbyViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 144791174 || ViewController::is_type(type);
        }

        uint32_t ReadyCheckAcceptButton = 0;
        uint32_t ReadyCheckDeclineButton = 0;
        uint32_t xd5989aae = 0;
        uint32_t LobbyCloseButton = 0;
        uint32_t FriendInviteButton = 0;
        uint32_t FriendEditButton = 0;
        uint32_t loadoutsButton = 0;
        std::string ThemeMusicStateGroup {};
        std::string LobbyMusicState {};
        std::string InQueueMusicState {};
        std::string x1a361782 {};
        std::map<int64_t, std::string> xbd29d956 {};
        std::string xa38f5021 {};
        std::string x72c4914b {};
        std::string xbf51f61a {};
        uint32_t x671c34c8 = 0;
        uint32_t xb3e2f60e = 0;
    };

    class YORDLE_EXPORT LootTableDialogViewController : public x75259ad3 { 
    public:
        explicit LootTableDialogViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1013446472 || x75259ad3::is_type(type);
        }

    };

    class YORDLE_EXPORT MissionsPanelViewController : public ViewController { 
    public:
        explicit MissionsPanelViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 162987137 || ViewController::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ViewPaneDefinition> ViewPaneDefinition {};
        float xfa7c8443 = 0.0;
        uint8_t xec740d9e = 0;
    };

    class YORDLE_EXPORT ModeSelectViewController : public ViewController { 
    public:
        explicit ModeSelectViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2036227663 || ViewController::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::QueueDisplayData>> queueDisplayData {};
        uint32_t x9e4be5ed = 0;
        uint32_t PageLeftButtonDefinition = 0;
        uint32_t PageRightButtonDefinition = 0;
        std::string SoundOnActivate {};
        std::string SoundOnDeActivate {};
        std::set<uint32_t> x71378d8b {};
    };

    class YORDLE_EXPORT NotificationsPanelViewController : public ViewController { 
    public:
        explicit NotificationsPanelViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 379849898 || ViewController::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ViewPaneDefinition> ViewPaneDefinition {};
        uint32_t ClearAllButtonDefinition = 0;
    };

    class YORDLE_EXPORT PurchaseDialog : public x75259ad3 { 
    public:
        explicit PurchaseDialog(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3947823298 || x75259ad3::is_type(type);
        }

        uint32_t purchaseButton = 0;
        uint32_t moreInfoButton = 0;
        uint32_t x88f6a038 = 0;
    };

    class YORDLE_EXPORT x39bbca88 : public x75259ad3 { 
    public:
        explicit x39bbca88(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 968608392 || x75259ad3::is_type(type);
        }

        uint32_t ActionButtonDefinition = 0;
    };

    class YORDLE_EXPORT SocialPanelViewController : public ViewController { 
    public:
        explicit SocialPanelViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4191775141 || ViewController::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ViewPaneDefinition> ViewPaneDefinition {};
        uint32_t AddFriendButtonDefinition = 0;
        uint32_t InviteButtonDefinition = 0;
        uint32_t FriendButtonDefinition = 0;
    };

    class YORDLE_EXPORT StoreViewController : public ViewController { 
    public:
        explicit StoreViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1146372659 || ViewController::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ViewPaneDefinition> MainViewPaneDefinition {};
        uint32_t x9eae8cc2 = 0;
        uint32_t xd2cc0cdf = 0;
        std::set<std::shared_ptr<yordle::data::meta::StoreCategoryButtonDefinition>> StoreCategoryButtonDefinitions {};
    };

    class YORDLE_EXPORT TFTBattlepassViewController : public ViewController { 
    public:
        explicit TFTBattlepassViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3603985163 || ViewController::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ViewPaneDefinition> ViewPaneDefinition {};
        uint32_t upgradePassButton = 0;
        uint32_t lootTableButton = 0;
        float xc034af02 = 0.0;
        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> x650b36b5 {};
        uint32_t x56f22512 = 0;
    };

    class YORDLE_EXPORT LoadoutArenaSkinInfoPanel : public ILoadoutInfoPanel { 
    public:
        explicit LoadoutArenaSkinInfoPanel(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2807723955 || ILoadoutInfoPanel::is_type(type);
        }

    };

    class YORDLE_EXPORT LoadoutCompanionInfoPanel : public ILoadoutInfoPanel { 
    public:
        explicit LoadoutCompanionInfoPanel(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 172106287 || ILoadoutInfoPanel::is_type(type);
        }

        std::set<uint32_t> tierButton {};
        std::set<uint32_t> upgradeTierButton {};
        uint32_t upgradeInfoText = 0;
        uint32_t upgradeErrorText = 0;
        uint32_t x6a5635f2 = 0;
        uint32_t x90dd73ef = 0;
    };

    class YORDLE_EXPORT LoadoutDamageSkinInfoPanel : public ILoadoutInfoPanel { 
    public:
        explicit LoadoutDamageSkinInfoPanel(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 845574667 || ILoadoutInfoPanel::is_type(type);
        }

        std::set<uint32_t> tierButton {};
    };

    class YORDLE_EXPORT LoadoutEmoteInfoPanel : public ILoadoutInfoPanel { 
    public:
        explicit LoadoutEmoteInfoPanel(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4100634241 || ILoadoutInfoPanel::is_type(type);
        }

        uint32_t EmoteWheelUpperButton = 0;
        uint32_t EmoteWheelLeftButton = 0;
        uint32_t EmoteWheelLowerButton = 0;
        uint32_t EmoteWheelRightButton = 0;
        uint32_t EmoteWheelCenterButton = 0;
        uint32_t emoteStartButton = 0;
        uint32_t emoteVictoryButton = 0;
    };

    class YORDLE_EXPORT x759a8c58 : public x75259ad3 { 
    public:
        explicit x759a8c58(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1973062744 || x75259ad3::is_type(type);
        }

        uint32_t upgradeText = 0;
        uint32_t errorText = 0;
        uint32_t ItemIcon = 0;
        uint32_t ItemFrame = 0;
        uint32_t RarityFrameCommon = 0;
        uint32_t RarityFrameEpic = 0;
        uint32_t RarityFrameLegendary = 0;
        uint32_t xda8bcd33 = 0;
        uint32_t x41ed38a6 = 0;
    };

    class YORDLE_EXPORT QuestTrackerViewController : public ViewController { 
    public:
        explicit QuestTrackerViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1257187638 || ViewController::is_type(type);
        }

        uint32_t x62eab0b = 0;
        std::shared_ptr<yordle::data::meta::HudMessageDisplayData> MessageDisplayData {};
        float xdba6febb = 0.0;
        float x18bae045 = 0.0;
        float x9fa3719e = 0.0;
        float x28f5e138 = 0.0;
        float xa0ae36a8 = 0.0;
        float xc67a95a4 = 0.0;
    };

    class YORDLE_EXPORT xe20be0be : public ViewController { 
    public:
        explicit xe20be0be(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3792429246 || ViewController::is_type(type);
        }

    };

    class YORDLE_EXPORT SettingsViewController : public ViewController { 
    public:
        explicit SettingsViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 172306941 || ViewController::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::GeneralSettingsGroup> GeneralSettings {};
        uint32_t closeButton = 0;
        uint32_t tabButton = 0;
        std::string SoundOnActivate {};
        std::string SoundOnDeActivate {};
    };

    class YORDLE_EXPORT TooltipInstanceSpell : public TooltipInstance { 
    public:
        explicit TooltipInstanceSpell(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2766224215 || TooltipInstance::is_type(type);
        }

        bool EnableExtendedTooltip = false;
    };

    class YORDLE_EXPORT TooltipInstanceBuff : public TooltipInstance { 
    public:
        explicit TooltipInstanceBuff(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1588263926 || TooltipInstance::is_type(type);
        }

        bool mEnableExtendedTooltip = false;
    };

    class YORDLE_EXPORT TooltipInstanceItem : public TooltipInstance { 
    public:
        explicit TooltipInstanceItem(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 905298284 || TooltipInstance::is_type(type);
        }

    };

    class YORDLE_EXPORT TooltipViewController : public ViewController { 
    public:
        explicit TooltipViewController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3013700229 || ViewController::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::x9e5aed77> DefaultAdjustments {};
        std::map<std::string, std::shared_ptr<yordle::data::meta::x9e5aed77>> xf5fc1d3a {};
        float x9e2fcad4 = 0.0;
        float x750ad235 = 0.0;
    };

    class YORDLE_EXPORT EsportsBannerMaterialController : public SkinnedMeshDataMaterialController { 
    public:
        explicit EsportsBannerMaterialController(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4231349552 || SkinnedMeshDataMaterialController::is_type(type);
        }

    };

    class YORDLE_EXPORT BlendableClipData : public ClipBaseData { 
    public:
        explicit BlendableClipData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1348327734 || ClipBaseData::is_type(type);
        }

        uint32_t mMaskDataName = 0;
        uint32_t mTrackDataName = 0;
        uint32_t mSyncGroupDataName = 0;
        std::map<uint32_t, std::shared_ptr<yordle::data::meta::BaseEventData>> mEventDataMap {};
    };

    class YORDLE_EXPORT ConditionBoolClipData : public ClipBaseData { 
    public:
        explicit ConditionBoolClipData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 358669516 || ClipBaseData::is_type(type);
        }

        uint32_t mUpdaterType = 0;
        bool mChangeAnimationMidPlay = false;
        bool x31db4e6a = false;
        bool x92213dee = false;
        uint32_t mTrueConditionClipName = 0;
        uint32_t mFalseConditionClipName = 0;
        float mChildAnimDelaySwitchTime = 0.0;
    };

    class YORDLE_EXPORT ConditionFloatClipData : public ClipBaseData { 
    public:
        explicit ConditionFloatClipData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2394679778 || ClipBaseData::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::ConditionFloatPairData>> mConditionFloatPairDataList {};
        uint32_t mUpdaterType = 0;
        bool mChangeAnimationMidPlay = false;
        bool x31db4e6a = false;
        bool x92213dee = false;
        float mChildAnimDelaySwitchTime = 0.0;
    };

    class YORDLE_EXPORT ParallelClipData : public ClipBaseData { 
    public:
        explicit ParallelClipData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 559985644 || ClipBaseData::is_type(type);
        }

        std::set<uint32_t> mClipNameList {};
    };

    class YORDLE_EXPORT ParametricClipData : public BlendableClipData { 
    public:
        explicit ParametricClipData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4071811009 || BlendableClipData::is_type(type);
        }

        uint32_t mUpdaterType = 0;
        std::set<std::shared_ptr<yordle::data::meta::ParametricPairData>> mParametricPairDataList {};
    };

    class YORDLE_EXPORT SelectorClipData : public ClipBaseData { 
    public:
        explicit SelectorClipData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1240774858 || ClipBaseData::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::SelectorPairData>> mSelectorPairDataList {};
    };

    class YORDLE_EXPORT SequencerClipData : public ClipBaseData { 
    public:
        explicit SequencerClipData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2368776128 || ClipBaseData::is_type(type);
        }

        std::set<uint32_t> mClipNameList {};
    };

    class YORDLE_EXPORT LinearTransformProcessorData : public ValueProcessorData { 
    public:
        explicit LinearTransformProcessorData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1133034384 || ValueProcessorData::is_type(type);
        }

        float mMultiplier = 0.0;
        float mIncrement = 0.0;
    };

    class YORDLE_EXPORT xc0c056f1 : public GenericMapPlaceable { 
    public:
        explicit xc0c056f1(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3233830641 || GenericMapPlaceable::is_type(type);
        }

        std::string PropName {};
        bool PlayIdleAnimation = false;
        std::string IdleAnimationName {};
        bool eyeCandy = false;
        uint32_t SkinID = 0;
        int32_t quality = 0;
        bool isClickable = false;
    };

    class YORDLE_EXPORT MapAudio : public GenericMapPlaceable { 
    public:
        explicit MapAudio(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2810433493 || GenericMapPlaceable::is_type(type);
        }

        std::string EventName {};
        uint32_t AudioType = 0;
        float startTime = 0.0;
        float xdf1b8a47 = 0.0;
        float x518f49b9 = 0.0;
    };

    class YORDLE_EXPORT MapCamera : public MapPlaceable { 
    public:
        explicit MapCamera(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1316167258 || MapPlaceable::is_type(type);
        }

        float x6f3e4327 = 0.0;
        float x563a1941 = 0.0;
        float pitch = 0.0;
        float yaw = 0.0;
        float FieldOfView = 0.0;
    };

    class YORDLE_EXPORT MapLocator : public GenericMapPlaceable { 
    public:
        explicit MapLocator(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2823085921 || GenericMapPlaceable::is_type(type);
        }

    };

    class YORDLE_EXPORT MapMotionPath : public MapPlaceable { 
    public:
        explicit MapMotionPath(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2059187804 || MapPlaceable::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::MapPathSegment>> Segments {};
    };

    class YORDLE_EXPORT ColorGraphMaterialDriver : public IDynamicMaterialDriver { 
    public:
        explicit ColorGraphMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 235706735 || IDynamicMaterialDriver::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IDynamicMaterialFloatDriver> driver {};
        std::shared_ptr<yordle::data::meta::VfxAnimatedColorVariableData> colors {};
    };

    class YORDLE_EXPORT FloatGraphMaterialDriver : public IDynamicMaterialDriver { 
    public:
        explicit FloatGraphMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3495696672 || IDynamicMaterialDriver::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IDynamicMaterialFloatDriver> driver {};
        std::shared_ptr<yordle::data::meta::VfxAnimatedFloatVariableData> graph {};
    };

    class YORDLE_EXPORT VfxSystemDefinitionData : public IResource { 
    public:
        explicit VfxSystemDefinitionData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1171098015 || IResource::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::VfxMaterialOverrideDefinitionData>> materialOverrideDefinitions {};
        std::set<std::shared_ptr<yordle::data::meta::VfxEmitterDefinitionData>> complexEmitterDefinitionData {};
        std::set<std::shared_ptr<yordle::data::meta::VfxEmitterDefinitionData>> simpleEmitterDefinitionData {};
        float visibilityRadius = 0.0;
        std::string particleName {};
        std::string particlePath {};
        std::optional<float> overrideScaleCap {};
        std::string soundOnCreateDefault {};
        std::string voiceOverOnCreateDefault {};
        std::string soundPersistentDefault {};
        std::string voiceOverPersistentDefault {};
        std::string assetCategory {};
        int32_t audioParameterFlexID = 0;
        float audioParameterTimeScaledDuration = 0.0;
        uint8_t flags = 0;
        float buildUpTime = 0.0;
        float selfIllumination = 0.0;
        std::set<std::shared_ptr<yordle::data::meta::VfxAssetRemap>> assetRemappingTable {};
        std::array<float, 3> systemTranslation {};
        std::array<float, 3> systemScale {};
        uint8_t drawingLayer = 0;
        float hudLayerDimension = 0.0;
        float HudLayerAspect = 0.0;
        bool hudAnchorPositionFromWorldProjection = false;
        bool scaleDynamicallyWithAttachedBone = false;
        bool mEyeCandy = false;
        bool xcf08f8e6 = false;
    };

    class YORDLE_EXPORT ColorChooserMaterialDriver : public IDynamicMaterialDriver { 
    public:
        explicit ColorChooserMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1258254170 || IDynamicMaterialDriver::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> mBoolDriver {};
        std::array<float, 4> mColorOn {};
        std::array<float, 4> mColorOff {};
    };

    class YORDLE_EXPORT FloatLiteralMaterialDriver : public IDynamicMaterialFloatDriver { 
    public:
        explicit FloatLiteralMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1895822007 || IDynamicMaterialFloatDriver::is_type(type);
        }

        float mValue = 0.0;
    };

    class YORDLE_EXPORT FloorFloatMaterialDriver : public IDynamicMaterialFloatDriver { 
    public:
        explicit FloorFloatMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2417503366 || IDynamicMaterialFloatDriver::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IDynamicMaterialFloatDriver> mDriver {};
    };

    class YORDLE_EXPORT IDynamicMaterialBoolDriver : public IDynamicMaterialFloatDriver { 
    public:
        explicit IDynamicMaterialBoolDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3663840478 || IDynamicMaterialFloatDriver::is_type(type);
        }

    };

    class YORDLE_EXPORT AllTrueMaterialDriver : public IDynamicMaterialBoolDriver { 
    public:
        explicit AllTrueMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2452878935 || IDynamicMaterialBoolDriver::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::IDynamicMaterialBoolDriver>> mDrivers {};
    };

    class YORDLE_EXPORT OneTrueMaterialDriver : public IDynamicMaterialBoolDriver { 
    public:
        explicit OneTrueMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3364456740 || IDynamicMaterialBoolDriver::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::IDynamicMaterialBoolDriver>> mDrivers {};
    };

    class YORDLE_EXPORT NotMaterialDriver : public IDynamicMaterialBoolDriver { 
    public:
        explicit NotMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3584469797 || IDynamicMaterialBoolDriver::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IDynamicMaterialBoolDriver> mDriver {};
    };

    class YORDLE_EXPORT CustomShaderDef : public IShaderDef { 
    public:
        explicit CustomShaderDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 542266838 || IShaderDef::is_type(type);
        }

        std::string objectPath {};
    };

    class YORDLE_EXPORT FixedShaderDef : public IShaderDef { 
    public:
        explicit FixedShaderDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4078053219 || IShaderDef::is_type(type);
        }

        std::string vertexShader {};
        std::string pixelShader {};
    };

    class YORDLE_EXPORT HybridMaterialDef : public CustomShaderDef { 
    public:
        explicit HybridMaterialDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3114171249 || CustomShaderDef::is_type(type);
        }

        std::string name {};
        uint32_t type = 0;
        uint32_t preset = 0;
        std::map<std::string, std::string> shaderMacros {};
        std::shared_ptr<yordle::data::meta::MaterialDataCollections> DataCollections {};
    };

    class YORDLE_EXPORT MaterialInstanceDef : public IResource { 
    public:
        explicit MaterialInstanceDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3883795674 || IResource::is_type(type);
        }

        std::string name {};
        uint32_t BaseMaterial = 0;
        std::set<std::shared_ptr<yordle::data::meta::xf7084b4a>> childTechniques {};
        std::map<std::string, std::string> shaderMacros {};
        std::map<uint16_t, std::shared_ptr<yordle::data::meta::MaterialInstanceParamDef>> params {};
        std::map<uint16_t, std::shared_ptr<yordle::data::meta::MaterialInstanceTextureDef>> textures {};
        std::map<uint16_t, std::shared_ptr<yordle::data::meta::MaterialInstanceSwitchDef>> switches {};
        std::map<uint16_t, std::shared_ptr<yordle::data::meta::MaterialInstanceDynamicParam>> DynamicParams {};
        std::map<uint16_t, std::shared_ptr<yordle::data::meta::MaterialInstanceDynamicTexture>> DynamicTextures {};
        std::shared_ptr<yordle::data::meta::MaterialInstanceDynamicSwitch> DynamicSwitch {};
        uint16_t DynamicSwitchId = 0;
    };

    class YORDLE_EXPORT StaticMaterialDef : public IResource { 
    public:
        explicit StaticMaterialDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4288492553 || IResource::is_type(type);
        }

        std::string name {};
        uint32_t type = 0;
        std::string defaultTechnique {};
        std::set<std::shared_ptr<yordle::data::meta::StaticMaterialShaderSamplerDef>> samplerValues {};
        std::set<std::shared_ptr<yordle::data::meta::StaticMaterialShaderParamDef>> paramValues {};
        std::set<std::shared_ptr<yordle::data::meta::StaticMaterialSwitchDef>> switches {};
        std::map<std::string, std::string> shaderMacros {};
        std::set<std::shared_ptr<yordle::data::meta::StaticMaterialTechniqueDef>> techniques {};
        std::set<std::shared_ptr<yordle::data::meta::StaticMaterialChildTechniqueDef>> childTechniques {};
        std::shared_ptr<yordle::data::meta::DynamicMaterialDef> dynamicMaterial {};
    };

    class YORDLE_EXPORT MapClouds : public MapGraphicsFeature { 
    public:
        explicit MapClouds(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1572954563 || MapGraphicsFeature::is_type(type);
        }

        std::string CloudsTexturePath {};
        std::array<float, 4> x64847953 {};
        std::set<std::shared_ptr<yordle::data::meta::MapCloudsLayer>> Layers {};
        bool IsEyeCandy = false;
    };

    class YORDLE_EXPORT BaseResourceResolver : public IResourceResolver { 
    public:
        explicit BaseResourceResolver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1923179998 || IResourceResolver::is_type(type);
        }

        std::map<uint32_t, uint32_t> resourceMap {};
    };

    class YORDLE_EXPORT GlobalResourceResolver : public BaseResourceResolver { 
    public:
        explicit GlobalResourceResolver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 199624956 || BaseResourceResolver::is_type(type);
        }

    };

    class YORDLE_EXPORT ResourceResolver : public BaseResourceResolver { 
    public:
        explicit ResourceResolver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4013559603 || BaseResourceResolver::is_type(type);
        }

    };

    class YORDLE_EXPORT SetVarInTableBlock : public IScriptBlock { 
    public:
        explicit SetVarInTableBlock(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3160901390 || IScriptBlock::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IScriptValueGet> value {};
        std::shared_ptr<yordle::data::meta::ScriptTableSet> Dest {};
    };

    class YORDLE_EXPORT ScriptCommentBlock : public IScriptBlock { 
    public:
        explicit ScriptCommentBlock(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 720031464 || IScriptBlock::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> Sequence {};
    };

    class YORDLE_EXPORT ConcatenateStringsBlock : public IScriptBlock { 
    public:
        explicit ConcatenateStringsBlock(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3143453189 || IScriptBlock::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IStringGet> String1 {};
        std::shared_ptr<yordle::data::meta::IStringGet> String2 {};
        std::shared_ptr<yordle::data::meta::StringTableSet> Result {};
    };

    class YORDLE_EXPORT CreateCustomTableBlock : public IScriptBlock { 
    public:
        explicit CreateCustomTableBlock(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3938181471 || IScriptBlock::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::CustomTableSet> CustomTable {};
    };

    class YORDLE_EXPORT DestroyCustomTableBlock : public IScriptBlock { 
    public:
        explicit DestroyCustomTableBlock(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3424357223 || IScriptBlock::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::CustomTableSet> CustomTable {};
    };

    class YORDLE_EXPORT SetKeyValueInCustomTableBlock : public IScriptBlock { 
    public:
        explicit SetKeyValueInCustomTableBlock(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2263334442 || IScriptBlock::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> CustomTable {};
        std::shared_ptr<yordle::data::meta::IScriptValueGet> Key {};
        std::shared_ptr<yordle::data::meta::IScriptValueGet> value {};
    };

    class YORDLE_EXPORT GetKeyValueInCustomTableBlock : public IScriptBlock { 
    public:
        explicit GetKeyValueInCustomTableBlock(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1569214838 || IScriptBlock::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> CustomTable {};
        std::shared_ptr<yordle::data::meta::IScriptValueGet> Key {};
        std::shared_ptr<yordle::data::meta::ScriptTableSet> OutValue {};
    };

    class YORDLE_EXPORT InsertIntoCustomTableBlock : public IScriptBlock { 
    public:
        explicit InsertIntoCustomTableBlock(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3439760492 || IScriptBlock::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> CustomTable {};
        std::shared_ptr<yordle::data::meta::bin_class> Index {};
        std::shared_ptr<yordle::data::meta::IScriptValueGet> value {};
        std::shared_ptr<yordle::data::meta::IntTableSet> OutIndex {};
    };

    class YORDLE_EXPORT RemoveFromCustomTableBlock : public IScriptBlock { 
    public:
        explicit RemoveFromCustomTableBlock(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2835506159 || IScriptBlock::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> CustomTable {};
        std::shared_ptr<yordle::data::meta::IScriptValueGet> Key {};
        std::shared_ptr<yordle::data::meta::bin_class> Index {};
    };

    class YORDLE_EXPORT GetSizeOfCustomTableBlock : public IScriptBlock { 
    public:
        explicit GetSizeOfCustomTableBlock(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 947658273 || IScriptBlock::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> CustomTable {};
        std::shared_ptr<yordle::data::meta::ScriptTableSet> OutSize {};
    };

    class YORDLE_EXPORT ForEachInCustomTableBlock : public IScriptBlock { 
    public:
        explicit ForEachInCustomTableBlock(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 31607380 || IScriptBlock::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> CustomTable {};
        bool SortedByKeys = false;
        std::shared_ptr<yordle::data::meta::ScriptTableSet> OutKey {};
        std::shared_ptr<yordle::data::meta::ScriptTableSet> OutValue {};
        std::shared_ptr<yordle::data::meta::bin_class> Sequence {};
    };

    class YORDLE_EXPORT CustomTableContainsValueBlock : public IScriptBlock { 
    public:
        explicit CustomTableContainsValueBlock(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 476310893 || IScriptBlock::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> CustomTable {};
        std::shared_ptr<yordle::data::meta::IScriptValueGet> value {};
        std::shared_ptr<yordle::data::meta::ScriptTableSet> OutKey {};
        std::shared_ptr<yordle::data::meta::BoolTableSet> OutWasFound {};
    };

    class YORDLE_EXPORT CreateFunctionBlock : public IScriptBlock { 
    public:
        explicit CreateFunctionBlock(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2568619062 || IScriptBlock::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::FunctionTableSet> Function {};
        std::shared_ptr<yordle::data::meta::FunctionDefinition> FunctionDefinition {};
    };

    class YORDLE_EXPORT IRunFunctionBlock : public IScriptBlock { 
    public:
        explicit IRunFunctionBlock(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 607501250 || IScriptBlock::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::bin_class> Function {};
        std::set<std::shared_ptr<yordle::data::meta::IScriptValueGet>> InputParameters {};
        std::set<std::shared_ptr<yordle::data::meta::ScriptTableSet>> OutputParameters {};
    };

    class YORDLE_EXPORT IScriptSequence : public RScript { 
    public:
        explicit IScriptSequence(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 903266502 || RScript::is_type(type);
        }

    };

    class YORDLE_EXPORT ScriptSequence : public IScriptSequence { 
    public:
        explicit ScriptSequence(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2793907875 || IScriptSequence::is_type(type);
        }

        std::set<std::shared_ptr<yordle::data::meta::IScriptBlock>> blocks {};
    };

    class YORDLE_EXPORT IBoolGet : public IScriptValueGet { 
    public:
        explicit IBoolGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2922520200 || IScriptValueGet::is_type(type);
        }

    };

    class YORDLE_EXPORT BoolGet : public IBoolGet { 
    public:
        explicit BoolGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1159336319 || IBoolGet::is_type(type);
        }

        bool value = false;
    };

    class YORDLE_EXPORT BoolTableGet : public IBoolGet { 
    public:
        explicit BoolTableGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3148945057 || IBoolGet::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ScriptTable> Table {};
        uint32_t Var = 0;
        std::optional<bool> Default {};
    };

    class YORDLE_EXPORT CustomTableGet : public IScriptValueGet { 
    public:
        explicit CustomTableGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2681684398 || IScriptValueGet::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ScriptTable> Table {};
        uint32_t Var = 0;
    };

    class YORDLE_EXPORT IFloatGet : public IScriptValueGet { 
    public:
        explicit IFloatGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2798892082 || IScriptValueGet::is_type(type);
        }

    };

    class YORDLE_EXPORT FloatGet : public IFloatGet { 
    public:
        explicit FloatGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1608666903 || IFloatGet::is_type(type);
        }

        float value = 0.0;
    };

    class YORDLE_EXPORT FloatTableGet : public IFloatGet { 
    public:
        explicit FloatTableGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3990037433 || IFloatGet::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ScriptTable> Table {};
        uint32_t Var = 0;
        std::optional<float> Default {};
    };

    class YORDLE_EXPORT FloatOffsetTableGet : public IFloatGet { 
    public:
        explicit FloatOffsetTableGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 317190090 || IFloatGet::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ScriptTable> Table {};
        uint32_t Var = 0;
        float offset = 0.0;
    };

    class YORDLE_EXPORT IFunctionGet : public IScriptValueGet { 
    public:
        explicit IFunctionGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4245932760 || IScriptValueGet::is_type(type);
        }

    };

    class YORDLE_EXPORT FunctionTableGet : public IFunctionGet { 
    public:
        explicit FunctionTableGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 800615629 || IFunctionGet::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ScriptTable> Table {};
        uint32_t Var = 0;
    };

    class YORDLE_EXPORT IIntGet : public IScriptValueGet { 
    public:
        explicit IIntGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3256124575 || IScriptValueGet::is_type(type);
        }

    };

    class YORDLE_EXPORT IntGet : public IIntGet { 
    public:
        explicit IntGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 708175882 || IIntGet::is_type(type);
        }

        int32_t value = 0;
    };

    class YORDLE_EXPORT IntTableGet : public IIntGet { 
    public:
        explicit IntTableGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3112089886 || IIntGet::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ScriptTable> Table {};
        uint32_t Var = 0;
        std::optional<int32_t> Default {};
    };

    class YORDLE_EXPORT IntOffsetTableGet : public IIntGet { 
    public:
        explicit IntOffsetTableGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1534915661 || IIntGet::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ScriptTable> Table {};
        uint32_t Var = 0;
        int32_t offset = 0;
    };

    class YORDLE_EXPORT ScriptTableGet : public IScriptValueGet { 
    public:
        explicit ScriptTableGet(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 574110442 || IScriptValueGet::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ScriptTable> Table {};
        uint32_t Var = 0;
    };

    class YORDLE_EXPORT BaseElementData : public x231dd1a2 { 
    public:
        explicit BaseElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3202633864 || x231dd1a2::is_type(type);
        }

        bool mEnabled = false;
        uint32_t mDraggable = 0;
        bool StickyDrag = false;
        uint32_t mLayer = 0;
        std::shared_ptr<yordle::data::meta::AnchorBase> mAnchors {};
        bool mNoPixelSnappingX = false;
        bool mNoPixelSnappingY = false;
        std::array<float, 4> mRect {};
        bool mUseRectSourceResolutionAsFloor = false;
        uint16_t mRectSourceResolutionWidth = 0;
        uint16_t mRectSourceResolutionHeight = 0;
        bool mKeepMaxScale = false;
        bool mFullscreen = false;
        std::set<std::array<float, 2>> mHitTestPolygon {};
        bool x258bae9a = false;
    };

    class YORDLE_EXPORT EffectElementData : public BaseElementData { 
    public:
        explicit EffectElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2739628964 || BaseElementData::is_type(type);
        }

    };

    class YORDLE_EXPORT EffectCooldownElementData : public EffectElementData { 
    public:
        explicit EffectCooldownElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3191832311 || EffectElementData::is_type(type);
        }

        std::array<uint8_t, 4> mEffectColor0 {};
        std::array<uint8_t, 4> mEffectColor1 {};
    };

    class YORDLE_EXPORT EffectCircleMaskCooldownElementData : public EffectElementData { 
    public:
        explicit EffectCircleMaskCooldownElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4086628699 || EffectElementData::is_type(type);
        }

        std::array<uint8_t, 4> mEffectColor0 {};
        std::array<uint8_t, 4> mEffectColor1 {};
    };

    class YORDLE_EXPORT EffectCooldownRadialElementData : public EffectElementData { 
    public:
        explicit EffectCooldownRadialElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2174290526 || EffectElementData::is_type(type);
        }

        bool mIsFill = false;
        bool mFlipX = false;
        bool mFlipY = false;
        bool mPerPixelUvsX = false;
        std::shared_ptr<yordle::data::meta::AtlasData> mAtlas {};
    };

    class YORDLE_EXPORT EffectArcFillElementData : public EffectElementData { 
    public:
        explicit EffectArcFillElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2608359503 || EffectElementData::is_type(type);
        }

        bool mFlipX = false;
        bool mFlipY = false;
        bool mPerPixelUvsX = false;
        std::shared_ptr<yordle::data::meta::AtlasData> mAtlas {};
    };

    class YORDLE_EXPORT EffectAmmoElementData : public EffectElementData { 
    public:
        explicit EffectAmmoElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3262156994 || EffectElementData::is_type(type);
        }

        std::array<uint8_t, 4> mEffectColor0 {};
        std::array<uint8_t, 4> mEffectColor1 {};
    };

    class YORDLE_EXPORT EffectGlowElementData : public EffectElementData { 
    public:
        explicit EffectGlowElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3998066495 || EffectElementData::is_type(type);
        }

        bool mFlipX = false;
        bool mFlipY = false;
        bool mPerPixelUvsX = false;
        std::shared_ptr<yordle::data::meta::AtlasData> mAtlas {};
        float CycleTime = 0.0;
        float BaseScale = 0.0;
        float CycleBasedScaleAddition = 0.0;
        float MinimumAlpha = 0.0;
    };

    class YORDLE_EXPORT EffectAnimationElementData : public EffectElementData { 
    public:
        explicit EffectAnimationElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1913369002 || EffectElementData::is_type(type);
        }

        bool mFlipX = false;
        bool mFlipY = false;
        bool mPerPixelUvsX = false;
        std::shared_ptr<yordle::data::meta::AtlasData> mAtlas {};
        float FramesPerSecond = 0.0;
        float TotalNumberOfFrames = 0.0;
        float NumberOfFramesPerRowInAtlas = 0.0;
        bool mLooping = false;
        uint8_t mFinishBehavior = 0;
    };

    class YORDLE_EXPORT EffectFillPercentageElementData : public EffectElementData { 
    public:
        explicit EffectFillPercentageElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 220339975 || EffectElementData::is_type(type);
        }

        bool mFlipX = false;
        bool mFlipY = false;
        bool mPerPixelUvsX = false;
        std::shared_ptr<yordle::data::meta::AtlasData> mAtlas {};
    };

    class YORDLE_EXPORT EffectDesaturateElementData : public EffectElementData { 
    public:
        explicit EffectDesaturateElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1335813830 || EffectElementData::is_type(type);
        }

        bool mFlipX = false;
        bool mFlipY = false;
        bool mPerPixelUvsX = false;
        std::shared_ptr<yordle::data::meta::AtlasData> mAtlas {};
        float MinimumSaturation = 0.0;
        float MaximumSaturation = 0.0;
    };

    class YORDLE_EXPORT EffectRotatingIconElementData : public EffectElementData { 
    public:
        explicit EffectRotatingIconElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2820872175 || EffectElementData::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::AtlasData> mAtlas {};
    };

    class YORDLE_EXPORT EffectGlowingRotatingIconElementData : public EffectRotatingIconElementData { 
    public:
        explicit EffectGlowingRotatingIconElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 178804058 || EffectRotatingIconElementData::is_type(type);
        }

        float CycleTime = 0.0;
        float x54c178e = 0.0;
    };

    class YORDLE_EXPORT EffectAnimatedRotatingIconElementData : public EffectAnimationElementData { 
    public:
        explicit EffectAnimatedRotatingIconElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2170661496 || EffectAnimationElementData::is_type(type);
        }

    };

    class YORDLE_EXPORT EffectLineElementData : public EffectElementData { 
    public:
        explicit EffectLineElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1581670814 || EffectElementData::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::AtlasData> mAtlas {};
        float mThickness = 0.0;
        float mRightSlicePercentage = 0.0;
    };

    class YORDLE_EXPORT EffectInstancedElementData : public EffectElementData { 
    public:
        explicit EffectInstancedElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2901870171 || EffectElementData::is_type(type);
        }

        bool mFlipX = false;
        bool mFlipY = false;
        bool mPerPixelUvsX = false;
        std::shared_ptr<yordle::data::meta::AtlasData> mAtlas {};
        std::set<std::array<float, 2>> mAdditionalOffsets {};
    };

    class YORDLE_EXPORT EffectCircleMaskDesaturateElementData : public EffectDesaturateElementData { 
    public:
        explicit EffectCircleMaskDesaturateElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3706969042 || EffectDesaturateElementData::is_type(type);
        }

    };

    class YORDLE_EXPORT xf6fd1c96 : public EffectElementData { 
    public:
        explicit xf6fd1c96(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4143783062 || EffectElementData::is_type(type);
        }

        uint32_t mMaterial = 0;
    };

    class YORDLE_EXPORT ElementGroupButtonData : public ElementGroupData { 
    public:
        explicit ElementGroupButtonData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3590855006 || ElementGroupData::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::ElementGroupButtonState> defaultStateElements {};
        std::shared_ptr<yordle::data::meta::ElementGroupButtonState> InactiveStateElements {};
        std::shared_ptr<yordle::data::meta::ElementGroupButtonState> hoverStateElements {};
        std::shared_ptr<yordle::data::meta::ElementGroupButtonState> xad0f8882 {};
        std::shared_ptr<yordle::data::meta::ElementGroupButtonState> selectedStateElements {};
        std::shared_ptr<yordle::data::meta::ElementGroupButtonState> SelectedHoverStateElements {};
        std::shared_ptr<yordle::data::meta::ElementGroupButtonState> SelectedClickedStateElements {};
        uint32_t hitRegionElement = 0;
        uint32_t ClickReleaseParticleElement = 0;
        std::shared_ptr<yordle::data::meta::ElementSoundEvents> soundEvents {};
        std::string ActiveTooltipTraKey {};
        std::string InactiveTooltipTraKey {};
        bool IsActive = false;
        bool IsEnabled = false;
        bool IsSelected = false;
    };

    class YORDLE_EXPORT IconElementData : public BaseElementData { 
    public:
        explicit IconElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1005588128 || BaseElementData::is_type(type);
        }

        std::array<uint8_t, 4> mColor {};
        bool mUseAlpha = false;
        bool mPerPixelUvsX = false;
        bool mFlipX = false;
        bool mFlipY = false;
        std::shared_ptr<yordle::data::meta::AtlasDataBase> mAtlas {};
        uint32_t mMaterial = 0;
        std::shared_ptr<yordle::data::meta::IconElementDataExtension> mExtension {};
    };

    class YORDLE_EXPORT ParticleSystemElementData : public BaseElementData { 
    public:
        explicit ParticleSystemElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3716126038 || BaseElementData::is_type(type);
        }

        uint32_t mVfxSystem = 0;
        uint32_t xc47cf6c7 = 0;
        bool x2824440 = false;
        bool x94b088ea = false;
        bool x8ef629c9 = false;
    };

    class YORDLE_EXPORT RegionElementData : public BaseElementData { 
    public:
        explicit RegionElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1859523703 || BaseElementData::is_type(type);
        }

    };

    class YORDLE_EXPORT ScissorRegionElementData : public BaseElementData { 
    public:
        explicit ScissorRegionElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3070309571 || BaseElementData::is_type(type);
        }

        uint32_t xaccc80b5 = 0;
    };

    class YORDLE_EXPORT TextElementData : public BaseElementData { 
    public:
        explicit TextElementData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2622984950 || BaseElementData::is_type(type);
        }

        std::string TraKey {};
        uint32_t mFontDescription = 0;
        uint8_t mTextAlignmentHorizontal = 0;
        uint8_t mTextAlignmentVertical = 0;
        uint32_t x7c0a8359 = 0;
        uint8_t WrappingMode = 0;
        float iconScale = 0.0;
    };

    class YORDLE_EXPORT x9bd21f30 : public IDynamicMaterialBoolDriver { 
    public:
        explicit x9bd21f30(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2614239024 || IDynamicMaterialBoolDriver::is_type(type);
        }

        std::string mKeyName {};
    };

    class YORDLE_EXPORT xd0116dc8 : public IDynamicMaterialBoolDriver { 
    public:
        explicit xd0116dc8(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3490803144 || IDynamicMaterialBoolDriver::is_type(type);
        }

        std::string mKeyName {};
    };

    class YORDLE_EXPORT HasBuffDynamicMaterialBoolDriver : public IDynamicMaterialBoolDriver { 
    public:
        explicit HasBuffDynamicMaterialBoolDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2331705440 || IDynamicMaterialBoolDriver::is_type(type);
        }

        std::string mScriptName {};
        float xff80df7a = 0.0;
    };

    class YORDLE_EXPORT HasGearDynamicMaterialBoolDriver : public IDynamicMaterialBoolDriver { 
    public:
        explicit HasGearDynamicMaterialBoolDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1914613726 || IDynamicMaterialBoolDriver::is_type(type);
        }

        uint8_t mGearIndex = 0;
    };

    class YORDLE_EXPORT IsAnimationPlayingDynamicMaterialBoolDriver : public IDynamicMaterialBoolDriver { 
    public:
        explicit IsAnimationPlayingDynamicMaterialBoolDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 141658293 || IDynamicMaterialBoolDriver::is_type(type);
        }

        std::set<uint32_t> mAnimationNames {};
    };

    class YORDLE_EXPORT IsDeadDynamicMaterialBoolDriver : public IDynamicMaterialBoolDriver { 
    public:
        explicit IsDeadDynamicMaterialBoolDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 4199153591 || IDynamicMaterialBoolDriver::is_type(type);
        }

    };

    class YORDLE_EXPORT IsEnemyDynamicMaterialBoolDriver : public IDynamicMaterialBoolDriver { 
    public:
        explicit IsEnemyDynamicMaterialBoolDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3177246235 || IDynamicMaterialBoolDriver::is_type(type);
        }

    };

    class YORDLE_EXPORT IsInGrassDynamicMaterialBoolDriver : public IDynamicMaterialBoolDriver { 
    public:
        explicit IsInGrassDynamicMaterialBoolDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3727041878 || IDynamicMaterialBoolDriver::is_type(type);
        }

    };

    class YORDLE_EXPORT LearnedSpellDynamicMaterialBoolDriver : public IDynamicMaterialBoolDriver { 
    public:
        explicit LearnedSpellDynamicMaterialBoolDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 820959864 || IDynamicMaterialBoolDriver::is_type(type);
        }

        uint8_t mSlot = 0;
    };

    class YORDLE_EXPORT MessageBoxDialog : public x75259ad3 { 
    public:
        explicit MessageBoxDialog(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3766132529 || x75259ad3::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::HudMenuTransitionData> x806ad11a {};
        uint32_t ConfirmButtonIcons = 0;
        uint32_t CancelButtonIcons = 0;
    };

    class YORDLE_EXPORT AtomicClipData : public BlendableClipData { 
    public:
        explicit AtomicClipData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1540989414 || BlendableClipData::is_type(type);
        }

        float mTickDuration = 0.0;
        std::shared_ptr<yordle::data::meta::AnimationResourceData> mAnimationResourceData {};
        std::shared_ptr<yordle::data::meta::UpdaterResourceData> mUpdaterResourceData {};
    };

    class YORDLE_EXPORT DelayedBoolMaterialDriver : public IDynamicMaterialBoolDriver { 
    public:
        explicit DelayedBoolMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 347152410 || IDynamicMaterialBoolDriver::is_type(type);
        }

        std::shared_ptr<yordle::data::meta::IDynamicMaterialBoolDriver> mBoolDriver {};
        float mDelayOn = 0.0;
        float mDelayOff = 0.0;
    };

    class YORDLE_EXPORT FixedDurationTriggeredBoolDriver : public IDynamicMaterialBoolDriver { 
    public:
        explicit FixedDurationTriggeredBoolDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 62039180 || IDynamicMaterialBoolDriver::is_type(type);
        }

        float mCustomDuration = 0.0;
        std::shared_ptr<yordle::data::meta::IDynamicMaterialBoolDriver> mBoolDriver {};
    };

    class YORDLE_EXPORT FloatComparisonMaterialDriver : public IDynamicMaterialBoolDriver { 
    public:
        explicit FloatComparisonMaterialDriver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 2428279575 || IDynamicMaterialBoolDriver::is_type(type);
        }

        uint32_t mOperator = 0;
        std::shared_ptr<yordle::data::meta::IDynamicMaterialFloatDriver> mValueA {};
        std::shared_ptr<yordle::data::meta::IDynamicMaterialFloatDriver> mValueB {};
    };

}

/// </auto-generated>
